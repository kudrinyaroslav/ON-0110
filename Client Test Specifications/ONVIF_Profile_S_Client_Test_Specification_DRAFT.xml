<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- 
For online publishing use:
<?xml-stylesheet type="text/xsl" 
href="http://docs.oasis-open.org/templates/DocBook/spec-0.5/stylesheets/oasis-specification-html.xsl"?>
<!DOCTYPE article
  PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd" 

For offline publishing use:
<?xml-stylesheet type="text/xsl" 
href="file:///c:/oasis/spec-0.5/stylesheets/oasis-specification-html-offline.xsl"?>
<!DOCTYPE article
  PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"file:///c:/oasis/spec-0.5/docbook/docbookx.dtd" 
-->
<?xml-stylesheet type="text/xsl" 
    href="http://docs.oasis-open.org/templates/DocBook/spec-0.5/stylesheets/oasis-specification-html.xsl"?>
<!DOCTYPE article
  PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<article>
    <articleinfo>
        <title>ONVIF Profile S Client Test Specification</title>
        <subtitle>Version 15.06 June, 2015</subtitle>
        <productname>ONVIF Profile S Client Test Specification</productname>
        <productnumber>Version 15.06 June, 2015</productnumber>
        <copyright>
            <year>2015</year>
            <holder>ONVIF, Inc. All rights reserved. www.onvif.org</holder>
        </copyright>
        <legalnotice role="notices">
            <para>Recipients of this document may copy, distribute, publish, or display this
                document so long as this copyright notice, license and disclaimer are retained with
                all copies of the document. No license is granted to modify this document.</para>
            <para>THIS DOCUMENT IS PROVIDED "AS IS," AND THE CORPORATION AND ITS MEMBERS AND THEIR
                AFFILIATES, MAKE NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT
                NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE,
                NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THIS DOCUMENT ARE SUITABLE FOR ANY
                PURPOSE; OR THAT THE IMPLEMENTATION OF SUCH CONTENTS WILL NOT INFRINGE ANY PATENTS,
                COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS.</para>
            <para>IN NO EVENT WILL THE CORPORATION OR ITS MEMBERS OR THEIR AFFILIATES BE LIABLE FOR
                ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL, PUNITIVE OR CONSEQUENTIAL DAMAGES,
                ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT, WHETHER OR
                NOT (1) THE CORPORATION, MEMBERS OR THEIR AFFILIATES HAVE BEEN ADVISED OF THE
                POSSIBILITY OF SUCH DAMAGES, OR (2) SUCH DAMAGES WERE REASONABLY FORESEEABLE, AND
                ARISING OUT OF OR RELATING TO ANY USE OR DISTRIBUTION OF THIS DOCUMENT. THE
                FOREGOING DISCLAIMER AND LIMITATION ON LIABILITY DO NOT APPLY TO, INVALIDATE, OR
                LIMIT REPRESENTATIONS AND WARRANTIES MADE BY THE MEMBERS AND THEIR RESPECTIVE
                AFFILIATES TO THE CORPORATION AND OTHER MEMBERS IN CERTAIN WRITTEN POLICIES OF THE
                CORPORATION.</para>
        </legalnotice>
    </articleinfo>
    <section id="s.intro">
        <title>Introduction</title>
        <para>The goal of the ONVIF Test Specification set is to make it possible to realize fully
            interoperable IP physical security implementations from different vendors. This
            specification also acts as an input document to the development of a test tool which
            will be used to test the ONVIF Client implementation conformance towards ONVIF standard.
            This Client Test Tool analyzes network communications between ONVIF Devices and Clients
            being tested and determines whether a specific Client is ONVIF conformant (see ONVIF
            Conformance Process Specification).</para>
        <para>This particular document defines test cases required for testing Profile S features of
            a Client application e.g. Media Streaming, Video Streaming, Multicast Streaming, Video
            Encoder Configuration, Media Profile Creation and Video Source Configuration. It also
            describes the test framework, test setup, prerequisites, test policies needed for the
            execution of the described test cases.</para>
        <section id="s.scope">
            <title>Scope</title>
            <para>This ONVIF Profile S Client Test Specification defines and regulates the
                conformance testing procedure for the ONVIF conformant Clients in the scope of
                Profile S features. Conformance testing is meant to be black-box network traces
                analysis and verification. The objective of this specification is to provide the
                test cases to test individual requirements of ONVIF Clients in the scope of Profile
                S features according to ONVIF Profile Specifications.</para>
            <para>The principal intended purposes are:<itemizedlist>
                    <listitem>
                        <para>Provide self-assessment tool for implementations.</para>
                    </listitem>
                    <listitem>
                        <para>Provide comprehensive test suite coverage for Profile S
                            features.</para>
                    </listitem>
                </itemizedlist></para>
            <para>This specification <emphasis role="bold">does not</emphasis> address the following:<itemizedlist>
                    <listitem>
                        <para>Product use cases and non-functional (performance and regression)
                            testing and analysis.</para>
                    </listitem>
                    <listitem>
                        <para>SOAP Implementation Interoperability test i.e. Web Services
                            Interoperability Basic Profile version 2.0 (WS-I BP2.0).</para>
                    </listitem>
                    <listitem>
                        <para>Network protocol implementation Conformance test for HTTPS, HTTP, RTP
                            and RTSP protocols.</para>
                    </listitem>
                </itemizedlist></para>
            <para>The following sections cover test cases needed for the verification of relevant
                features as mentioned in the ONVIF Profile Specifications.</para>
        </section>
        <section>
            <title>Media Streaming</title>
            <para>Media Streaming section defines different streaming options based on RTP protocol
                which are required for all types of streams of video, audio and metadata. Media
                control is done using RTSP protocol.</para>
        </section>
        <section>
            <title>Video Streaming</title>
            <para>Video Streaming section specifies Client ability to establish specific video
                streams in MJPEG, MPEG4 and H264 video formats.</para>
        </section>
        <section>
            <title>Multicast Streaming</title>
            <para>Multicast Streaming section specifies Client ability to initiate multicast stream
                by using StartMulticastStreaming and StopMulticastStreaming operations or by using
                RTSP SETUP command with multicast transport parameter.</para>
        </section>
        <section>
            <title>Video Encoder Configuration</title>
            <para>Video Encoder Configurations section specifies listing and modification of video
                encoder configurations on Device.</para>
        </section>
        <section>
            <title>Media Profile Creation</title>
            <para>Media Profile Configurations section specifies creation and retrieval of Media
                Profile Configurations from Device.</para>
        </section>
        <section>
            <title>Video Source Configuration</title>
            <para>Video Source Configurations section specifies listing and modification of video
                source configurations on Device.</para>
        </section>
        <section>
            <title>PTZ - Listing</title>
            <para>PTZ - Listing section specifies Client ability to read PTZ capabilities.</para>
        </section>
        <section>
            <title>PTZ - Configuration</title>
            <para>PTZ - Configuration section specifies Client ability to add PTZ configuration to a
                media profile.</para>
        </section>
        <section>
            <title>PTZ - Continuous Positioning</title>
            <para>PTZ - Continuous Move section specifies Client ability to move a PTZ Device using
                ContinuousMove operation and stop ongoing movement using Stop operation or sending
                zero values for Pan/Tilt and Zoom.</para>
        </section>
        <section>
            <title>PTZ - Absolute Positioning</title>
            <para>PTZ - Absolute Positioning section specifies Client ability to move a PTZ Device
                using the AbsoluteMove operation.</para>
        </section>
        <section>
            <title>PTZ - Relative Positioning</title>
            <para>PTZ - Relative Positioning section specifies Client ability to move a PTZ Device
                using the RelativeMove operation.</para>
        </section>
        <section>
            <title>PTZ - Presets</title>
            <para>PTZ - Presets section specifies Client ability to list the presets of a PTZ Node
                and move a PTZ Device to a specific preset.</para>
        </section>
        <section>
            <title>PTZ - Home Position</title>
            <para>PTZ - Home Position section specifies Client ability to move a PTZ Device to its
                home position.</para>
        </section>
        <section>
            <title>PTZ - Auxiliary Command</title>
            <para>PTZ - Auxiliary Command section specifies Client ability to send auxiliary
                commands to a PTZ Device.</para>
        </section>
        <section>
            <title>Audio Streaming</title>
            <para>Audio Streaming section specifies Client ability to initiate audio stream in
                G.711, G.726 and AAC encoding formats. This section also specifies Client ability to
                configure a media profile for audio streaming.</para>
        </section>
    </section>
    <section id="s.docbook">
        <title>Normative references</title>
        <para>ONVIF Conformance Process Specification:</para>
        <para><ulink url="http://www.onvif.org/Documents/Specifications.aspx"/></para>
        <para>ONVIF Profile Policy:</para>
        <para><ulink url="http://www.onvif.org/Documents/Specifications.aspx"/></para>
        <para>ONVIF Core Specifications:</para>
        <para><ulink url="http://www.onvif.org/Documents/Specifications.aspx"/></para>
        <para>ONVIF Core Client Test Specification:</para>
        <para><ulink url="http://www.onvif.org/Documents/Specifications.aspx"/></para>
        <para>ONVIF Profile S Specification version 1.0, Dec 2011:</para>
        <para><ulink url="http://www.onvif.org/Documents/Specifications.aspx"/></para>
        <para>ONVIF Streaming Specification:</para>
        <para><ulink url="http://www.onvif.org/Documents/Specifications.aspx"/></para>
        <para>ONVIF Media Service Specification:</para>
        <para><ulink url="http://www.onvif.org/Documents/Specifications.aspx"/></para>
        <para>ISO/IEC Directives, Part 2:</para>
        <para><ulink url="www.iso.org/directives"/></para>
        <para>Rules for the structure and drafting of International Standards, Annex H: Verbal forms
            for the expression of provisions.</para>
    </section>
    <section id="additions">
        <title>Terms and Definitions</title>
        <section>
            <title>Conventions</title>
            <para>The key words "shall", "shall not", "should", "should not", "may", "need not",
                "can", "cannot" in this specification are to be interpreted as described in [ISO/IEC
                Directives Part 2].</para>
        </section>
        <section>
            <title>Definitions</title>
            <para>This section describes terms and definitions used in this document.</para>
            <variablelist>
                <varlistentry>
                    <term>Address</term>
                    <listitem>
                        <para>An address refers to a URI.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>Profile</term>
                    <listitem>
                        <para>See ONVIF Profile Policy.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>Profile S</term>
                    <listitem>
                        <para>The Profile S Specification.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>ONVIF Device</term>
                    <listitem>
                        <para>Computer appliance or software program that exposes one or multiple
                            ONVIF Web Services.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>ONVIF Client</term>
                    <listitem>
                        <para>Computer appliance or software program that uses ONVIF Web
                            Services.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>Conversation</term>
                    <listitem>
                        <para>A Conversation is all exchanges between two MAC addresses that
                            contains SOAP request and response.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>Network</term>
                    <listitem>
                        <para>A network is an interconnected group of devices communicating using
                            the Internet protocol.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>Network Trace Capture file</term>
                    <listitem>
                        <para>Data file created by a network protocol analyzer software (such as
                            Wireshark). Contains network packets data recorded during a live network
                            communications.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>Media Profile</term>
                    <listitem>
                        <para>A media profile maps a video and/or audio source to a video and/or an
                            audio encoder, PTZ and analytics configurations.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>SOAP</term>
                    <listitem>
                        <para>SOAP is a lightweight protocol intended for exchanging structured
                            information in a decentralized, distributed environment. It uses XML
                            technologies to define an extensible messaging framework providing a
                            message construct that can be exchanged over a variety of underlying
                            protocols.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>Client Test Tool</term>
                    <listitem>
                        <para>ONVIF Client Test Tool that tests ONVIF Client implementation towards
                            the ONVIF Test Specification set.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>Valid Device Response</term>
                    <listitem>
                        <para>Device has responded to specific request with code HTTP or RTSP 200 OK
                            and SOAP fault message has not
                            appeared.<?oxy_custom_start type="oxy_content_highlight" color="255,255,0"?></para>
                        <?oxy_custom_end?>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>PTZ Node</term>
                    <listitem>
                        <para>Low-level PTZ entity that maps to the PTZ Device and its
                            capabilities.<?oxy_custom_start type="oxy_content_highlight" color="255,255,0"?></para>
                        <?oxy_custom_end?>
                    </listitem>
                </varlistentry>
            </variablelist>
        </section>
        <section>
            <title>Abbreviations</title>
            <para>This section describes abbreviations used in this document.</para>
            <variablelist>
                <varlistentry>
                    <term>JPEG</term>
                    <listitem>
                        <para>Joint Photographic Expert Group.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>MPEG-4</term>
                    <listitem>
                        <para>Moving Picture Experts Group 4.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>HTTP</term>
                    <listitem>
                        <para>Hyper Text Transport Protocol.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>HTTPS</term>
                    <listitem>
                        <para>Hyper Text Transport Protocol over Secure Socket Layer.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>RTP</term>
                    <listitem>
                        <para>Real-time Transport Protocol.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>RTSP</term>
                    <listitem>
                        <para>Real Time Streaming Protocol.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>SDP</term>
                    <listitem>
                        <para>Session Description Protocol.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>TCP</term>
                    <listitem>
                        <para>Transport Control Protocol.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>UDP</term>
                    <listitem>
                        <para>User Datagram Protocol.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>URI</term>
                    <listitem>
                        <para>Uniform Resource Identifier.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>WSDL</term>
                    <listitem>
                        <para>Web Services Description Language.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>XML</term>
                    <listitem>
                        <para>eXtensible Markup Language.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>PTZ</term>
                    <listitem>
                        <para>Pan/Tilt/Zoom.</para>
                    </listitem>
                </varlistentry>
            </variablelist>
        </section>
    </section>
    <section>
        <title>Test Overview</title>
        <para>This section provides information for the test setup procedure and required
            prerequisites that should be followed during test case execution.</para>
        <para>An ONVIF Client compliant to the Profile S is an ONVIF Client that can configure,
            request, and control streaming of video data over an IP network from an ONVIF Device
            compliant to the Profile S. The Profile S also includes support for control of PTZ,
            receiving Audio and Metadata Stream, and Relay Outputs.</para>
        <para>An ONVIF Profile is described by a fixed set of functionalities through a number of
            services that are provided by the ONVIF standard. A number of services and
            functionalities are mandatory for each type of ONVIF Profile. An ONVIF Device and ONVIF
            Client may support any combination of Profiles and other optional services and
            functionalities.</para>
        <section>
            <title>Test Setup</title>
            <para>Collect Network traces files required by the test cases.</para>
            <para>Collect Feature List XML files for Devices detected in the Network Trace
                files.</para>
            <para>Client shall support all mandatory and conditional features listed in the Device
                Feature List XML file supplied for the Profiles supported by the Client.</para>
            <para>For compatibility with the Profile S, the ONVIF Client shall follow the
                requirements of the conformance process. For details please see the latest ONVIF
                Conformance Process Specification.</para>
        </section>
        <section>
            <title>Prerequisites</title>
            <para>The pre-requisites for executing the test cases described in this Test
                Specification include:</para>
            <para>The Device shall be configured with an IPv4 address.</para>
            <para>The Device shall be able to be discovered by the Client.</para>
        </section>
    </section>
    <section id="s.conformance">
        <title>Media Streaming Test Cases</title>
        <section>
            <title>Expected Scenarios Under Test:</title>
            <para>
                <orderedlist>
                    <listitem>
                        <para>Client connects to Device to initiate Media Streaming.</para>
                    </listitem>
                    <listitem>
                        <para>Client is considered as supporting Media Streaming if the following
                            conditions are met:<itemizedlist>
                                <listitem>
                                    <para>Device returns a valid response to GetProfiles request
                                        AND</para>
                                </listitem>
                                <listitem>
                                    <para>Device returns a valid response to GetStreamURI request
                                        AND</para>
                                </listitem>
                                <listitem>
                                    <para>Stream was successfully established by Client
                                        using:</para>
                                    <itemizedlist>
                                        <listitem>
                                            <para>RTSP protocol OR</para>
                                        </listitem>
                                        <listitem>
                                            <para>UDP protocol OR</para>
                                        </listitem>
                                        <listitem>
                                            <para>HTTP protocol.</para>
                                        </listitem>
                                    </itemizedlist>
                                </listitem>
                            </itemizedlist></para>
                    </listitem>
                    <listitem>
                        <para>Client is considered as NOT supporting Media Streaming if the
                            following is TRUE:<itemizedlist>
                                <listitem>
                                    <para>No Valid Device Response to GetProfiles request OR</para>
                                </listitem>
                                <listitem>
                                    <para>No Valid Device Response to GetStreamURI request OR</para>
                                </listitem>
                                <listitem>
                                    <para>Client is unable to establish stream using:</para>
                                    <itemizedlist>
                                        <listitem>
                                            <para>RTSP protocol AND</para>
                                        </listitem>
                                        <listitem>
                                            <para>UDP protocol AND</para>
                                        </listitem>
                                        <listitem>
                                            <para>HTTP protocol.</para>
                                        </listitem>
                                    </itemizedlist>
                                </listitem>
                            </itemizedlist></para>
                    </listitem>
                </orderedlist>
            </para>
        </section>
        <section>
            <title><emphasis role="italic">GET PROFILES</emphasis></title>
            <para><emphasis role="bold">Test Label:</emphasis> Media Streaming - GetProfiles</para>
            <para><emphasis role="bold">Test Case ID:</emphasis> MEDIASTREAMING-1</para>
            <para><emphasis role="bold">Profile S Requirement:</emphasis> Mandatory</para>
            <para><emphasis role="bold">Feature Under Test:</emphasis> Media Streaming</para>
            <para><emphasis role="bold">Test Purpose:</emphasis> To verify that list of media
                profiles from Device is received by Client using the GetProfiles operation.</para>
            <para><emphasis role="bold">Pre-Requisite:</emphasis><itemizedlist>
                    <listitem>
                        <para>The Network Trace Capture files contains at least one Conversation
                            between Client and Device with GetProfiles operation present.</para>
                    </listitem>
                </itemizedlist></para>
            <para><emphasis role="bold">Test Procedure (expected to be reflected in network trace
                    file):</emphasis><orderedlist>
                    <listitem>
                        <para>Client invokes GetProfiles request message to retrieve complete
                            profiles list from Device.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and GetProfilesResponse
                            message.</para>
                    </listitem>
                </orderedlist></para>
            <para><emphasis role="bold">Test Result:</emphasis></para>
            <literallayout class="normal"><emphasis role="bold">PASS -</emphasis>
Client GetProfiles request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client GetProfiles request message has a proper hierarchy (refer to media.wsdl) AND
[S1] Client request contains "&lt;GetProfiles>" tag after the "&lt;Body>" tag  AND
[S2] Device response contains "HTTP/* 200 OK" AND
[S3] Device response contains "&lt;GetProfilesResponse>" tag.</literallayout>
            <literallayout class="normal"><emphasis role="bold">FAIL -</emphasis>
The Client failed PASS criteria.</literallayout>
            <para><emphasis role="bold">Validated Feature List:
                </emphasis>MediaStreaming_GetProfiles</para>
        </section>
        <section>
            <title><emphasis role="italic">GET STREAM URI</emphasis></title>
            <para><emphasis role="bold">Test Label:</emphasis> Media Streaming - GetStreamURI</para>
            <para><emphasis role="bold">Test Case ID:</emphasis> MEDIASTREAMING-2</para>
            <para><emphasis role="bold">Profile S Requirement:</emphasis> Mandatory</para>
            <para><emphasis role="bold">Feature Under Test:</emphasis> Media Streaming</para>
            <para><emphasis role="bold">Test Purpose:</emphasis> To verify that stream URI from
                Device is received by Client using the GetStreamURI operation.</para>
            <para><emphasis role="bold">Pre-Requisite:</emphasis><itemizedlist>
                    <listitem>
                        <para>The Network Trace Capture files contains at least one Conversation
                            between Client and Device with GetStreamURI operation present.</para>
                    </listitem>
                </itemizedlist></para>
            <para><emphasis role="bold">Test Procedure (expected to be reflected in network trace
                    file):</emphasis><orderedlist>
                    <listitem>
                        <para>Client invokes GetStreamUri request message with the Stream Setup
                            element (contains two parts: Stream Type and Transport protocol) and
                            Profile Token element (indicates the media profile selected).</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and GetStreamUriResponse
                            message. </para>
                    </listitem>
                </orderedlist></para>
            <para><emphasis role="bold">Test Result:</emphasis></para>
            <literallayout class="normal"><emphasis role="bold">PASS -</emphasis>
Client GetStreamUri request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client GetStreamUri request message has a proper hierarchy (refer to media.wsdl) AND
[S1] Client request contains "&lt;GetStreamUri>" tag after the "&lt;Body>" tag AND
     [S2] "&lt;GetStreamUri>" includes tag: "&lt;StreamSetup>" AND
     [S3] "&lt;StreamSetup>" includes tag: "&lt;Stream>" with ("RTP-unicast" OR "RTP-multicast") value AND
     [S4] "&lt;StreamSetup>" includes tag: "&lt;Transport>" AND
     [S5] "&lt;Transport>" includes tag: "&lt;Protocol>" with ("UDP" OR "HTTP" OR "RTSP") value AND
     [S6] "&lt;GetStreamUri>" includes tag: "&lt;ProfileToken>" with non-empty string value of specific profile token AND
[S7] Device response contains "HTTP/* 200 OK" AND
[S8] Device response contains "&lt;GetStreamUriResponse>" tag.</literallayout>
            <literallayout class="normal"><emphasis role="bold">FAIL -</emphasis>
The Client failed PASS criteria.</literallayout>
            <para><emphasis role="bold">Validated Feature List:
                </emphasis>MediaStreaming_GetStreamURI</para>
        </section>
        <section>
            <title><emphasis role="italic">STREAMING OVER RTSP</emphasis></title>
            <para><emphasis role="bold">Test Label:</emphasis> Media Streaming - RTSP</para>
            <para><emphasis role="bold">Test Case ID:</emphasis> MEDIASTREAMING-3</para>
            <para><emphasis role="bold">Profile S Requirement:</emphasis> governed by business rule
                #21</para>
            <para><emphasis role="bold">Feature Under Test:</emphasis> Media Streaming</para>
            <para><emphasis role="bold">Test Purpose:</emphasis> To verify that stream over RTSP
                protocol was successfully established between Client and Device using RTSP commands
                and then successfully stopped.</para>
            <para><emphasis role="bold">Pre-Requisite:</emphasis><itemizedlist>
                    <listitem>
                        <para>The Network Trace Capture files contains at least one Conversation
                            between Client and Device with GetStreamUri operation and RTSP DESCRIBE,
                            RTSP SETUP, RTSP PLAY and RTSP TEARDOWN commands present.</para>
                    </listitem>
                </itemizedlist></para>
            <para><emphasis role="bold">Test Procedure (expected to be reflected in network trace
                    file):</emphasis><orderedlist>
                    <listitem>
                        <para>Client invokes GetStreamUri request message with the following Stream
                            Setup: Stream Type element with "RTP-unicast" OR "RTP-multicast" value
                            and Transport Protocol element with "RTSP" value and Profile Token
                            element (indicates the media profile selected).</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and GetStreamUriResponse
                            message.</para>
                    </listitem>
                    <listitem>
                        <para>Client invokes RTSP DESCRIBE request to retrieve media stream
                            description.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code RTSP 200 OK. </para>
                    </listitem>
                    <listitem>
                        <para>Client invokes RTSP SETUP request with transport parameter element to
                            set media session parameters.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code RTSP 200 OK.</para>
                    </listitem>
                    <listitem>
                        <para>Client invokes RTSP PLAY request to start media stream.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code RTSP 200 OK.</para>
                    </listitem>
                    <listitem>
                        <para>Client invokes RTSP TEARDOWN request to terminate the RTSP
                            session.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code RTSP 200 OK.</para>
                    </listitem>
                </orderedlist></para>
            <para><emphasis role="bold">Test Result:</emphasis></para>
            <literallayout class="normal"><emphasis role="bold">PASS -</emphasis>
Client GetStreamUri request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client GetStreamUri request message has a proper hierarchy (refer to media.wsdl) AND
[S1] Client request contains "&lt;GetStreamUri>" tag after the "&lt;Body>" tag AND
     [S2] "&lt;GetStreamUri>" includes tag: "&lt;StreamSetup>" AND
     [S3] "&lt;StreamSetup>" includes tag: "&lt;Stream>" with ("RTP-unicast" OR "RTP-multicast") value 
     AND
     [S4] "&lt;StreamSetup>" includes tag: "&lt;Transport>" AND
     [S5] "&lt;Transport>" includes tag: "&lt;Protocol>" with "RTSP" value 
     AND
     [S6] "&lt;GetStreamUri>" includes tag: "&lt;ProfileToken>" with non-empty string value of specific profile token AND
[S7] Device response contains "HTTP/* 200 OK" AND
[S8] Device response contains "&lt;GetStreamUriResponse>" tag AND
     [S9] "&lt;GetStreamUriResponse>" includes tag: "&lt;MediaUri>" AND
     [S10] "&lt;MediaUri>" includes tag: "&lt;Uri>" with valid URI address
AND
[S11] Client request introduces RTSP DESCRIBE command AND
Client RTSP DESCRIBE request command has a proper hierarchy (refer to RFC2326 Specification) AND
     [S12] RTSP DESCRIBE includes: URI address AND
     [S13] RTSP DESCRIBE includes: "RTSP/*" version identifier AND
     [S14] RTSP DESCRIBE includes: "CSeq" identifier AND
[S15] Device response contains "RTSP/* 200 OK"
AND
[S16] Client request introduces RTSP SETUP (regardless of the actual type of stream) command AND
Client RTSP SETUP request command has a proper hierarchy (refer to RFC2326 Specification) AND
     [S17] RTSP SETUP includes: URI address AND
     [S18] RTSP SETUP includes: "RTSP/*" version identifier AND
     [S19] RTSP SETUP includes: "CSeq" identifier AND
     [S20] RTSP SETUP includes: "Transport" parameter AND
[S21] Device response contains "RTSP/* 200 OK"
AND
[S22] Client request introduces RTSP PLAY command AND
Client RTSP PLAY request command has a proper hierarchy (refer to RFC2326 Specification) AND
     [S23] RTSP PLAY includes: URI address obtained from GetStreamUriResponse AND
     [S24] RTSP PLAY includes: "RTSP/*" version identifier AND
     [S25] RTSP PLAY includes: "CSeq" identifier AND
     [S26] RTSP PLAY includes: "Session" parameter AND
[S27] Device response contains "RTSP/* 200 OK"
AND
[S28] Client request introduces RTSP TEARDOWN command AND
Client RTSP TEARDOWN request command has a proper hierarchy (refer to RFC2326 Specification) AND
     [S29] RTSP TEARDOWN includes: URI address obtained from GetStreamUriResponse AND
     [S30] RTSP TEARDOWN includes: "RTSP/*" version identifier AND
     [S31] RTSP TEARDOWN includes: "CSeq" identifier AND
     [S32] RTSP TEARDOWN includes: "Session" parameter.
[S33] Device response contains "RTSP/* 200 OK".</literallayout>
            <literallayout class="normal"><emphasis role="bold">FAIL -</emphasis>
The Client failed PASS criteria.</literallayout>
            <para><emphasis role="bold">Validated Feature List:
                </emphasis>MediaStreaming_RTPRTSPTCP</para>
        </section>
        <section>
            <title><emphasis role="italic">STREAMING OVER UDP</emphasis></title>
            <para><emphasis role="bold">Test Label:</emphasis> Media Streaming - UDP</para>
            <para><emphasis role="bold">Test Case ID:</emphasis> MEDIASTREAMING-4</para>
            <para><emphasis role="bold">Profile S Requirement:</emphasis> governed by business rule
                #21</para>
            <para><emphasis role="bold">Feature Under Test:</emphasis> Media Streaming</para>
            <para><emphasis role="bold">Test Purpose:</emphasis> To verify that stream over UDP
                protocol was successfully established between Client and Device using RTSP commands
                and then successfully stopped.</para>
            <para><emphasis role="bold">Pre-Requisite:</emphasis><itemizedlist>
                    <listitem>
                        <para>The Network Trace Capture files contains at least one Conversation
                            between Client and Device with GetStreamUri operation and RTSP DESCRIBE,
                            RTSP SETUP, RTSP PLAY and RTSP TEARDOWN commands present.</para>
                    </listitem>
                </itemizedlist></para>
            <para><emphasis role="bold">Test Procedure (expected to be reflected in network trace
                    file):</emphasis><orderedlist>
                    <listitem>
                        <para>Client invokes GetStreamUri request message with the following Stream
                            Setup: Stream Type element with "RTP-unicast" OR "RTP-multicast" value
                            and Transport Protocol element with "UDP" value and Profile Token
                            element (indicates the media profile selected).</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and GetStreamUriResponse
                            message.</para>
                    </listitem>
                    <listitem>
                        <para>Client invokes RTSP DESCRIBE request to retrieve media stream
                            description.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code RTSP 200 OK. </para>
                    </listitem>
                    <listitem>
                        <para>Client invokes RTSP SETUP request with transport parameter element to
                            set media session parameters.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code RTSP 200 OK.</para>
                    </listitem>
                    <listitem>
                        <para>Client invokes RTSP PLAY request to start media stream.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code RTSP 200 OK.</para>
                    </listitem>
                    <listitem>
                        <para>Client invokes RTSP TEARDOWN request to terminate the RTSP
                            session.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code RTSP 200 OK.</para>
                    </listitem>
                </orderedlist></para>
            <para><emphasis role="bold">Test Result:</emphasis></para>
            <literallayout class="normal"><emphasis role="bold">PASS -</emphasis>
Client GetStreamUri request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client GetStreamUri request message has a proper hierarchy (refer to media.wsdl) AND
[S1] Client request contains "&lt;GetStreamUri>" tag after the "&lt;Body>" tag AND
     [S2] "&lt;GetStreamUri>" includes tag: "&lt;StreamSetup>" AND
     [S3] "&lt;StreamSetup>" includes tag: "&lt;Stream>" with ("RTP-unicast" OR "RTP-multicast") value 
     AND
     [S4] "&lt;StreamSetup>" includes tag: "&lt;Transport>" AND
     [S5] "&lt;Transport>" includes tag: "&lt;Protocol>" with "UDP" value 
     AND
     [S6] "&lt;GetStreamUri>" includes tag: "&lt;ProfileToken>" with non-empty string value of specific profile token AND
[S7] Device response contains "HTTP/* 200 OK" AND
[S8] Device response contains "&lt;GetStreamUriResponse>" tag AND
     [S9] "&lt;GetStreamUriResponse>" includes tag: "&lt;MediaUri>" AND
     [S10] "&lt;MediaUri>" includes tag: "&lt;Uri>" with valid URI address
AND
[S11] Client request introduces RTSP DESCRIBE command AND
Client RTSP DESCRIBE request command has a proper hierarchy (refer to RFC2326 Specification) AND
     [S12] RTSP DESCRIBE includes: URI address AND
     [S13] RTSP DESCRIBE includes: "RTSP/*" version identifier AND
     [S14] RTSP DESCRIBE includes: "CSeq" identifier AND
[S15] Device response contains "RTSP/* 200 OK"
AND
[S16] Client request introduces RTSP SETUP (regardless of the actual type of stream) command AND
Client RTSP SETUP request command has a proper hierarchy (refer to RFC2326 Specification) AND
     [S17] RTSP SETUP includes: URI address AND
     [S18] RTSP SETUP includes: "RTSP/*" version identifier AND
     [S19] RTSP SETUP includes: "CSeq" identifier AND
     [S20] RTSP SETUP includes: "Transport" parameter AND
[S21] Device response contains "RTSP/* 200 OK"
AND
[S22] Client request introduces RTSP PLAY command AND
Client RTSP PLAY request command has a proper hierarchy (refer to RFC2326 Specification) AND
     [S23] RTSP PLAY includes: URI address obtained from GetStreamUriResponse AND
     [S24] RTSP PLAY includes: "RTSP/*" version identifier AND
     [S25] RTSP PLAY includes: "CSeq" identifier AND
     [S26] RTSP PLAY includes: "Session" parameter AND
[S27] Device response contains "RTSP/* 200 OK"
AND
[S28] Client request introduces RTSP TEARDOWN command AND
Client RTSP TEARDOWN request command has a proper hierarchy (refer to RFC2326 Specification) AND
     [S29] RTSP TEARDOWN includes: URI address obtained from GetStreamUriResponse AND
     [S30] RTSP TEARDOWN includes: "RTSP/*" version identifier AND
     [S31] RTSP TEARDOWN includes: "CSeq" identifier AND
     [S32] RTSP TEARDOWN includes: "Session" parameter.
[S33] Device response contains "RTSP/* 200 OK".</literallayout>
            <literallayout class="normal"><emphasis role="bold">FAIL -</emphasis>
The Client failed PASS criteria.</literallayout>
            <para><emphasis role="bold">Validated Feature List:
                </emphasis>MediaStreaming_RTPUDP</para>
        </section>
        <section>
            <title><emphasis role="italic">STREAMING OVER HTTP</emphasis></title>
            <para><emphasis role="bold">Test Label:</emphasis> Media Streaming - HTTP</para>
            <para><emphasis role="bold">Test Case ID:</emphasis> MEDIASTREAMING-5</para>
            <para><emphasis role="bold">Profile S Requirement:</emphasis> governed by business rule
                #21</para>
            <para><emphasis role="bold">Feature Under Test:</emphasis> Media Streaming</para>
            <para><emphasis role="bold">Test Purpose:</emphasis> To verify that stream over HTTP
                protocol was successfully established between Client and Device using RTSP commands
                and then successfully stopped.</para>
            <para><emphasis role="bold">Pre-Requisite:</emphasis><itemizedlist>
                    <listitem>
                        <para>The Network Trace Capture files contains at least one Conversation
                            between Client and Device with GetStreamUri operation and RTSP DESCRIBE,
                            RTSP SETUP, RTSP PLAY and RTSP TEARDOWN commands present.</para>
                    </listitem>
                    <listitem>
                        <para>RTSP data tunneled over HTTP is decodable using Base64 algorithm (if
                            applicable).</para>
                    </listitem>
                </itemizedlist></para>
            <para><emphasis role="bold">Test Procedure (expected to be reflected in network trace
                    file):</emphasis><orderedlist>
                    <listitem>
                        <para>Client invokes GetStreamUri request message with the following Stream
                            Setup: Stream Type element with "RTP-unicast" OR "RTP-multicast" value
                            and Transport Protocol element with "HTTP" value and Profile Token
                            element (indicates the media profile selected).</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and GetStreamUriResponse
                            message.</para>
                    </listitem>
                    <listitem>
                        <para>Client invokes RTSP DESCRIBE request to retrieve media stream
                            description.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code RTSP 200 OK. </para>
                    </listitem>
                    <listitem>
                        <para>Client invokes RTSP SETUP request with transport parameter element to
                            set media session parameters.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code RTSP 200 OK.</para>
                    </listitem>
                    <listitem>
                        <para>Client invokes RTSP PLAY request to start media stream.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code RTSP 200 OK.</para>
                    </listitem>
                    <listitem>
                        <para>Client invokes RTSP TEARDOWN request to terminate the RTSP
                            session.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code RTSP 200 OK.</para>
                    </listitem>
                </orderedlist></para>
            <para><emphasis role="bold">Test Result:</emphasis></para>
            <literallayout class="normal"><emphasis role="bold">PASS -</emphasis>
Client GetStreamUri request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client GetStreamUri request message has a proper hierarchy (refer to media.wsdl) AND
[S1] Client request contains "&lt;GetStreamUri>" tag after the "&lt;Body>" tag AND
     [S2] "&lt;GetStreamUri>" includes tag: "&lt;StreamSetup>" AND
     [S3] "&lt;StreamSetup>" includes tag: "&lt;Stream>" with ("RTP-unicast" OR "RTP-multicast") value 
     AND
     [S4] "&lt;StreamSetup>" includes tag: "&lt;Transport>" AND
     [S5] "&lt;Transport>" includes tag: "&lt;Protocol>" with "HTTP" value 
     AND
     [S6] "&lt;GetStreamUri>" includes tag: "&lt;ProfileToken>" with non-empty string value of specific profile token AND
[S7] Device response contains "HTTP/* 200 OK" AND
[S8] Device response contains "&lt;GetStreamUriResponse>" tag AND
     [S9] "&lt;GetStreamUriResponse>" includes tag: "&lt;MediaUri>" AND
     [S10] "&lt;MediaUri>" includes tag: "&lt;Uri>" with valid URI address
AND
[S11] Client request introduces RTSP DESCRIBE command AND
Client RTSP DESCRIBE request command has a proper hierarchy (refer to RFC2326 Specification) AND
     [S12] RTSP DESCRIBE includes: URI address AND
     [S13] RTSP DESCRIBE includes: "RTSP/*" version identifier AND
     [S14] RTSP DESCRIBE includes: "CSeq" identifier AND
[S15] Device response contains "RTSP/* 200 OK"
AND
[S16] Client request introduces RTSP SETUP (regardless of the actual type of stream) command AND
Client RTSP SETUP request command has a proper hierarchy (refer to RFC2326 Specification) AND
     [S17] RTSP SETUP includes: URI address AND
     [S18] RTSP SETUP includes: "RTSP/*" version identifier AND
     [S19] RTSP SETUP includes: "CSeq" identifier AND
     [S20] RTSP SETUP includes: "Transport" parameter AND
[S21] Device response contains "RTSP/* 200 OK"
AND
[S22] Client request introduces RTSP PLAY command AND
Client RTSP PLAY request command has a proper hierarchy (refer to RFC2326 Specification) AND
     [S23] RTSP PLAY includes: URI address obtained from GetStreamUriResponse AND
     [S24] RTSP PLAY includes: "RTSP/*" version identifier AND
     [S25] RTSP PLAY includes: "CSeq" identifier AND
     [S26] RTSP PLAY includes: "Session" parameter AND
[S27] Device response contains "RTSP/* 200 OK"
AND
[S28] Client request introduces RTSP TEARDOWN command AND
Client RTSP TEARDOWN request command has a proper hierarchy (refer to RFC2326 Specification) AND
     [S29] RTSP TEARDOWN includes: URI address obtained from GetStreamUriResponse AND
     [S30] RTSP TEARDOWN includes: "RTSP/*" version identifier AND
     [S31] RTSP TEARDOWN includes: "CSeq" identifier AND
     [S32] RTSP TEARDOWN includes: "Session" parameter.
[S33] Device response contains "RTSP/* 200 OK".</literallayout>
            <literallayout class="normal"><emphasis role="bold">FAIL -</emphasis>
The Client failed PASS criteria.</literallayout>
            <para><emphasis role="bold">Validated Feature List:
                </emphasis>MediaStreaming_RTPRTSPHTTP</para>
        </section>
    </section>
    <section>
        <title>Video Streaming Test Cases</title>
        <section>
            <title>Expected Scenarios Under Test:</title>
            <para>
                <orderedlist>
                    <listitem>
                        <para>Client connects to Device to initiate Video Streaming of a specific
                            encoding type.</para>
                    </listitem>
                    <listitem>
                        <para>Client is considered as supporting Video Streaming if the following
                            conditions are met:<itemizedlist>
                                <listitem>
                                    <para>Client is able to initiate and retrieve a video stream
                                        with MJPEG encoding type (when the device doesn't support
                                        optional encoding features) OR</para>
                                </listitem>
                                <listitem>
                                    <para>Client is able to initiate and retrieve a video stream
                                        with MJPEG encoding AND support all optional encodings (when
                                        the device supports optional encodings).</para>
                                </listitem>
                            </itemizedlist></para>
                    </listitem>
                    <listitem>
                        <para>Client is considered as NOT supporting Video Streaming if ANY of the
                            following is TRUE:<itemizedlist>
                                <listitem>
                                    <para>MJPEG Video Streaming attempts detected have failed
                                        OR</para>
                                </listitem>
                                <listitem>
                                    <para>(when the device supports optional MPEG4 or H264
                                        encodings) EITHER MPEG4 Video Streaming attempts detected
                                        have failed OR H264 Video Streaming attempts detected have
                                        failed.</para>
                                </listitem>
                            </itemizedlist></para>
                    </listitem>
                </orderedlist>
            </para>
        </section>
        <section>
            <title><emphasis role="italic">MJPEG VIDEO STREAMING</emphasis></title>
            <para><emphasis role="bold">Test Label:</emphasis> Video Streaming - MJPEG</para>
            <para><emphasis role="bold">Test Case ID:</emphasis> VIDEOSTREAMING-1</para>
            <para><emphasis role="bold">Profile S Requirement:</emphasis> Mandatory</para>
            <para><emphasis role="bold">Feature Under Test:</emphasis> Video Streaming</para>
            <para><emphasis role="bold">Test Purpose:</emphasis> To verify that the Client is able
                to initiate and retrieve a video stream with MJPEG encoding type.</para>
            <para><emphasis role="bold">Pre-Requisite:</emphasis><itemizedlist>
                    <listitem>
                        <para>The Network Trace Capture files contains at least one Conversation
                            between Client and Device with Video Streaming of MJPEG encoding
                            type.</para>
                    </listitem>
                </itemizedlist></para>
            <para><emphasis role="bold">Test Procedure (expected to be reflected in network trace
                    file):</emphasis><orderedlist>
                    <listitem>
                        <para>Client invokes GetProfiles request message to retrieve complete
                            profiles list from Device.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and GetProfilesResponse
                            message.</para>
                    </listitem>
                    <listitem>
                        <para>Client invokes GetStreamUri request message.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and GetStreamUriResponse
                            message.</para>
                    </listitem>
                    <listitem>
                        <para>Client invokes RTSP DESCRIBE request to retrieve media stream
                            description.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code RTSP 200 OK and SDP information with Media
                            Type: "video" and MIME Type: "JPEG".</para>
                    </listitem>
                    <listitem>
                        <para>Client invokes RTSP SETUP request with transport parameter element to
                            to set media session parameters.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code RTSP 200 OK.</para>
                    </listitem>
                    <listitem>
                        <para>Client invokes RTSP PLAY request to start media stream.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code RTSP 200 OK.</para>
                    </listitem>
                </orderedlist></para>
            <para><emphasis role="bold">Test Result:</emphasis></para>
            <para><emphasis role="bold">NOTE:</emphasis> If Device RTSP DESCRIBE response message
                does not contain Media Type: "video" OR MIME Type: "JPEG" inside SDP information
                then Test shall be deemed as "NOT DETECTED".</para>
            <literallayout class="normal"><emphasis role="bold">PASS -</emphasis>
Client GetProfiles request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client GetProfiles request message has a proper hierarchy (refer to media.wsdl) AND
[S1] Client request contains "&lt;GetProfiles>" tag after the "&lt;Body>" tag  AND
[S2] Device response contains "HTTP/* 200 OK" AND
[S3] Device response contains "&lt;GetProfilesResponse>" tag
AND
Client GetStreamUri request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client GetStreamUri request message has a proper hierarchy (refer to media.wsdl) AND
[S4] Client request contains "&lt;GetStreamUri>" tag after the "&lt;Body>" tag  AND
     [S5] "&lt;GetStreamUri>" includes tag: "&lt;ProfileToken>" with non-empty string value AND
[S6] Device response contains "HTTP/* 200 OK" AND
[S7] Device response contains "&lt;GetStreamUriResponse>" tag AND
     [S8] "&lt;GetStreamUriResponse>" includes tag: "&lt;MediaUri>" AND
     [S9] "&lt;MediaUri>" includes tag: "&lt;Uri>" with valid URI address
AND
[S10] Client request introduces RTSP DESCRIBE command AND
Client RTSP DESCRIBE request command has a proper hierarchy (refer to RFC2326 Specification) AND
     [S11] RTSP DESCRIBE includes: URI address obtained from GetStreamUriResponse AND
     [S12] RTSP DESCRIBE includes: "RTSP/*" version identifier AND
     [S13] RTSP DESCRIBE includes: "CSeq" identifier AND
[S14] Device response contains "RTSP/* 200 OK" AND
[S15] Device response SDP information contains Media Type: "video" and MIME Type: "JPEG"
AND
[S16] Client request introduces RTSP SETUP command AND
Client RTSP SETUP request command has a proper hierarchy (refer to RFC2326 Specification) AND
     [S17] RTSP SETUP includes: URI address AND
     [S18] RTSP SETUP includes: "RTSP/*" version identifier AND
     [S19] RTSP SETUP includes: "CSeq" identifier AND
     [S20] RTSP SETUP includes: "Transport" parameter AND
[S21] Device response contains "RTSP/* 200 OK"
AND
[S22] Client request introduces RTSP PLAY command AND
Client RTSP PLAY request command has a proper hierarchy (refer to RFC2326 Specification) AND
     [S23] RTSP PLAY includes: the same URI address as in RTSP DESCRIBE request command AND
     [S24] RTSP PLAY includes: "RTSP/*" version identifier AND
     [S25] RTSP PLAY includes: "CSeq" identifier AND
     [S26] RTSP PLAY includes: "Session" parameter AND
[S27] Device response contains "RTSP/* 200 OK".</literallayout>
            <literallayout class="normal"><emphasis role="bold">FAIL -</emphasis>
The Client failed PASS criteria.</literallayout>
            <para><emphasis role="bold">Validated Feature List:
                </emphasis>VideoStreaming_JPEG</para>
        </section>
        <section>
            <title><emphasis role="italic">MPEG4 VIDEO STREAMING</emphasis></title>
            <para><emphasis role="bold">Test Label:</emphasis> Video Streaming - MPEG4</para>
            <para><emphasis role="bold">Test Case ID:</emphasis> VIDEOSTREAMING-2</para>
            <para><emphasis role="bold">Profile S Requirement:</emphasis> Conditional</para>
            <para><emphasis role="bold">Feature Under Test:</emphasis> Video Streaming</para>
            <para><emphasis role="bold">Test Purpose:</emphasis> To verify that the Client is able
                to initiate and retrieve a video stream with MPEG4 encoding type.</para>
            <para><emphasis role="bold">Pre-Requisite:</emphasis><itemizedlist>
                    <listitem>
                        <para>The Network Trace Capture files contains at least one Conversation
                            between Client and Device with Video Streaming of MPEG4 encoding
                            type.</para>
                    </listitem>
                </itemizedlist></para>
            <para><emphasis role="bold">Test Procedure (expected to be reflected in network trace
                    file):</emphasis><orderedlist>
                    <listitem>
                        <para>Client invokes GetProfiles request message to retrieve complete
                            profiles list from Device.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and GetProfilesResponse
                            message.</para>
                    </listitem>
                    <listitem>
                        <para>Client invokes GetStreamUri request message.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and GetStreamUriResponse
                            message.</para>
                    </listitem>
                    <listitem>
                        <para>Client invokes RTSP DESCRIBE request to retrieve media stream
                            description.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code RTSP 200 OK and SDP information with Media
                            Type: "video" and MIME Type: "MPEG4".</para>
                    </listitem>
                    <listitem>
                        <para>Client invokes RTSP SETUP request with transport parameter element to
                            to set media session parameters.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code RTSP 200 OK.</para>
                    </listitem>
                    <listitem>
                        <para>Client invokes RTSP PLAY request to start media stream.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code RTSP 200 OK.</para>
                    </listitem>
                </orderedlist></para>
            <para><emphasis role="bold">Test Result:</emphasis></para>
            <para><emphasis role="bold">NOTE:</emphasis> If Device RTSP DESCRIBE response message
                does not contain Media Type: "video" OR MIME Type: "MPEG4" inside SDP information
                then Test shall be deemed as "NOT DETECTED".</para>
            <literallayout class="normal"><emphasis role="bold">PASS -</emphasis>
Client GetProfiles request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client GetProfiles request message has a proper hierarchy (refer to media.wsdl) AND
[S1] Client request contains "&lt;GetProfiles>" tag after the "&lt;Body>" tag  AND
[S2] Device response contains "HTTP/* 200 OK" AND
[S3] Device response contains "&lt;GetProfilesResponse>" tag
AND
Client GetStreamUri request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client GetStreamUri request message has a proper hierarchy (refer to media.wsdl) AND
[S4] Client request contains "&lt;GetStreamUri>" tag after the "&lt;Body>" tag AND
     [S5] "&lt;GetStreamUri>" includes tag: "&lt;ProfileToken>" with non-empty string value AND
[S6] Device response contains "HTTP/* 200 OK" AND
[S7] Device response contains "&lt;GetStreamUriResponse>" tag AND
     [S8] "&lt;GetStreamUriResponse>" includes tag: "&lt;MediaUri>" AND
     [S9] "&lt;MediaUri>" includes tag: "&lt;Uri>" with valid URI address
AND
[S10] Client request introduces RTSP DESCRIBE command AND
Client RTSP DESCRIBE request command has a proper hierarchy (refer to RFC2326 Specification) AND
     [S11] RTSP DESCRIBE includes: URI address obtained from GetStreamUriResponse AND
     [S12] RTSP DESCRIBE includes: "RTSP/*" version identifier AND
     [S13] RTSP DESCRIBE includes: "CSeq" identifier AND
[S14] Device response contains "RTSP/* 200 OK" AND
[S15] Device response SDP information contains Media Type: "video" and MIME Type: "MPEG4"
AND
[S16] Client request introduces RTSP SETUP command AND
Client RTSP SETUP request command has a proper hierarchy (refer to RFC2326 Specification) AND
     [S17] RTSP SETUP includes: URI address AND
     [S18] RTSP SETUP includes: "RTSP/*" version identifier AND
     [S19] RTSP SETUP includes: "CSeq" identifier AND
     [S20] RTSP SETUP includes: "Transport" parameter AND
[S21] Device response contains "RTSP/* 200 OK"
AND
[S22] Client request introduces RTSP PLAY command AND
Client RTSP PLAY request command has a proper hierarchy (refer to RFC2326 Specification) AND
     [S23] RTSP PLAY includes: the same URI address as in RTSP DESCRIBE request command AND
     [S24] RTSP PLAY includes: "RTSP/*" version identifier AND
     [S25] RTSP PLAY includes: "CSeq" identifier AND
     [S26] RTSP PLAY includes: "Session" parameter AND
[S27] Device response contains "RTSP/* 200 OK".</literallayout>
            <literallayout class="normal"><emphasis role="bold">FAIL -</emphasis>
The Client failed PASS criteria.</literallayout>
            <para><emphasis role="bold">Validated Feature List:
                </emphasis>VideoStreaming_MPEG4</para>
        </section>
        <section>
            <title><emphasis role="italic">H264 VIDEO STREAMING</emphasis></title>
            <para><emphasis role="bold">Test Label:</emphasis> Video Streaming - H264</para>
            <para><emphasis role="bold">Test Case ID:</emphasis> VIDEOSTREAMING-3</para>
            <para><emphasis role="bold">Profile S Requirement:</emphasis> Conditional</para>
            <para><emphasis role="bold">Feature Under Test:</emphasis> Video Streaming</para>
            <para><emphasis role="bold">Test Purpose:</emphasis> To verify that the Client is able
                to initiate and retrieve a video stream with H264 encoding type.</para>
            <para><emphasis role="bold">Pre-Requisite:</emphasis><itemizedlist>
                    <listitem>
                        <para>The Network Trace Capture files contains at least one Conversation
                            between Client and Device with Video Streaming of H264 encoding
                            type.</para>
                    </listitem>
                </itemizedlist></para>
            <para><emphasis role="bold">Test Procedure (expected to be reflected in network trace
                    file):</emphasis><orderedlist>
                    <listitem>
                        <para>Client invokes GetProfiles request message to retrieve complete
                            profiles list from Device.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and GetProfilesResponse
                            message.</para>
                    </listitem>
                    <listitem>
                        <para>Client invokes GetStreamUri request message.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and GetStreamUriResponse
                            message.</para>
                    </listitem>
                    <listitem>
                        <para>Client invokes RTSP DESCRIBE request to retrieve media stream
                            description.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code RTSP 200 OK and SDP information with Media
                            Type: "video" and MIME Type: "H264".</para>
                    </listitem>
                    <listitem>
                        <para>Client invokes RTSP SETUP request with transport parameter element to
                            to set media session parameters.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code RTSP 200 OK.</para>
                    </listitem>
                    <listitem>
                        <para>Client invokes RTSP PLAY request to start media stream.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code RTSP 200 OK.</para>
                    </listitem>
                </orderedlist></para>
            <para><emphasis role="bold">Test Result:</emphasis></para>
            <para><emphasis role="bold">NOTE:</emphasis> If Device RTSP DESCRIBE response message
                does not contain Media Type: "video" OR MIME Type: "H264" inside SDP information
                then Test shall be deemed as "NOT DETECTED".</para>
            <literallayout class="normal"><emphasis role="bold">PASS -</emphasis>
Client GetProfiles request message is a well-formed SOAP request (refer to media.wsdl) AND
Client GetProfiles request message has a proper hierarchy (refer to onvif.xsd) AND
[S1] Client request contains "&lt;GetProfiles>" tag after the "&lt;Body>" tag  AND
[S2] Device response contains "HTTP/* 200 OK" AND
[S3] Device response contains "&lt;GetProfilesResponse>" tag
AND
Client GetStreamUri request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client GetStreamUri request message has a proper hierarchy (refer to media.wsdl) AND
[S4] Client request contains "&lt;GetStreamUri>" tag after the "&lt;Body>" tag AND
     [S5] "&lt;GetStreamUri>" includes tag: "&lt;ProfileToken>" with non-empty string value AND
[S6] Device response contains "HTTP/* 200 OK" AND
[S7] Device response contains "&lt;GetStreamUriResponse>" tag AND
     [S8] "&lt;GetStreamUriResponse>" includes tag: "&lt;MediaUri>" AND
     [S9] "&lt;MediaUri>" includes tag: "&lt;Uri>" with valid URI address
AND
[S10] Client request introduces RTSP DESCRIBE command AND
Client RTSP DESCRIBE request command has a proper hierarchy (refer to RFC2326 Specification) AND
     [S11] RTSP DESCRIBE includes: URI address obtained from GetStreamUriResponse AND
     [S12] RTSP DESCRIBE includes: "RTSP/*" version identifier AND
     [S13] RTSP DESCRIBE includes: "CSeq" identifier AND
[S14] Device response contains "RTSP/* 200 OK" AND
[S15] Device response SDP information contains Media Type: "video" and MIME Type: "H264"
AND
[S16] Client request introduces RTSP SETUP command AND
Client RTSP SETUP request command has a proper hierarchy (refer to RFC2326 Specification) AND
     [S17] RTSP SETUP includes: URI address AND
     [S18] RTSP SETUP includes: "RTSP/*" version identifier AND
     [S19] RTSP SETUP includes: "CSeq" identifier AND
     [S20] RTSP SETUP includes: "Transport" parameter AND
[S21] Device response contains "RTSP/* 200 OK"
AND
[S22] Client request introduces RTSP PLAY command AND
Client RTSP PLAY request command has a proper hierarchy (refer to RFC2326 Specification) AND
     [S23] RTSP PLAY includes: the same URI address as in RTSP DESCRIBE request command AND
     [S24] RTSP PLAY includes: "RTSP/*" version identifier AND
     [S25] RTSP PLAY includes: "CSeq" identifier AND
     [S26] RTSP PLAY includes: "Session" parameter AND
[S27] Device response contains "RTSP/* 200 OK".</literallayout>
            <literallayout class="normal"><emphasis role="bold">FAIL -</emphasis>
The Client failed PASS criteria.</literallayout>
            <para><emphasis role="bold">Validated Feature List:
                </emphasis>VideoStreaming_H264</para>
        </section>
    </section>
    <section>
        <title>Multicast Streaming Test Cases</title>
        <section>
            <title>Expected Scenarios Under Test:</title>
            <para>
                <orderedlist>
                    <listitem>
                        <para>Client connects to Device and initiates Multicast Streaming using RTSP
                            or using StartMultiCastStreaming and StopMultiCastStreaming
                            operations.</para>
                    </listitem>
                    <listitem>
                        <para>Client is considered as supporting Multicast Streaming if the
                            following conditions are met:<itemizedlist>
                                <listitem>
                                    <para>Able to start and stop a multicast stream by using
                                        Start/StopMulticastStreaming OR</para>
                                </listitem>
                                <listitem>
                                    <para>Able to start and stop a multicast stream by using
                                        RTSP</para>
                                </listitem>
                            </itemizedlist></para>
                    </listitem>
                    <listitem>
                        <para>Client is considered as NOT supporting Multicast Streaming if ANY of
                            the following is TRUE:<itemizedlist>
                                <listitem>
                                    <para>If using Start/StopMulticastStreaming -> session never
                                        passed the PLAY state or was never terminated AND</para>
                                </listitem>
                                <listitem>
                                    <para>If using RTSP -> RTSP session never passed the PLAY state
                                        or was never terminated</para>
                                </listitem>
                            </itemizedlist></para>
                    </listitem>
                </orderedlist>
            </para>
        </section>
        <section>
            <title><emphasis role="italic">MULTICAST STREAMING USING RTSP</emphasis></title>
            <para><emphasis role="bold">Test Label:</emphasis> Multicast Streaming - RTSP multicast
                setup</para>
            <para><emphasis role="bold">Test Case ID:</emphasis> MULTICASTSTREAMING-1</para>
            <para><emphasis role="bold">Profile S Requirement:</emphasis> Conditional</para>
            <para><emphasis role="bold">Feature Under Test:</emphasis> Multicast Streaming</para>
            <para><emphasis role="bold">Test Purpose:</emphasis> To verify that the Client is able
                to setup and initiate a multicast stream with RTSP commands for stream
                control.</para>
            <para><emphasis role="bold">Pre-Requisite:</emphasis><itemizedlist>
                    <listitem>
                        <para>The Network Trace Capture files contains at least one Conversation
                            between Client and Device with Multicast Streaming and RTSP commands for
                            stream control.</para>
                    </listitem>
                </itemizedlist></para>
            <para><emphasis role="bold">Test Procedure (expected to be reflected in network trace
                    file):</emphasis><orderedlist>
                    <listitem>
                        <para>Client invokes GetStreamUri request message with the StreamSetup
                            element which contains Stream element with "RTP-Multicast" value and
                            Transport element which contains Protocol element with "UDP" value and
                            ProfileToken element with specified media profile token.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and GetStreamUriResponse
                            message.</para>
                    </listitem>
                    <listitem>
                        <para>Client invokes RTSP DESCRIBE request to retrieve media stream
                            description.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code RTSP 200 OK.</para>
                    </listitem>
                    <listitem>
                        <para>Client invokes RTSP SETUP request with Transport element which
                            contains "RTP/AVP", "multicast" and specified port parameters.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code RTSP 200 OK.</para>
                    </listitem>
                    <listitem>
                        <para>Client invokes RTSP PLAY request to start media stream.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code RTSP 200 OK.</para>
                    </listitem>
                    <listitem>
                        <para>Client invokes RTSP TEARDOWN request to terminate the RTSP
                            session.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code RTSP 200 OK.</para>
                    </listitem>
                </orderedlist></para>
            <para><emphasis role="bold">Test Result:</emphasis></para>
            <literallayout class="normal"><emphasis role="bold">PASS -</emphasis>
Client GetStreamUri request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client GetStreamUri request message has a proper hierarchy (refer to media.wsdl) AND
[S1] Client request contains "&lt;GetStreamUri>" tag after the "&lt;Body>" tag AND
    [S2] "&lt;GetStreamUri>" includes tag: "&lt;StreamSetup>" AND
    [S3] "&lt;StreamSetup>" includes tag: "&lt;Stream>" with "RTP-multicast" value AND
    [S4] "&lt;StreamSetup>" includes tag: "&lt;Transport>" AND
    [S5] "&lt;Transport>" includes tag: "&lt;Protocol>" with ("UDP" OR "HTTP" OR "RTSP") value AND
    [S6] "&lt;GetStreamUri>" includes tag: "&lt;ProfileToken>" with non-empty string value of specified profile token AND
[S7] Device response contains "HTTP/* 200 OK" AND
[S8] Device response contains "&lt;GetStreamUriResponse>" tag AND
    [S9] "&lt;GetStreamUriResponse>" includes tag: "&lt;MediaUri>" AND
    [S10] "&lt;MediaUri>" includes tag: "&lt;Uri>" with valid URI address
AND
[S11] Client request introduces RTSP DESCRIBE command AND
Client RTSP DESCRIBE request command has a proper hierarchy (refer to RFC2326 Specification) AND
    [S12] RTSP DESCRIBE includes: URI address obtained from GetStreamUriResponse AND
    [S13] RTSP DESCRIBE includes: "RTSP/*" version identifier AND
    [S14] RTSP DESCRIBE includes: "CSeq" identifier AND
[S15] Device response contains "RTSP/* 200 OK"
AND
[S16] Client request introduces RTSP SETUP command AND
Client RTSP SETUP request command has a proper hierarchy (refer to RFC2326 Specification) AND
    [S17] RTSP SETUP includes: URI address AND
    [S18] RTSP SETUP includes: "RTSP/*" version identifier AND
    [S19] RTSP SETUP includes: "CSeq" identifier AND
    [S20] RTSP SETUP includes: "Transport: RTP/AVP;multicast;*" parameter with values AND
[S21] Device response contains "RTSP/* 200 OK"
AND
[S22] Client request introduces RTSP PLAY command AND
Client RTSP PLAY request command has a proper hierarchy (refer to RFC2326 Specification) AND
    [S23] RTSP PLAY includes: the same URI address as in RTSP SETUP request command AND
    [S24] RTSP PLAY includes: "RTSP/*" version identifier AND
    [S25] RTSP PLAY includes: "CSeq" identifier AND
    [S26] RTSP PLAY includes: "Session" parameter AND
[S27] Device response contains "RTSP/* 200 OK"
AND
[S28] Client request introduces RTSP TEARDOWN command AND
Client RTSP TEARDOWN request command has a proper hierarchy (refer to RFC2326 Specification) AND
    [S29] RTSP TEARDOWN includes: the same URI address as in RTSP PLAY request command AND
    [S30] RTSP TEARDOWN includes: "RTSP/*" version identifier AND
    [S31] RTSP TEARDOWN includes: "CSeq" identifier AND
    [S32] RTSP TEARDOWN includes: "Session" parameter.
[S33] Device response contains "RTSP/* 200 OK".</literallayout>
            <literallayout class="normal"><emphasis role="bold">FAIL -</emphasis>
The Client failed PASS criteria.</literallayout>
            <para><emphasis role="bold">Validated Feature List:
                </emphasis>MulticastStreaming_RTSP</para>
        </section>
        <section>
            <title><emphasis role="italic">MULTICAST STREAMING USING SOAP</emphasis></title>
            <para><emphasis role="bold">Test Label:</emphasis> Multicast Streaming - SOAP multicast
                setup</para>
            <para><emphasis role="bold">Test Case ID:</emphasis> MULTICASTSTREAMING-2</para>
            <para><emphasis role="bold">Profile S Requirement:</emphasis> Conditional</para>
            <para><emphasis role="bold">Feature Under Test:</emphasis> Multicast Streaming</para>
            <para><emphasis role="bold">Test Purpose:</emphasis> To verify that the Client is able
                to setup and initiate a multicast stream with Start/StopMulticastStreaming SOAP
                operations for stream control.</para>
            <para><emphasis role="bold">Pre-Requisite:</emphasis><itemizedlist>
                    <listitem>
                        <para>The Network Trace Capture files contains at least one Conversation
                            between Client and Device with Multicast Streaming and
                            Start/StopMulticastStreaming operations for stream control.</para>
                    </listitem>
                </itemizedlist></para>
            <para><emphasis role="bold">Test Procedure (expected to be reflected in network trace
                    file):</emphasis><orderedlist>
                    <listitem>
                        <para>Client invokes StartMulticastStreaming request message with
                            ProfileToken element which specify media profile token selected.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and
                            StartMulticastStreamingResponse message.</para>
                    </listitem>
                    <listitem>
                        <para>Client invokes StopMulticastStreaming request message for selected
                            Profile Token element from Step 1.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and
                            StopMulticastStreamingResponse message.</para>
                    </listitem>
                </orderedlist></para>
            <para><emphasis role="bold">Test Result:</emphasis></para>
            <literallayout class="normal"><emphasis role="bold">PASS -</emphasis>
Client StartMulticastStreaming request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client StartMulticastStreaming request message has a proper hierarchy (refer to media.wsdl) AND
[S1] Client request contains "&lt;StartMulticastStreaming>" tag after the "&lt;Body>" tag AND
    [S2] "&lt;StartMulticastStreaming>" includes tag: "&lt;ProfileToken>" with non-empty string value of specified profile token 
    AND
    [S3] Device response contains "HTTP/* 200 OK" AND
    [S4] Device response contains "&lt;StartMulticastStreamingResponse>" tag
AND
Client StopMulticastStreaming request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client StopMulticastStreaming request message has a proper hierarchy (refer to media.wsdl) AND
[S5] Client request contains "&lt;StopMulticastStreaming>" tag after the "&lt;Body>" tag AND
    [S6] "&lt;StopMulticastStreaming>" includes tag: "&lt;ProfileToken>" with non-empty string value of specified profile token 
    AND
[S7] Device response contains "HTTP/* 200 OK" AND
[S8] Device response contains "&lt;StopMulticastStreamingResponse>" tag.</literallayout>
            <literallayout class="normal"><emphasis role="bold">FAIL -</emphasis>
The Client failed PASS criteria.</literallayout>
            <para><emphasis role="bold">Validated Feature List:
                </emphasis>MulticastStreaming_SOAP</para>
        </section>
    </section>
    <section>
        <title>Video Encoder Configurations Test Cases</title>
        <section>
            <title>Expected Scenarios Under Test:</title>
            <para>
                <orderedlist>
                    <listitem>
                        <para>Client connects to Device to list and modify Video Encoder
                            Configurations.</para>
                    </listitem>
                    <listitem>
                        <para>Client is considered as supporting Video Encoder Configurations if the
                            following conditions are met:<itemizedlist>
                                <listitem>
                                    <para>Client is able to list all existing video encoder
                                        configurations by using EITHER GetVideoEncoderConfigurations
                                        OR GetVideoEncoderConfiguration operations AND</para>
                                </listitem>
                                <listitem>
                                    <para>Client is able to modify an existing video encoder
                                        configuration by using the following sequence of commands:<itemizedlist>
                                            <listitem>
                                                <para>Retrieve video encoder configuration for a
                                                  specific configuration token by using
                                                  GetVideoEncoderConfiguration operation AND</para>
                                            </listitem>
                                            <listitem>
                                                <para>Retrieve a video parameter options for a
                                                  specific profile and configuration tokens by using
                                                  GetVideoEncoderConfigurationOptions operation
                                                  AND</para>
                                            </listitem>
                                            <listitem>
                                                <para>Modify a video encoder configuration by using
                                                  SetVideoEncoderConfiguration operation.</para>
                                            </listitem>
                                        </itemizedlist></para>
                                </listitem>
                            </itemizedlist></para>
                    </listitem>
                    <listitem>
                        <para>Client is considered as NOT supporting Video Encoder Configurations if
                            ANY of the following is TRUE:<itemizedlist>
                                <listitem>
                                    <para>No Valid Device Response to GetVideoEncoderConfigurations
                                        request OR</para>
                                </listitem>
                                <listitem>
                                    <para>No Valid Device Response to GetVideoEncoderConfiguration
                                        request OR</para>
                                </listitem>
                                <listitem>
                                    <para>No Valid Device Response to
                                        GetVideoEncoderConfigurationOptions request OR</para>
                                </listitem>
                                <listitem>
                                    <para>No Valid Device Response to SetVideoEncoderConfiguration
                                        request.</para>
                                </listitem>
                            </itemizedlist></para>
                    </listitem>
                </orderedlist>
            </para>
        </section>
        <section>
            <title><emphasis role="italic">LIST VIDEO ENCODER CONFIGURATIONS</emphasis></title>
            <para><emphasis role="bold">Test Label:</emphasis> Video Encoder Configurations - list
                all existing video encoder configurations</para>
            <para><emphasis role="bold">Test Case ID:</emphasis> VIDEOENCODERCONFIGURATIONS-1</para>
            <para><emphasis role="bold">Profile S Requirement:</emphasis> governed by business rule
                #22</para>
            <para><emphasis role="bold">Feature Under Test:</emphasis> Video Encoder
                Configurations</para>
            <para><emphasis role="bold">Test Purpose:</emphasis> To verify that list of all existing
                video encoder configurations from Device is received by Client using the
                GetVideoEncoderConfigurations operation.</para>
            <para><emphasis role="bold">Pre-Requisite:</emphasis><itemizedlist>
                    <listitem>
                        <para>The Network Trace Capture files contains at least one Conversation
                            between Client and Device with GetVideoEncoderConfigurations operation
                            present.</para>
                    </listitem>
                </itemizedlist></para>
            <para><emphasis role="bold">Test Procedure (expected to be reflected in network trace
                    file):</emphasis><orderedlist>
                    <listitem>
                        <para>Client invokes GetVideoEncoderConfigurations request message to
                            retrieve complete list of available video encoder configurations from
                            Device.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and
                            GetVideoEncoderConfigurationsResponse message.</para>
                    </listitem>
                </orderedlist></para>
            <para><emphasis role="bold">Test Result:</emphasis></para>
            <literallayout class="normal"><emphasis role="bold">PASS -</emphasis>
Client GetVideoEncoderConfigurations request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client GetVideoEncoderConfigurations request message has a proper hierarchy (refer to media.wsdl) AND
[S1] Client request contains "&lt;GetVideoEncoderConfigurations>" tag after the "&lt;Body>" tag  AND
[S2] Device response contains "HTTP/* 200 OK" AND
[S3] Device response contains "&lt;GetVideoEncoderConfigurationsResponse>" tag.</literallayout>
            <literallayout class="normal"><emphasis role="bold">FAIL -</emphasis>
The Client failed PASS criteria.</literallayout>
            <para><emphasis role="bold">Validated Feature List:
                </emphasis>VideoEncoderConfigurations_GetVideoEncoderConfigurations</para>
        </section>
        <section>
            <title><emphasis role="italic">GET SPECIFIC VIDEO ENCODER
                CONFIGURATION</emphasis></title>
            <para><emphasis role="bold">Test Label:</emphasis> Video Encoder Configurations - gets a
                specific encoder configuration</para>
            <para><emphasis role="bold">Test Case ID:</emphasis> VIDEOENCODERCONFIGURATION-2</para>
            <para><emphasis role="bold">Profile S Requirement:</emphasis> governed by business rule
                #22</para>
            <para><emphasis role="bold">Feature Under Test:</emphasis> Video Encoder
                Configurations</para>
            <para><emphasis role="bold">Test Purpose:</emphasis> To verify that Client is able to
                retrieve a specific encoder configuration from Device by using the
                GetVideoEncoderConfiguration operation.</para>
            <para><emphasis role="bold">Pre-Requisite:</emphasis><itemizedlist>
                    <listitem>
                        <para>The Network Trace Capture files contains at least one Conversation
                            between Client and Device with GetVideoEncoderConfiguration operation
                            present.</para>
                    </listitem>
                </itemizedlist></para>
            <para><emphasis role="bold">Test Procedure (expected to be reflected in network trace
                    file):</emphasis><orderedlist>
                    <listitem>
                        <para>Client invokes GetVideoEncoderConfiguration request message with
                            specified ConfigurationToken.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and
                            GetVideoEncoderConfigurationResponse.</para>
                    </listitem>
                </orderedlist></para>
            <para><emphasis role="bold">Test Result:</emphasis></para>
            <literallayout class="normal"><emphasis role="bold">PASS -</emphasis>
Client GetVideoEncoderConfiguration request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client GetVideoEncoderConfiguration request message has a proper hierarchy (refer to media.wsdl) AND
[S1] Client request contains "&lt;GetVideoEncoderConfiguration>" tag after the "&lt;Body>" tag  AND
    [S2] "&lt;GetVideoEncoderConfiguration>" includes tag: "&lt;ConfigurationToken>" with non-empty string 
    value of "Token=*" parameter
AND
[S3] Device response contains "HTTP/* 200 OK" AND
[S4] Device response contains "&lt;GetVideoEncoderConfigurationResponse>" tag.</literallayout>
            <literallayout class="normal"><emphasis role="bold">FAIL -</emphasis>
The Client failed PASS criteria.</literallayout>
            <para><emphasis role="bold">Validated Feature List:
                </emphasis>VideoEncoderConfigurations_GetVideoEncoderConfiguration</para>
        </section>
        <section>
            <title><emphasis role="italic">MODIFY VIDEO ENCODER CONFIGURATION</emphasis></title>
            <para><emphasis role="bold">Test Label:</emphasis> Video Encoder Configurations - modify
                video encoder configuration.</para>
            <para><emphasis role="bold">Test Case ID:</emphasis> VIDEOENCODERCONFIGURATION-3</para>
            <para><emphasis role="bold">Profile S Requirement:</emphasis> Mandatory</para>
            <para><emphasis role="bold">Feature Under Test:</emphasis> Video Encoder
                Configurations</para>
            <para><emphasis role="bold">Test Purpose:</emphasis> To verify that Client is able to
                modify video encoder configuration on Device by using the
                GetVideoEncoderConfiguration, GetVideoEncoderConfigurationOptions and
                SetVideoEncoderConfiguration operations.</para>
            <para><emphasis role="bold">Pre-Requisite:</emphasis><itemizedlist>
                    <listitem>
                        <para>The Network Trace Capture files contains at least one Conversation
                            between Client and Device with GetVideoEncoderConfigurationOptions,
                            SetVideoEncoderConfiguration and GetVideoEncoderConfiguration operations
                            present.</para>
                    </listitem>
                </itemizedlist></para>
            <para><emphasis role="bold">Test Procedure (expected to be reflected in network trace
                    file):</emphasis><orderedlist>
                    <listitem>
                        <para>Client invokes GetVideoEncoderConfigurationOptions request message to
                            retrieve supported video encoder configuration options from
                            Device.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and
                            GetVideoEncoderConfigurationOptionsResponse message.</para>
                    </listitem>
                    <listitem>
                        <para>Client invokes SetVideoEncoderConfiguration request message with
                            specified Token attribute to change video encoder configuration settings
                            with any modifications of parameters which are corresponding to
                            available options from GetVideoEncoderConfigurationOptionsResponse from
                            Step 2.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and
                            SetVideoEncoderConfigurationResponse message.</para>
                    </listitem>
                    <listitem>
                        <para>Client invokes GetVideoEncoderConfiguration request message with
                            specified ConfigurationToken element of the modified video encoder
                            configuration from Step 3 to check that video encoder setting was
                            applied.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and
                            GetVideoEncoderConfigurationResponse message with modified video source
                            configuration listed.</para>
                    </listitem>
                </orderedlist></para>
            <para><emphasis role="bold">Test Result:</emphasis></para>
            <literallayout class="normal"><emphasis role="bold">PASS -</emphasis>
Client GetVideoEncoderConfigurationOptions request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client GetVideoEncoderConfigurationOptions request message has a proper hierarchy (refer to media.wsdl) AND
[S1] Client request contains "&lt;GetVideoEncoderConfigurationOptions>" tag after the "&lt;Body>" tag  AND
    [S2] (Client request does not contain "&lt;ConfigurationToken>" tag 
    OR
    "&lt;GetVideoEncoderConfigurationOptions>" includes tag: "&lt;ConfigurationToken> with non-empty string value of specific 
    configuration token)
    AND
    [S3] (Client request does not contain "&lt;ProfileToken>" tag 
    OR
    "&lt;GetVideoEncoderConfigurationOptions>" includes tag: "&lt;ProfileToken> with non-empty string value of specific 
    profile token)
AND
[S4] Device response contains "HTTP/* 200 OK" AND
[S5] Device response contains "&lt;GetVideoEncoderConfigurationOptionsResponse>" tag
AND
Client SetVideoEncoderConfiguration request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client SetVideoEncoderConfiguration request message has a proper hierarchy (refer to media.wsdl) AND
[S6] Client request contains "&lt;SetVideoEncoderConfiguration>" tag after the "&lt;Body>" tag AND
    [S7] "&lt;SetVideoEncoderConfiguration>" includes tag: "&lt;Configuration>" with non-empty string 
    value of "Token=*" parameter 
    AND
    [S8] "&lt;Configuration>" includes any combination of parameters in child tags which are corresponding to 
    GetVideoEncoderConfigurationOptionsResponse available options 
    (see ONVIF Application Programmers Guide for more information) 
    AND
    [S9] "&lt;SetVideoEncoderConfiguration>" includes tag: "&lt;ForcePersistence>" 
    with either "TRUE" OR "FALSE" values
AND
[S10] Device response contains "HTTP/* 200 OK" AND
[S11] Device response contains "&lt;SetVideoEncoderConfigurationResponse>" tag
AND
Client GetVideoEncoderConfiguration request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client GetVideoEncoderConfiguration request message has a proper hierarchy (refer to media.wsdl) AND
[S12] Client request contains "&lt;GetVideoEncoderConfiguration>" tag after the "&lt;Body>" tag  AND
    [S13] "&lt;GetVideoEncoderConfiguration>" includes tag: "&lt;ConfigurationToken>" with 
    value equal to "Token=*" parameter value from SetVideoEncoderConfiguration request message.
AND
[S14] Device response contains "HTTP/* 200 OK" AND
[S15] Device response contains "&lt;GetVideoEncoderConfigurationResponse>" tag.</literallayout>
            <literallayout class="normal"><emphasis role="bold">FAIL -</emphasis>
The Client failed PASS criteria.</literallayout>
            <para><emphasis role="bold">Validated Feature List:
                </emphasis>VideoEncoderConfigurations_ModifyVideoEncoderConfiguration</para>
        </section>
    </section>
    <section>
        <title>Media Profile Configurations Test Cases</title>
        <section>
            <title>Expected Scenarios Under Test:</title>
            <?oxy_custom_start type="oxy_content_highlight" color="255,255,0"?>
            <para>
                <orderedlist>
                    <listitem>
                        <para><?oxy_custom_end?>Client connects to Device to retrieve and/or create
                            Media Profile Configuration.</para>
                    </listitem>
                    <listitem>
                        <para>Client is considered as supporting Media Profile Configuration if the
                            following conditions are met:<itemizedlist>
                                <listitem>
                                    <para>Client shall be able to list available profiles using
                                        EITHER GetProfiles OR GetProfile operations AND</para>
                                </listitem>
                                <listitem>
                                    <para>Client shall be able to create a media profile using the
                                        CreateProfile operation.</para>
                                </listitem>
                            </itemizedlist></para>
                    </listitem>
                    <listitem>
                        <para>Client is considered as NOT supporting Media Profile Configuration if
                            ANY of the following is TRUE:<itemizedlist>
                                <listitem>
                                    <para>No Valid Device Response to GetProfiles request OR</para>
                                </listitem>
                                <listitem>
                                    <para>No Valid Device Response to GetProfile request OR</para>
                                </listitem>
                                <listitem>
                                    <para>No Valid Device Response to CreateProfile request (except
                                        soap fault: maximumnumberofprofiles).</para>
                                </listitem>
                            </itemizedlist></para>
                    </listitem>
                </orderedlist>
            </para>
        </section>
        <section>
            <title><emphasis role="italic">LIST AVAILABLE MEDIA PROFILES</emphasis></title>
            <para><emphasis role="bold">Test Label:</emphasis> Media Profile Configurations - list
                available profiles</para>
            <para><emphasis role="bold">Test Case ID:</emphasis> MEDIAPROFILECONFIGURATIONS-1</para>
            <para><emphasis role="bold">Profile S Requirement:</emphasis> Conditional</para>
            <para><emphasis role="bold">Feature Under Test:</emphasis> Media Profile
                Configurations</para>
            <para><emphasis role="bold">Test Purpose:</emphasis> To verify that list of media
                profiles from Device is received by Client using the GetProfiles operation.</para>
            <para><emphasis role="bold">Pre-Requisite:</emphasis><itemizedlist>
                    <listitem>
                        <para>The Network Trace Capture files contains at least one Conversation
                            between Client and Device with GetProfiles operation present.</para>
                    </listitem>
                </itemizedlist></para>
            <para><emphasis role="bold">Test Procedure (expected to be reflected in network trace
                    file):</emphasis><orderedlist>
                    <listitem>
                        <para>Client invokes GetProfiles request message to retrieve complete
                            profiles list from Device.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and GetProfilesResponse
                            message.</para>
                    </listitem>
                </orderedlist></para>
            <para><emphasis role="bold">Test Result:</emphasis></para>
            <literallayout class="normal"><emphasis role="bold">PASS -</emphasis>
Client GetProfiles request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client GetProfiles request message has a proper hierarchy (refer to media.wsdl) AND
[S1] Client request contains "&lt;GetProfiles>" tag after the "&lt;Body>" tag AND
[S2] Device response contains "HTTP/* 200 OK" AND
[S3] Device response contains "&lt;GetProfilesResponse>" tag.</literallayout>
            <literallayout class="normal"><emphasis role="bold">FAIL -</emphasis>
The Client failed PASS criteria.</literallayout>
            <para><emphasis role="bold">Validated Feature List:
                </emphasis>MediaProfileConfigurations_GetProfiles</para>
        </section>
        <section>
            <title><emphasis role="italic">GET SPECIFIC MEDIA PROFILE</emphasis></title>
            <para><emphasis role="bold">Test Label:</emphasis> Media Profile Configurations - gets a
                specific media profile.</para>
            <para><emphasis role="bold">Test Case ID:</emphasis> MEDIAPROFILECONFIGURATIONS-2</para>
            <para><emphasis role="bold">Profile S Requirement:</emphasis> Conditional</para>
            <para><emphasis role="bold">Feature Under Test:</emphasis> Media Profile
                Configurations</para>
            <para><emphasis role="bold">Test Purpose:</emphasis> To verify that Client is able to
                retrieve a specific media profile from Device by using the GetProfile
                operation.</para>
            <para><emphasis role="bold">Pre-Requisite:</emphasis><itemizedlist>
                    <listitem>
                        <para>The Network Trace Capture files contains at least one Conversation
                            between Client and Device with GetProfile operation present.</para>
                    </listitem>
                </itemizedlist></para>
            <para><emphasis role="bold">Test Procedure (expected to be reflected in network trace
                    file):</emphasis><orderedlist>
                    <listitem>
                        <para>Client invokes GetProfile request message to retrieve a specific media
                            profile from Device.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and GetProfileResponse
                            message.</para>
                    </listitem>
                </orderedlist></para>
            <para><emphasis role="bold">Test Result:</emphasis></para>
            <literallayout class="normal"><emphasis role="bold">PASS -</emphasis>
Client GetProfile request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client GetProfile request message has a proper hierarchy (refer to media.wsdl) AND
[S1] Client request contains "&lt;GetProfile>" tag after the "&lt;Body>" tag AND
    [S2] "&lt;GetProfile>" includes tag: "&lt;ProfileToken>" with non-empty string value of specific profile token AND
[S3] Device response contains "HTTP/* 200 OK" AND
[S4] Device response contains "&lt;GetProfileResponse>" tag.</literallayout>
            <literallayout class="normal"><emphasis role="bold">FAIL -</emphasis>
The Client failed PASS criteria.</literallayout>
            <para><emphasis role="bold">Validated Feature List:
                </emphasis>MediaProfileConfigurations_GetProfile</para>
        </section>
        <section>
            <title><emphasis role="italic">CREATE A MEDIA PROFILE</emphasis></title>
            <para><emphasis role="bold">Test Label:</emphasis> Media Profile Configurations - create
                a media profile</para>
            <para><emphasis role="bold">Test Case ID:</emphasis> MEDIAPROFILECONFIGURATIONS-3</para>
            <para><emphasis role="bold">Profile S Requirement:</emphasis> Conditional</para>
            <para><emphasis role="bold">Feature Under Test:</emphasis> Media Profile
                Configurations</para>
            <para><emphasis role="bold">Test Purpose:</emphasis> To verify that Client is able to
                create a new media profile on Device by using the CreateProfile operation.</para>
            <para><emphasis role="bold">Pre-Requisite:</emphasis><itemizedlist>
                    <listitem>
                        <para>The Network Trace Capture files contains at least one Conversation
                            between Client and Device with CreateProfile operation present.</para>
                    </listitem>
                </itemizedlist></para>
            <para><emphasis role="bold">Test Procedure (expected to be reflected in network trace
                    file):</emphasis><orderedlist>
                    <listitem>
                        <para>Client invokes CreateProfile request message to create a new empty
                            profile structure with no configuration entities.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and CreateProfileResponse
                            message.</para>
                    </listitem>
                </orderedlist></para>
            <para><emphasis role="bold">Test Result:</emphasis></para>
            <literallayout class="normal"><emphasis role="bold">PASS -</emphasis>
Client CreateProfile request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client CreateProfile request message has a proper hierarchy (refer to media.wsdl) AND
[S1] Client request contains "&lt;CreateProfile>" tag after the "&lt;Body>" tag AND
    [S2] "&lt;CreateProfile>" includes tag: "&lt;Name>" with non-empty string value of profile name 
    AND
    [S3] (Client request does not contain "&lt;Token>" tag
    OR
    "&lt;CreateProfile>" includes tag: "&lt;Token>" with non-empty string value of specific profile token) 
AND
[S4] Device response contains "HTTP/* 200 OK" AND
[S5] Device response contains "&lt;CreateProfileResponse>" tag.</literallayout>
            <literallayout class="normal"><emphasis role="bold">FAIL -</emphasis>
The Client failed PASS criteria.</literallayout>
            <para><emphasis role="bold">Validated Feature List:
                </emphasis>MediaProfileConfigurations_CreateProfile</para>
        </section>
    </section>
    <section>
        <title>Video Source Configurations Test Cases</title>
        <section>
            <title>Expected Scenarios Under Test:</title>
            <para>
                <orderedlist>
                    <listitem>
                        <para>Client connects to Device to list, modify and add Video Source
                            Configurations.</para>
                    </listitem>
                    <listitem>
                        <para>Client is considered as supporting Video Source Configurations if the
                            following conditions are met:<itemizedlist>
                                <listitem>
                                    <para>Client is able to list all existing video source
                                        configurations by using EITHER GetVideoSourceConfigurations
                                        OR GetVideoSourceConfiguration operations AND</para>
                                </listitem>
                                <listitem>
                                    <para>Client is able to modify an existing video source
                                        configuration by using the following sequence of commands:<itemizedlist>
                                            <listitem>
                                                <para>Retrieve all video source configurations of
                                                  the Device that are compatible with a certain
                                                  media profile by using
                                                  GetCompatibleVideoSourceConfigurations operation
                                                  AND</para>
                                            </listitem>
                                            <listitem>
                                                <para>Retrieve a video source options for a specific
                                                  profile and configuration tokens by using
                                                  GetVideoSourceConfigurationOptions operation
                                                  AND</para>
                                            </listitem>
                                            <listitem>
                                                <para>Modify a video source configuration by using
                                                  SetVideoSourceConfiguration operation AND</para>
                                            </listitem>
                                            <listitem>
                                                <para>Retrieve video source configuration for a
                                                  specific configuration token by using
                                                  GetVideoSourceConfiguration operation AND</para>
                                            </listitem>
                                        </itemizedlist></para>
                                </listitem>
                                <listitem>
                                    <para>Client is able to add video source configurations using
                                        AddVideoSourceConfiguration operation.</para>
                                </listitem>
                            </itemizedlist></para>
                    </listitem>
                    <listitem>
                        <para>Client is considered as NOT supporting Video Source Configurations if
                            ANY of the following is TRUE:<itemizedlist>
                                <listitem>
                                    <para>No Valid Device Response to GetVideoSourceConfigurations
                                        request OR</para>
                                </listitem>
                                <listitem>
                                    <para>No Valid Device Response to
                                        GetCompatibleVideoSourceConfigurations request OR</para>
                                </listitem>
                                <listitem>
                                    <para>No Valid Device Response to GetVideoSourceConfiguration
                                        request OR</para>
                                </listitem>
                                <listitem>
                                    <para>No Valid Device Response to
                                        GetVideoSourceConfigurationOptions request OR</para>
                                </listitem>
                                <listitem>
                                    <para>No Valid Device Response to SetVideoSourceConfiguration
                                        OR</para>
                                </listitem>
                                <listitem>
                                    <para>No Valid Device Response to
                                        AddVideoSourceConfiguration.</para>
                                </listitem>
                            </itemizedlist></para>
                    </listitem>
                </orderedlist>
            </para>
        </section>
        <section>
            <title><emphasis role="italic">LIST VIDEO SOURCE CONFIGURATIONS</emphasis></title>
            <para><emphasis role="bold">Test Label:</emphasis> Video Source Configurations - list
                available video source configurations</para>
            <para><emphasis role="bold">Test Case ID:</emphasis> VIDEOSOURCECONFIGURATIONS-1</para>
            <para><emphasis role="bold">Profile S Requirement:</emphasis> Conditional</para>
            <para><emphasis role="bold">Feature Under Test:</emphasis> Video Source
                Configurations</para>
            <para><emphasis role="bold">Test Purpose:</emphasis> To verify that list of all existing
                video source configurations from Device is received by Client using the
                GetVideoSourceConfigurations operation.</para>
            <para><emphasis role="bold">Pre-Requisite:</emphasis><itemizedlist>
                    <listitem>
                        <para>The Network Trace Capture files contains at least one Conversation
                            between Client and Device with GetVideoSourceConfigurations operation
                            present.</para>
                    </listitem>
                </itemizedlist></para>
            <para><emphasis role="bold">Test Procedure (expected to be reflected in network trace
                    file):</emphasis><orderedlist>
                    <listitem>
                        <para>Client invokes GetVideoSourceConfigurations request message to
                            retrieve complete list of available video encoder configurations from
                            Device.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and
                            GetVideoSourceConfigurationsResponse message.</para>
                    </listitem>
                </orderedlist></para>
            <para><emphasis role="bold">Test Result:</emphasis></para>
            <literallayout class="normal"><emphasis role="bold">PASS -</emphasis>
Client GetVideoSourceConfigurations request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client GetVideoSourceConfigurations request message has a proper hierarchy (refer to media.wsdl) AND
[S1] Client request contains "&lt;GetVideoSourceConfigurations>" tag after the "&lt;Body>" tag AND
[S2] Device response contains "HTTP/* 200 OK" AND
[S3] Device response contains "&lt;GetVideoSourceConfigurationsResponse>" tag.</literallayout>
            <literallayout class="normal"><emphasis role="bold">FAIL -</emphasis>
The Client failed PASS criteria.</literallayout>
            <para><emphasis role="bold">Validated Feature List:
                </emphasis>VideoSourceConfigurations_GetVideoSourceConfigurations</para>
        </section>
        <section>
            <title><emphasis role="italic">GET SPECIFIC VIDEO SOURCE
                CONFIGURATION</emphasis></title>
            <para><emphasis role="bold">Test Label:</emphasis> Video Source Configurations - gets a
                specific video source configuration</para>
            <para><emphasis role="bold">Test Case ID:</emphasis> VIDEOSOURCECONFIGURATIONS-2</para>
            <para><emphasis role="bold">Profile S Requirement:</emphasis> Conditional</para>
            <para><emphasis role="bold">Feature Under Test:</emphasis> Video Source
                Configurations</para>
            <para><emphasis role="bold">Test Purpose:</emphasis> To verify that Client is able to
                retrieve a specific video source configuration from Device by using the
                GetVideoSourceConfiguration operation.</para>
            <para><emphasis role="bold">Pre-Requisite:</emphasis><itemizedlist>
                    <listitem>
                        <para>The Network Trace Capture files contains at least one Conversation
                            between Client and Device with GetVideoSourceConfiguration operation
                            present.</para>
                    </listitem>
                </itemizedlist></para>
            <para><emphasis role="bold">Test Procedure (expected to be reflected in network trace
                    file):</emphasis><orderedlist>
                    <listitem>
                        <para>Client invokes GetVideoSourceConfiguration request message with
                            specified ConfigurationToken.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and
                            GetVideoSourceConfigurationResponse message.</para>
                    </listitem>
                </orderedlist></para>
            <para><emphasis role="bold">Test Result:</emphasis></para>
            <literallayout class="normal"><emphasis role="bold">PASS -</emphasis>
Client GetVideoSourceConfiguration request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client GetVideoSourceConfiguration request message has a proper hierarchy (refer to media.wsdl) AND
[S1] Client request contains "&lt;GetVideoSourceConfiguration>" tag after the "&lt;Body>" tag  AND
    [S2] "&lt;GetVideoSourceConfiguration>" includes tag: "&lt;ConfigurationToken>" with non-empty string value AND
[S3] Device response contains "HTTP/* 200 OK" AND
[S4] Device response contains "&lt;GetVideoSourceConfigurationResponse>" tag.
</literallayout>
            <literallayout class="normal"><emphasis role="bold">FAIL -</emphasis>
The Client failed PASS criteria.</literallayout>
            <para><emphasis role="bold">Validated Feature List:
                </emphasis>VideoSourceConfigurations_GetVideoSourceConfiguration</para>
        </section>
        <section>
            <title><emphasis role="italic">MODIFY VIDEO SOURCE CONFIGURATION</emphasis></title>
            <para><emphasis role="bold">Test Label:</emphasis> Video Source Configurations - modify
                video source configuration.</para>
            <para><emphasis role="bold">Test Case ID:</emphasis> VIDEOSOURCECONFIGURATION-3</para>
            <para><emphasis role="bold">Profile S Requirement:</emphasis> Conditional</para>
            <para><emphasis role="bold">Feature Under Test:</emphasis> Video Source
                Configurations</para>
            <para><emphasis role="bold">Test Purpose:</emphasis> To verify that Client is able to
                modify video source configuration on Device by using the
                GetCompatibleVideoSourceConfigurations, GetVideoSourceConfiguration,
                GetVideoSourceConfigurationOptions and SetVideoSourceConfiguration
                operations.</para>
            <para><emphasis role="bold">Pre-Requisite:</emphasis><itemizedlist>
                    <listitem>
                        <para>The Network Trace Capture files contains at least one Conversation
                            between Client and Device with GetCompatibleVideoSourceConfigurations,
                            GetVideoSourceConfigurationOptions, SetVideoSourceConfiguration and
                            GetVideoSourceConfiguration operations present.</para>
                    </listitem>
                </itemizedlist></para>
            <para><emphasis role="bold">Test Procedure (expected to be reflected in network trace
                    file):</emphasis><orderedlist>
                    <listitem>
                        <para>Client invokes GetCompatibleVideoSourceConfigurations request with
                            specified media profile token as input argument.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and
                            GetCompatibleVideoSourceConfigurationsResponse message with a list of
                            video source configurations compatible with the received media profile
                            token.</para>
                    </listitem>
                    <listitem>
                        <para>Client invokes GetVideoSourceConfigurationOptions request with
                            specified video source configuration token as input argument.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and
                            GetVideoSourceConfigurationOptionsResponse message with range of
                            configurable values supported by Device for the received video source
                            configuration token.</para>
                    </listitem>
                    <listitem>
                        <para>Client invokes SetVideoSourceConfiguration request with video source
                            configuration values within the range specified in the
                            GetVideoSourceConfigurationOptionsResponse and "ForcePersistence"
                            flag.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and
                            SetVideoSourceConfigurationResponse message.</para>
                    </listitem>
                    <listitem>
                        <para>Client invokes GetVideoSourceConfiguration request to verify the
                            modified video source configuration.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and
                            GetVideoSourceConfigurationResponse message with modified video source
                            configuration listed.</para>
                    </listitem>
                </orderedlist></para>
            <para><emphasis role="bold">Test Result:</emphasis></para>
            <literallayout class="normal"><emphasis role="bold">PASS -</emphasis>
Client GetCompatibleVideoSourceConfigurations request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client GetCompatibleVideoSourceConfigurations request message has a proper hierarchy (refer to media.wsdl) AND
[S1] Client request contains "&lt;GetCompatibleVideoSourceConfigurations>" tag after the "&lt;Body>" tag  AND
    [S2] "&lt;GetCompatibleVideoSourceConfigurations>" includes tag: "&lt;ProfileToken> with non-empty string 
    value of specified profile token AND
[S3] Device response contains "HTTP/* 200 OK" AND
[S4] Device response contains "&lt;GetCompatibleVideoSourceConfigurationsResponse>" tag AND
AND
Client GetVideoSourceConfigurationOptions request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client GetVideoSourceConfigurationOptions request message has a proper hierarchy (refer to media.wsdl) AND
[S5] Client request contains "&lt;GetVideoSourceConfigurationOptions>" tag after the "&lt;Body>" tag  AND
    [S6] (Client request does not contain "&lt;ConfigurationToken>" tag 
    OR
    "&lt;GetVideoSourceConfigurationOptions>" includes tag: "&lt;ConfigurationToken> with non-empty string 
    of specified configuration token)
    AND
    [S7] (Client request does not contain "&lt;ProfileToken>" tag 
    OR
    "&lt;GetVideoSourceConfigurationOptions>" includes tag: "&lt;ProfileToken> with non-empty string 
    of specified profile token) AND
[S8] Device response contains "HTTP/* 200 OK" AND
[S9] Device response contains "&lt;GetVideoSourceConfigurationOptionsResponse>" tag
AND
Client SetVideoSourceConfiguration request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client SetVideoSourceConfiguration request message has a proper hierarchy (refer to media.wsdl) AND
[S10] Client request contains "&lt;SetVideoSourceConfiguration>" tag after the "&lt;Body>" tag  AND
    [S11] "&lt;SetVideoSourceConfiguration>" includes tag: "&lt;Configuration>" with non-empty string 
    of "Token=*" parameter 
    AND
    [S12] "&lt;Configuration>" includes any combination of parameters in child tags which are corresponding to 
    GetVideoSourceConfigurationOptionsResponse available options 
    (see ONVIF Application Programmers Guide for more information) 
    AND
    [S13] "&lt;SetVideoSourceConfiguration>" includes tag: "&lt;ForcePersistence>" with either "TRUE" OR "FALSE" values AND
[S14] Device response contains "HTTP/* 200 OK" AND
[S15] Device response contains "&lt;SetVideoSourceConfigurationResponse>" tag
AND
Client GetVideoSourceConfiguration request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client GetVideoSourceConfiguration request message has a proper hierarchy (refer to media.wsdl) AND
[S16] Client request contains "&lt;GetVideoSourceConfiguration>" tag after the "&lt;Body>" tag  AND
    [S17] "&lt;GetVideoSourceConfiguration>" includes tag: "&lt;ConfigurationToken>" with 
    value equal to "Token=*" parameter value from SetVideoSourceConfiguration request message AND
[S18] Device response contains "HTTP/* 200 OK" AND
[S19] Device response contains "&lt;GetVideoSourceConfigurationResponse>" tag.</literallayout>
            <literallayout class="normal"><emphasis role="bold">FAIL -</emphasis>
The Client failed PASS criteria.</literallayout>
            <para><emphasis role="bold">Validated Feature List:
                </emphasis>VideoSourceConfigurations_ModifyVideoSourceConfiguration</para>
        </section>
        <section>
            <title><emphasis role="italic">ADD VIDEO SOURCE CONFIGURATION</emphasis></title>
            <para><emphasis role="bold">Test Label:</emphasis> Video Source Configuration - add
                video source configuration</para>
            <para><emphasis role="bold">Test Case ID:</emphasis> VIDEOSOURCECONFIGURATION-4</para>
            <para><emphasis role="bold">Profile S Requirement:</emphasis> Conditional</para>
            <para><emphasis role="bold">Feature Under Test:</emphasis> Video Source
                Configurations</para>
            <para><emphasis role="bold">Test Purpose:</emphasis> To verify that Client is able to
                add a new or replace an existing video source configuration on Device by using the
                AddVideoSourceConfiguration operation.</para>
            <para><emphasis role="bold">Pre-Requisite:</emphasis><itemizedlist>
                    <listitem>
                        <para>The Network Trace Capture files contains at least one Conversation
                            between Client and Device with AddVideoSourceConfiguration operation
                            present.</para>
                    </listitem>
                </itemizedlist></para>
            <para><emphasis role="bold">Test Procedure (expected to be reflected in network trace
                    file):</emphasis><orderedlist>
                    <listitem>
                        <para>Client invokes AddVideoSourceConfiguration request message with
                            specified ProfileToken and ConfigurationToken elements to add an
                            existing video source configuration to an existing media profile.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and
                            AddVideoSourceConfigurationResponse message.</para>
                    </listitem>
                </orderedlist></para>
            <para><emphasis role="bold">Test Result:</emphasis></para>
            <literallayout class="normal"><emphasis role="bold">PASS -</emphasis>
Client AddVideoSourceConfiguration request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client AddVideoSourceConfiguration request message has a proper hierarchy (refer to media.wsdl) AND
[S1] Client request contains "&lt;AddVideoSourceConfiguration>" tag after the "&lt;Body>" tag AND
    [S2] "&lt;AddVideoSourceConfiguration>" includes tag: "&lt;ProfileToken>" with non-empty string value of specific 
    profile token AND
    [S3] "&lt;AddVideoSourceConfiguration>" includes tag: "&lt;ConfigurationToken>" with non-empty string value of specific 
    configuration token AND
[S4] Device response contains "HTTP/* 200 OK" AND
[S5] Device response contains "&lt;AddVideoSourceConfigurationResponse>" tag.</literallayout>
            <literallayout class="normal"><emphasis role="bold">FAIL -</emphasis>
The Client failed PASS criteria.</literallayout>
            <para><emphasis role="bold">Validated Feature List:
                </emphasis>VideoSourceConfigurations_AddVideoSourceConfiguration</para>
        </section>
    </section>
    
    <section>
        <title>PTZ - Listing Test Cases</title>
        <section>
            <title>Expected Scenarios Under Test:</title>
            <para>
                <orderedlist>
                    <listitem>
                        <para>Client connects to Device to read PTZ capabilities.</para>
                    </listitem>
                    <listitem>
                        <para>Client is considered as supporting PTZ - Listing if the following
                            conditions are met:<itemizedlist>
                                <listitem>
                                    <para>Client is able to read PTZ capabilities from PTZ Node
                                        using EITHER GetNodes OR GetNode operations.</para>
                                </listitem>
                            </itemizedlist></para>
                    </listitem>
                    <listitem>
                        <para>Client is considered as NOT supporting PTZ - Listing if ANY of the
                            following is TRUE:<itemizedlist>
                                <listitem>
                                    <para>No Valid Device Response to GetNodes request AND</para>
                                </listitem>
                                <listitem>
                                    <para>No Valid Device Response to GetNode request.</para>
                                </listitem>
                            </itemizedlist></para>
                    </listitem>
                </orderedlist>
            </para>
        </section>
        <section>
            <title><emphasis role="italic">GET NODES </emphasis></title>
            <para><emphasis role="bold">Test Label:</emphasis> PTZ Listing - GetNodes </para>
            <para><emphasis role="bold">Test Case ID:</emphasis> PTZLISTING-1</para>
            <para><emphasis role="bold">Profile S Requirement:</emphasis> Conditional</para>
            <para><emphasis role="bold">Feature Under Test:</emphasis> PTZ Listing</para>
            <para><emphasis role="bold">Test Purpose:</emphasis> To verify that list of all existing
                PTZ capabilities from Device is received by Client using the GetNodes
                operation.</para>
            <para><emphasis role="bold">Pre-Requisite:</emphasis><itemizedlist>
                <listitem>
                    <para>The Network Trace Capture files contains at least one conversation between
                            Client and Device with GetNodes operation present.</para>
                </listitem>
            </itemizedlist></para>
            <para><emphasis role="bold">Test Procedure (expected to be reflected in network trace
                file):</emphasis><orderedlist>
                    <listitem>
                        <para>Client invokes GetNodes request message to retrieve complete PTZ
                            capabilities list from Device.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and GetNodesResponse
                            message.</para>
                    </listitem>
                </orderedlist></para>
            <para><emphasis role="bold">Test Result:</emphasis></para>
            <literallayout class="normal"><emphasis role="bold">PASS -</emphasis>
Client GetNodes request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client GetNodes request message has a proper hierarchy (refer to ptz.wsdl) AND
[S1] Client request contains "&lt;GetNodes>" tag after the "&lt;Body>" tag  AND
[S2] Device response contains "HTTP/* 200 OK" AND
[S3] Device response contains "&lt;GetNodesResponse>" tag..</literallayout>
            <literallayout class="normal"><emphasis role="bold">FAIL -</emphasis>
The Client failed PASS criteria.</literallayout>
            <para><emphasis role="bold">Validated Feature List:
                </emphasis>PTZListing_GetNodes</para>
        </section>
        <section>
            <title><emphasis role="italic">GET NODE</emphasis></title>
            <para><emphasis role="bold">Test Label:</emphasis> PTZ Listing - GetNode</para>
            <para><emphasis role="bold">Test Case ID:</emphasis> PTZLISTING-2</para>
            <para><emphasis role="bold">Profile S Requirement:</emphasis> Conditional</para>
            <para><emphasis role="bold">Feature Under Test:</emphasis> PTZ Listing</para>
            <para><emphasis role="bold">Test Purpose:</emphasis> To verify that Client is able to
                retrieve a specific PTZ capability properties from Device using the GetNode
                operation.</para>
            <para><emphasis role="bold">Pre-Requisite:</emphasis><itemizedlist>
                <listitem>
                    <para>The Network Trace Capture files contains at least one conversation between
                            Client and Device with GetNode operation present.</para>
                </listitem>
            </itemizedlist></para>
            <para><emphasis role="bold">Test Procedure (expected to be reflected in network trace
                file):</emphasis><orderedlist>
                    <listitem>
                        <para>Client invokes GetNode request message to retrieve a specific PTZ
                            capability properties from Device.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and GetNodeResponse
                            message.</para>
                    </listitem>
                </orderedlist></para>
            <para><emphasis role="bold">Test Result:</emphasis></para>
            <literallayout class="normal"><emphasis role="bold">PASS -</emphasis>
Client GetNode request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client GetNode request message has a proper hierarchy (refer to ptz.wsdl) AND
[S1] Client request contains "&lt;GetNode>" tag after the "&lt;Body>" tag  AND
[S2] "&lt;GetNode>" includes tag: "&lt;NodeToken>" with non-empty string value of specific token AND
[S3] Device response contains "HTTP/* 200 OK" AND
[S4] Device response contains "&lt;GetNodeResponse>" tag.</literallayout>
            <literallayout class="normal"><emphasis role="bold">FAIL -</emphasis>
The Client failed PASS criteria.</literallayout>
            <para><emphasis role="bold">Validated Feature List: </emphasis>PTZListing_GetNode</para>
        </section>
    </section>
    
    <section>
        <title>PTZ - Configuration Test Cases</title>
        <section>
            <title>Expected Scenarios Under Test:</title>
            <para>
                <orderedlist>
                    <listitem>
                        <para>Client connects to Device to add PTZ configuration to a media
                            profile.</para>
                    </listitem>
                    <listitem>
                        <para>Client is considered as supporting PTZ - Configuration if the
                            following conditions are met:<itemizedlist>
                                <listitem>
                                    <para>Client is able to add PTZ configuration to an existing
                                        media profile using GetConfigurations operation AND
                                        AddPTZConfiguration operation.</para>
                                </listitem>
                            </itemizedlist></para>
                    </listitem>
                    <listitem>
                        <para>Client is considered as NOT supporting PTZ - Configuration if ANY of
                            the following is TRUE:<itemizedlist>
                                <listitem>
                                    <para>No Valid Device Response to GetConfigurations request
                                        OR</para>
                                </listitem>
                                <listitem>
                                    <para>No Valid Device Response to AddPTZConfiguration
                                        request.</para>
                                </listitem>
                            </itemizedlist></para>
                    </listitem>
                </orderedlist>
            </para>
        </section>
        <section>
            <title><emphasis role="italic">ADD PTZ CONFIGURATION </emphasis></title>
            <para><emphasis role="bold">Test Label:</emphasis> PTZ Configuration - Add PTZ
                Configuration </para>
            <para><emphasis role="bold">Test Case ID:</emphasis> PTZCONFIGURATION-1</para>
            <para><emphasis role="bold">Profile S Requirement:</emphasis> Conditional</para>
            <para><emphasis role="bold">Feature Under Test:</emphasis> PTZ Configuration</para>
            <para><emphasis role="bold">Test Purpose:</emphasis> To verify that Client is able to
                add PTZ configuration to a profile using GetConfigurations and AddPTZConfiguration
                operations.</para>
            <para><emphasis role="bold">Pre-Requisite:</emphasis><itemizedlist>
                <listitem>
                    <para>The Network Trace Capture files contains at least one conversation between
                            Client and Device with GetConfigurations and AddPTZConfiguration
                            operations present.</para>
                </listitem>
            </itemizedlist></para>
            <para><emphasis role="bold">Test Procedure (expected to be reflected in network trace
                file):</emphasis><orderedlist>
                    <listitem>
                        <para>Client invokes GetConfigurations request message to retrieve all
                            available PTZ configurations from Device.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and GetConfigurationsResponse
                            message.</para>
                    </listitem>
                    <listitem>
                        <para>Client invokes AddPTZConfiguration request message to add a PTZ
                            configuration to an existing media profile.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and AddPTZConfigurationResponse
                            message.</para>
                    </listitem>
                </orderedlist></para>
            <para><emphasis role="bold">Test Result:</emphasis></para>
            <literallayout class="normal"><emphasis role="bold">PASS -</emphasis>
Client GetConfigurations request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client GetConfigurations request message has a proper hierarchy (refer to ptz.wsdl) AND
[S1] Client request contains "&lt;GetConfigurations>" tag after the "&lt;Body>" tag  AND
[S2] Device response contains "HTTP/* 200 OK" AND
[S3] Device response contains "&lt;GetConfigurationsResponse>" tag
AND
Client AddPTZConfiguration request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client AddPTZConfiguration request message has a proper hierarchy (refer to media.wsdl) AND
[S4] Client request contains "&lt;AddPTZConfiguration>" tag after the "&lt;Body>" tag  AND
    [S5] "&lt;AddPTZConfiguration>" includes tag: "&lt;ProfileToken>" with non-empty string value of specific token AND
    [S6] "&lt;AddPTZConfiguration>" includes tag: "&lt;ConfigurationToken>" with non-empty string value of specific token AND
[S7] Device response contains "HTTP/* 200 OK" AND
[S8] Device response contains "&lt;AddPTZConfigurationResponse>" tag.</literallayout>
            <literallayout class="normal"><emphasis role="bold">FAIL -</emphasis>
The Client failed PASS criteria.</literallayout>
            <para><emphasis role="bold">Validated Feature List:
                </emphasis>PTZConfiguration_AddPTZConfiguration</para>
        </section>
    </section>
    
    <section>
        <title>PTZ - Continuous Positioning Test Cases</title>
        <section>
            <title>Expected Scenarios Under Test:</title>
            <para>
                <orderedlist>
                    <listitem>
                        <para>Client connects to Device to control PTZ position using continuous
                            move.</para>
                    </listitem>
                    <listitem>
                        <para>Client is considered as supporting PTZ - Continuous Positioning if the
                            following conditions are met:<itemizedlist>
                                <listitem>
                                    <para>Client is able to move PTZ Device using the ContinuousMove
                                        operation by EITHER Move a PTZ Device using the
                                        ContinuousMove operation with specified PanTilt element OR
                                        change zoom of PTZ Device using the ContinuousMove operation
                                        with specified Zoom element AND</para>
                                </listitem>
                                <listitem>
                                    <para>Client is able to stop PTZ Device movement using the Stop
                                        operation OR ContinuousMove operation with zero values in
                                        PanTilt OR Zoom elements.</para>
                                </listitem>
                            </itemizedlist></para>
                    </listitem>
                    <listitem>
                        <para>Client is considered as NOT supporting PTZ - Continuous Positioning if
                            ANY of the following is TRUE:<itemizedlist>
                                <listitem>
                                    <para>BOTH (No Valid Device Response to ContinuousMove request
                                        with specified PanTilt element AND No Valid Device Response
                                        to ContinuousMove request with specified Zoom element)
                                        OR</para>
                                </listitem>
                                <listitem>
                                    <para>BOTH (No Valid Device Response to Stop request AND No
                                        Valid Device Response to ContinuousMove request with zero
                                        values in PanTilt OR Zoom elements).</para>
                                </listitem>
                            </itemizedlist></para>
                    </listitem>
                </orderedlist>
            </para>
        </section>
        <section>
            <title><emphasis role="italic">PTZ CONTINUOUS MOVE PAN/TILT </emphasis></title>
            <para><emphasis role="bold">Test Label:</emphasis> PTZ Continuous Positioning - ContinuousMove PanTilt </para>
            <para><emphasis role="bold">Test Case ID:</emphasis> PTZCONTINUOUSPOSITIONING-1</para>
            <para><emphasis role="bold">Profile S Requirement:</emphasis> Conditional</para>
            <para><emphasis role="bold">Feature Under Test:</emphasis> PTZ Continuous Positioning</para>
            <para><emphasis role="bold">Test Purpose:</emphasis> To verify that Client is able to
                move a PTZ Device using the ContinuousMove operation with specified PanTilt
                element.</para>
            <para><emphasis role="bold">Pre-Requisite:</emphasis><itemizedlist>
                <listitem>
                    <para>The Network Trace Capture files contains at least one conversation between
                            Client and Device with ContinuousMove operation present.</para>
                </listitem>
            </itemizedlist></para>
            <para><emphasis role="bold">Test Procedure (expected to be reflected in network trace
                file):</emphasis><orderedlist>
                    <listitem>
                        <para>Client invokes ContinuousMove request message to start move of PTZ
                            Device using specific value of PanTilt element.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and ContinuousMoveResponse
                            message.</para>
                    </listitem>
                </orderedlist></para>
            <para><emphasis role="bold">Test Result:</emphasis></para>
            <para><emphasis role="bold">NOTE:</emphasis> If Client ContinuousMove request message
                does not contain "&lt;PanTilt>" tag inside "&lt;Velocity>" tag then Test shall be
                deemed as "NOT DETECTED".</para>
            <literallayout class="normal"><emphasis role="bold">PASS -</emphasis>
Client ContinuousMove request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client ContinuousMove request message has a proper hierarchy (refer to ptz.wsdl) AND
[S1] Client request contains "&lt;ContinuousMove>" tag after the "&lt;Body>" tag  AND
    [S2] "&lt;ContinuousMove>" includes tag: "&lt;ProfileToken>" with non-empty string value of specific token AND
    [S3] "&lt;ContinuousMove>" includes tag: "&lt;Velocity>" AND
    [S4] "&lt;Velocity>" includes tag: "&lt;PanTilt>" AND
    [S5] "&lt;PanTilt>" tag contains attribute: "x=" with value (example: -1, 0.1, 1, ...) AND
    [S6] "&lt;PanTilt>" tag contains attribute: "y=" with value (example: -1, 0.1, 1, ...) AND
[S7] Device response contains "HTTP/* 200 OK" AND
[S8] Device response contains "&lt;ContinuousMoveResponse>" tag.</literallayout>
            <literallayout class="normal"><emphasis role="bold">FAIL -</emphasis>
The Client failed PASS criteria.</literallayout>
            <para><emphasis role="bold">Validated Feature List:
                </emphasis>PTZContinuousPositioning_ContinuousMovePanTilt</para>
        </section>
        <section>
            <title><emphasis role="italic">PTZ CONTINUOUS MOVE ZOOM</emphasis></title>
            <para><emphasis role="bold">Test Label:</emphasis> PTZ Continuous Positioning - ContinuousMove Zoom</para>
            <para><emphasis role="bold">Test Case ID:</emphasis> PTZCONTINUOUSPOSITIONING-2</para>
            <para><emphasis role="bold">Profile S Requirement:</emphasis> Conditional</para>
            <para><emphasis role="bold">Feature Under Test:</emphasis> PTZ Continuous
                Positioning</para>
            <para><emphasis role="bold">Test Purpose:</emphasis> To verify that Client is able to
                change zoom of PTZ Device using the ContinuousMove operation with specified Zoom
                element.</para>
            <para><emphasis role="bold">Pre-Requisite:</emphasis><itemizedlist>
                <listitem>
                    <para>The Network Trace Capture files contains at least one conversation between
                            Client and Device with ContinuousMove operation present.</para>
                </listitem>
            </itemizedlist></para>
            <para><emphasis role="bold">Test Procedure (expected to be reflected in network trace
                file):</emphasis><orderedlist>
                    <listitem>
                        <para>Client invokes ContinuousMove request message to change zoom of PTZ
                            Device using specific value of Zoom element.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and ContinuousMoveResponse
                            message.</para>
                    </listitem>
                </orderedlist></para>
            <para><emphasis role="bold">Test Result:</emphasis></para>
            <para><emphasis role="bold">NOTE:</emphasis> If Client ContinuousMove request message
                does not contain "&lt;Zoom>" tag inside "&lt;Velocity>" tag then Test shall be
                deemed as "NOT DETECTED".</para>
            <literallayout class="normal"><emphasis role="bold">PASS -</emphasis>
Client ContinuousMove request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client ContinuousMove request message has a proper hierarchy (refer to ptz.wsdl) AND
[S1] Client request contains "&lt;ContinuousMove>" tag after the "&lt;Body>" tag  AND
    [S2] "&lt;ContinuousMove>" includes tag: "&lt;ProfileToken>" with non-empty string value of specific token AND
    [S3] "&lt;ContinuousMove>" includes tag: "&lt;Velocity>" AND
    [S4] "&lt;Velocity>" includes tag: "&lt;Zoom>" AND
    [S5] "&lt;Zoom>" tag contains attribute: "x=" with value (example: -1, 0.1, 1, ...) AND
[S6] Device response contains "HTTP/* 200 OK" AND
[S7] Device response contains "&lt;ContinuousMoveResponse>" tag.</literallayout>
            <literallayout class="normal"><emphasis role="bold">FAIL -</emphasis>
The Client failed PASS criteria.</literallayout>
            <para><emphasis role="bold">Validated Feature List:
                </emphasis>PTZContinuousPositioning_ContinuousMoveZoom</para>
        </section>
        <section>
            <title><emphasis role="italic">PTZ STOP</emphasis></title>
            <para><emphasis role="bold">Test Label:</emphasis> PTZ Continuous Positioning - Stop</para>
            <para><emphasis role="bold">Test Case ID:</emphasis> PTZCONTINUOUSPOSITIONING-3</para>
            <para><emphasis role="bold">Profile S Requirement:</emphasis> Conditional</para>
            <para><emphasis role="bold">Feature Under Test:</emphasis> PTZ Continuous
                Positioning</para>
            <para><emphasis role="bold">Test Purpose:</emphasis> To verify that Client is able to
                stop a PTZ Device movement using the Stop operation OR using ContinuousMove
                operation with zero values in PanTilt OR Zoom element.</para>
            <para><emphasis role="bold">Pre-Requisite:</emphasis><itemizedlist>
                    <listitem>
                        <para>The Network Trace Capture files contains at least one conversation
                            between Client and Device with Stop operation present </para>
                        <para>OR</para>
                    </listitem>
                    <listitem>
                        <para>The Network Trace Capture files contains at least one conversation
                            between Client and Device with ContinuousMove operation present with
                            zero values in PanTilt OR Zoom elements.</para>
                    </listitem>
                </itemizedlist></para>
            <para><emphasis role="bold">Test Procedure (expected to be reflected in network trace
                    file):</emphasis><orderedlist>
                    <listitem>
                        <para>Client invokes Stop request message to stop ongoing movements of PTZ
                            Device.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and StopResponse message. </para>
                        
                    </listitem>
                    </orderedlist><orderedlist><para>OR</para><listitem>
                        <para>Client invokes ContinuousMove request message with zero values in
                            PanTilt OR Zoom elements.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and ContinuousMoveResponse
                            message.</para>
                    </listitem>
                </orderedlist></para>
            <para><emphasis role="bold">Test Result:</emphasis></para>
            <para><emphasis role="bold">NOTE:</emphasis> In case when Stop request message is not
                present in conversation and if Client ContinuousMove request message does not
                contain "&lt;PanTilt>" or "&lt;Zoom>" tags inside "&lt;Velocity>" tag with zero
                values of "x" or "y" attributes then Test shall be deemed as "NOT DETECTED".</para>
            <literallayout class="normal"><emphasis role="bold">PASS -</emphasis>
EITHER (Client Stop request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client Stop request message has a proper hierarchy (refer to ptz.wsdl) AND
[S1] Client request contains "&lt;Stop>" tag after the "&lt;Body>" tag  AND
    [S2] "&lt;Stop>" includes tag: "&lt;ProfileToken>" with non-empty string value of specific token AND
[S3] Device response contains "HTTP/* 200 OK" AND
[S4] Device response contains "&lt;StopResponse>" tag) 
OR
(Client ContinuousMove request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client ContinuousMove request message has a proper hierarchy (refer to ptz.wsdl) AND
[S1] Client request contains "&lt;ContinuousMove>" tag after the "&lt;Body>" tag  AND
    [S2] "&lt;ContinuousMove>" includes tag: "&lt;ProfileToken>" with non-empty string value of specific token AND
    [S3] "&lt;ContinuousMove>" includes tag: "&lt;Velocity>" AND
    EITHER 
    ([S4] "&lt;Velocity>" includes tag: "&lt;PanTilt>" AND
    [S5] "&lt;PanTilt>" tag contains attribute: "x=0" OR
    [S6] "&lt;PanTilt>" tag contains attribute: "y=0") 
    OR
    ([S7] "&lt;Velocity>" includes tag: "&lt;Zoom>" AND
    [S8] "&lt;Zoom>" tag contains attribute: "x=0") 
    AND
[S9] Device response contains "HTTP/* 200 OK" AND
[S10] Device response contains "&lt;ContinuousMoveResponse>" tag).</literallayout>
            <literallayout class="normal"><emphasis role="bold">FAIL -</emphasis>
The Client failed PASS criteria.</literallayout>
            <para><emphasis role="bold">Validated Feature List:
                </emphasis>PTZContinuousPositioning_Stop</para>
        </section>
    </section>
        
    <section>
        <title>PTZ - Absolute Positioning Test Cases</title>
        <section>
            <title>Expected Scenarios Under Test:</title>
            <para>
                <orderedlist>
                    <listitem>
                        <para>Client connects to Device to read PTZ capabilities and control the
                            position using absolute positioning.</para>
                    </listitem>
                    <listitem>
                        <para>Client is considered as supporting PTZ - Absolute Positioning if the
                            following conditions are met:<itemizedlist>
                                <listitem>
                                    <para>Client is able to read PTZ capabilities from PTZ Node
                                        using EITHER GetNodes OR GetNode operations AND</para>
                                </listitem>
                                <listitem>
                                    <para>Client is able to move PTZ Device using the AbsoluteMove
                                        operation by EITHER Move a PTZ Device using the AbsoluteMove
                                        operation with specified PanTilt element OR change zoom of
                                        PTZ Device using the AbsoluteMove operation with specified
                                        Zoom element.</para>
                                </listitem>
                            </itemizedlist></para>
                    </listitem>
                    <listitem>
                        <para>Client is considered as NOT supporting PTZ - Absolute Positioning if
                            ANY of the following is TRUE:<itemizedlist>
                                <listitem>
                                    <para>BOTH (No Valid Device Response to GetNodes request AND No
                                        Valid Device Response to GetNode request) OR</para>
                                </listitem>
                                <listitem>
                                    <para>BOTH (No Valid Device Response to AbsoluteMove request
                                        with specified PanTilt element AND No Valid Device Response
                                        to AbsoluteMove request with specified Zoom element).</para>
                                </listitem>
                            </itemizedlist></para>
                    </listitem>
                </orderedlist>
            </para>
        </section>
        <section>
            <title><emphasis role="italic">PTZ ABSOLUTE MOVE PAN/TILT </emphasis></title>
            <para><emphasis role="bold">Test Label:</emphasis> PTZ Absolute Positioning -
                AbsoluteMove PanTilt </para>
            <para><emphasis role="bold">Test Case ID:</emphasis> PTZABSOLUTEPOSITIONING-1</para>
            <para><emphasis role="bold">Profile S Requirement:</emphasis> Conditional</para>
            <para><emphasis role="bold">Feature Under Test:</emphasis> PTZ Absolute
                Positioning</para>
            <para><emphasis role="bold">Test Purpose:</emphasis> To verify that Client is able to
                move a PTZ Device using the AbsoluteMove operation with specified PanTilt
                element.</para>
            <para><emphasis role="bold">Pre-Requisite:</emphasis><itemizedlist>
                <listitem>
                    <para>The Network Trace Capture files contains at least one conversation between
                            Client and Device with AbsoluteMove operation present.</para>
                </listitem>
            </itemizedlist></para>
            <para><emphasis role="bold">Test Procedure (expected to be reflected in network trace
                file):</emphasis><orderedlist>
                    <listitem>
                        <para>Client invokes AbsoluteMove request message to move of PTZ Device
                            using specific value of PanTilt element.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and AbsoluteMoveResponse
                            message.</para>
                    </listitem>
                </orderedlist></para>
            <para><emphasis role="bold">Test Result:</emphasis></para>
            <para><emphasis role="bold">NOTE:</emphasis> If Client AbsoluteMove request message does
                not contain "&lt;PanTilt>" tag inside "&lt;Position>" tag then Test shall be deemed
                as "NOT DETECTED".</para>
            <literallayout class="normal"><emphasis role="bold">PASS -</emphasis>
Client AbsoluteMove request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client AbsoluteMove request message has a proper hierarchy (refer to ptz.wsdl) AND
[S1] Client request contains "&lt;AbsoluteMove>" tag after the "&lt;Body>" tag  AND
    [S2] "&lt;AbsoluteMove>" includes tag: "&lt;ProfileToken>" with non-empty string value of specific token AND
    [S3] "&lt;AbsoluteMove>" includes tag: "&lt;Position>" AND
    [S4] "&lt;Position>" includes tag: "&lt;PanTilt>" AND
    [S5] "&lt;PanTilt>" tag contains attribute: "x=" with value (example: -1, 0.1, 1, ...) AND
    [S6] "&lt;PanTilt>" tag contains attribute: "y=" with value (example: -1, 0.1, 1, ...) AND
[S7] Device response contains "HTTP/* 200 OK" AND
[S8] Device response contains "&lt;AbsoluteMoveResponse>" tag.</literallayout>
            <literallayout class="normal"><emphasis role="bold">FAIL -</emphasis>
The Client failed PASS criteria.</literallayout>
            <para><emphasis role="bold">Validated Feature List:
                </emphasis>PTZAbsolutePositioning_AbsoluteMovePanTilt</para>
        </section>
        <section>
            <title><emphasis role="italic">PTZ ABSOLUTE MOVE ZOOM</emphasis></title>
            <para><emphasis role="bold">Test Label:</emphasis> PTZ Absolute Positioning -
                AbsoluteMove Zoom</para>
            <para><emphasis role="bold">Test Case ID:</emphasis> PTZABSOLUTEPOSITIONING-2</para>
            <para><emphasis role="bold">Profile S Requirement:</emphasis> Conditional</para>
            <para><emphasis role="bold">Feature Under Test:</emphasis> PTZ Absolute
                Positioning</para>
            <para><emphasis role="bold">Test Purpose:</emphasis> To verify that Client is able to
                change zoom of PTZ Device using the AbsoluteMove operation with specified Zoom
                element.</para>
            <para><emphasis role="bold">Pre-Requisite:</emphasis><itemizedlist>
                <listitem>
                    <para>The Network Trace Capture files contains at least one conversation between
                            Client and Device with AbsoluteMove operation present.</para>
                </listitem>
            </itemizedlist></para>
            <para><emphasis role="bold">Test Procedure (expected to be reflected in network trace
                file):</emphasis><orderedlist>
                    <listitem>
                        <para>Client invokes AbsoluteMove request message to change zoom of PTZ
                            Device using specific value of Zoom element.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and AbsoluteMoveResponse
                            message.</para>
                    </listitem>
                </orderedlist></para>
            <para><emphasis role="bold">Test Result:</emphasis></para>
            <literallayout class="normal"><emphasis role="bold">PASS -</emphasis>
Client AbsoluteMove request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client AbsoluteMove request message has a proper hierarchy (refer to ptz.wsdl) AND
[S1] Client request contains "&lt;AbsoluteMove>" tag after the "&lt;Body>" tag  AND
    [S2] "&lt;AbsoluteMove>" includes tag: "&lt;ProfileToken>" with non-empty string value of specific token AND
    [S3] "&lt;AbsoluteMove>" includes tag: "&lt;Position>" AND
    [S4] "&lt;Position>" includes tag: "&lt;Zoom>" AND
    [S5] "&lt;Zoom>" tag contains attribute: "x=" with value (example: -1, 0.1, 1, ...) AND
[S6] Device response contains "HTTP/* 200 OK" AND
[S7] Device response contains "&lt;AbsoluteMoveResponse>" tag.</literallayout>
            <literallayout class="normal"><emphasis role="bold">FAIL -</emphasis>
The Client failed PASS criteria.</literallayout>
            <para><emphasis role="bold">Validated Feature List:
                </emphasis>PTZAbsolutePositioning_AbsoluteMoveZoom</para>
        </section>
    </section>
        
    <section>
        <title>PTZ - Relative Positioning Test Cases</title>
        <section>
            <title>Expected Scenarios Under Test:</title>
            <para>
                <orderedlist>
                    <listitem>
                        <para>Client connects to Device to read PTZ capabilities and control the
                            position using relative positioning.</para>
                    </listitem>
                    <listitem>
                        <para>Client is considered as supporting PTZ - Relative Positioning if the
                            following conditions are met:<itemizedlist>
                                <listitem>
                                    <para>Client is able to read PTZ capabilities from PTZ Node
                                        using EITHER GetNodes OR GetNode operations AND</para>
                                </listitem>
                                <listitem>
                                    <para>Client is able to move PTZ Device using the RelativeMove
                                        operation by EITHER Move a PTZ Device using the RelativeMove
                                        operation with specified PanTilt element OR change zoom of
                                        PTZ Device using the RelativeMove operation with specified
                                        Zoom element).</para>
                                </listitem>
                            </itemizedlist></para>
                    </listitem>
                    <listitem>
                        <para>Client is considered as NOT supporting PTZ - Relative Positioning if
                            ANY of the following is TRUE:<itemizedlist>
                                <listitem>
                                    <para>BOTH (No Valid Device Response to GetNodes request AND No
                                        Valid Device Response to GetNode request) OR</para>
                                </listitem>
                                <listitem>
                                    <para>BOTH (No Valid Device Response to RelativeMove request
                                        with specified PanTilt element AND No Valid Device Response
                                        to RelativeMove request with specified Zoom element).</para>
                                </listitem>
                            </itemizedlist></para>
                    </listitem>
                </orderedlist>
            </para>
        </section>
        <section>
            <title><emphasis role="italic">PTZ RELATIVE MOVE PAN/TILT </emphasis></title>
            <para><emphasis role="bold">Test Label:</emphasis> PTZ Relative Positioning -
                RelativeMove PanTilt </para>
            <para><emphasis role="bold">Test Case ID:</emphasis> PTZRELATIVEPOSITIONING-1</para>
            <para><emphasis role="bold">Profile S Requirement:</emphasis> Conditional</para>
            <para><emphasis role="bold">Feature Under Test:</emphasis> PTZ Relative
                Positioning</para>
            <para><emphasis role="bold">Test Purpose:</emphasis> To verify that Client is able to
                move a PTZ Device using the RelativeMove operation with specified PanTilt
                element.</para>
            <para><emphasis role="bold">Pre-Requisite:</emphasis><itemizedlist>
                <listitem>
                    <para>The Network Trace Capture files contains at least one conversation between
                            Client and Device with RelativeMove operation present.</para>
                </listitem>
            </itemizedlist></para>
            <para><emphasis role="bold">Test Procedure (expected to be reflected in network trace
                file):</emphasis><orderedlist>
                    <listitem>
                        <para>Client invokes RelativeMove request message to move of PTZ Device
                            using specific value of PanTilt element.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and RelativeMoveResponse
                            message.</para>
                    </listitem>
                </orderedlist></para>
            <para><emphasis role="bold">Test Result:</emphasis></para>
            <para><emphasis role="bold">NOTE:</emphasis> If Client RelativeMove request message does
                not contain "&lt;PanTilt>" tag inside "&lt;Translation>" tag then Test shall be
                deemed as "NOT DETECTED".</para>
            <literallayout class="normal"><emphasis role="bold">PASS -</emphasis>
Client RelativeMove request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client RelativeMove request message has a proper hierarchy (refer to ptz.wsdl) AND
[S1] Client request contains "&lt;RelativeMove>" tag after the "&lt;Body>" tag AND
    [S2] "&lt;RelativeMove>" includes tag: "&lt;ProfileToken>" with non-empty string value of specific token AND
    [S3] "&lt;RelativeMove>" includes tag: "&lt;Translation>" AND
    [S4] "&lt;Translation>" includes tag: "&lt;PanTilt>" AND
    [S5] "&lt;PanTilt>" tag contains attribute: "x=" with value (example: -1, 0.1, 1, ...) AND
    [S6] "&lt;PanTilt>" tag contains attribute: "y=" with value (example: -1, 0.1, 1, ...) AND
[S7] Device response contains "HTTP/* 200 OK" AND
[S8] Device response contains "&lt;RelativeMoveResponse>" tag.</literallayout>
            <literallayout class="normal"><emphasis role="bold">FAIL -</emphasis>
The Client failed PASS criteria.</literallayout>
            <para><emphasis role="bold">Validated Feature List:
                </emphasis>PTZRelativePositioning_RelativeMovePanTilt</para>
        </section>
        <section>
            <title><emphasis role="italic">PTZ RELATIVE MOVE ZOOM</emphasis></title>
            <para><emphasis role="bold">Test Label:</emphasis> PTZ Relative Positioning -
                RelativeMove Zoom</para>
            <para><emphasis role="bold">Test Case ID:</emphasis> PTZRELATIVEPOSITIONING-2</para>
            <para><emphasis role="bold">Profile S Requirement:</emphasis> Conditional</para>
            <para><emphasis role="bold">Feature Under Test:</emphasis> PTZ Relative
                Positioning</para>
            <para><emphasis role="bold">Test Purpose:</emphasis> To verify that Client is able to
                change zoom of PTZ Device using the RelativeMove operation with specified Zoom
                element.</para>
            <para><emphasis role="bold">Pre-Requisite:</emphasis><itemizedlist>
                <listitem>
                    <para>The Network Trace Capture files contains at least one conversation between
                            Client and Device with RelativeMove operation present.</para>
                </listitem>
            </itemizedlist></para>
            <para><emphasis role="bold">Test Procedure (expected to be reflected in network trace
                file):</emphasis><orderedlist>
                    <listitem>
                        <para>Client invokes RelativeMove request message to change zoom of PTZ
                            Device using specific value of Zoom element.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and RelativeMoveResponse
                            message.</para>
                    </listitem>
                </orderedlist></para>
            <para><emphasis role="bold">Test Result:</emphasis></para>
            <para><emphasis role="bold">NOTE:</emphasis> If Client AbsoluteMove request message does
                not contain "&lt;Zoom>" tag inside "&lt;Translation>" tag then Test shall be deemed
                as "NOT DETECTED".</para>
            <literallayout class="normal"><emphasis role="bold">PASS -</emphasis>
Client RelativeMove request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client RelativeMove request message has a proper hierarchy (refer to ptz.wsdl) AND
[S1] Client request contains "&lt;RelativeMove>" tag after the "&lt;Body>" tag  AND
    [S2] "&lt;RelativeMove>" includes tag: "&lt;ProfileToken>" with non-empty string value of specific token AND
    [S3] "&lt;RelativeMove>" includes tag: "&lt;Translation>" AND
    [S4] "&lt;Translation>" includes tag: "&lt;Zoom>" AND
    [S5] "&lt;Zoom>" tag contains attribute: "x=" with value (example: -1, 0.1, 1, ...) AND
[S6] Device response contains "HTTP/* 200 OK" AND
[S7] Device response contains "&lt;RelativeMoveResponse>" tag.</literallayout>
            <literallayout class="normal"><emphasis role="bold">FAIL -</emphasis>
The Client failed PASS criteria.</literallayout>
            <para><emphasis role="bold">Validated Feature List:
                </emphasis>PTZRelativePositioning_RelativeMoveZoom</para>
        </section>
    </section>
        
    <section>
        <title>PTZ - Presets Test Cases</title>
        <section>
            <title>Expected Scenarios Under Test:</title>
            <para>
                <orderedlist>
                    <listitem>
                        <para>Client connects to Device to manage the presets of a PTZ Node.</para>
                    </listitem>
                    <listitem>
                        <para>Client is considered as supporting PTZ - Presets if the following
                            conditions are met:<itemizedlist>
                                <listitem>
                                    <para>Client is able to list the presets using the GetPresets
                                        operation AND</para>
                                </listitem>
                                <listitem>
                                    <para>Client is able to move a PTZ Device to a specific preset
                                        using the GotoPreset operation.</para>
                                </listitem>
                            </itemizedlist></para>
                    </listitem>
                    <listitem>
                        <para>Client is considered as NOT supporting PTZ - Presets if ANY of the
                            following is TRUE:<itemizedlist>
                                <listitem>
                                    <para>No Valid Device Response to GetPresets request OR</para>
                                </listitem>
                                <listitem>
                                    <para>No Valid Device Response to GotoPreset request.</para>
                                </listitem>
                            </itemizedlist></para>
                    </listitem>
                </orderedlist>
            </para>
        </section>
        <section>
            <title><emphasis role="italic">PTZ GET PRESETS </emphasis></title>
            <para><emphasis role="bold">Test Label:</emphasis> PTZ Presets - GetPresets </para>
            <para><emphasis role="bold">Test Case ID:</emphasis> PTZPRESETS-1</para>
            <para><emphasis role="bold">Profile S Requirement:</emphasis> Conditional</para>
            <para><emphasis role="bold">Feature Under Test:</emphasis> PTZ Presets</para>
            <para><emphasis role="bold">Test Purpose:</emphasis> To verify that Client is able to
                list the presets using the GetPresets operation.</para>
            <para><emphasis role="bold">Pre-Requisite:</emphasis><itemizedlist>
                <listitem>
                    <para>The Network Trace Capture files contains at least one conversation between
                            Client and Device with GetPresets operation present.</para>
                </listitem>
            </itemizedlist></para>
            <para><emphasis role="bold">Test Procedure (expected to be reflected in network trace
                file):</emphasis><orderedlist>
                    <listitem>
                        <para>Client invokes GetPresets request message to list the available
                            presets from Device.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and GetPresetsResponse
                            message.</para>
                    </listitem>
                </orderedlist></para>
            <para><emphasis role="bold">Test Result:</emphasis></para>
            <literallayout class="normal"><emphasis role="bold">PASS -</emphasis>
Client GetPresets request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client GetPresets request message has a proper hierarchy (refer to ptz.wsdl) AND
[S1] Client request contains "&lt;GetPresets>" tag after the "&lt;Body>" tag  AND
[S2] "&lt;GetPresets>" includes tag: "&lt;ProfileToken>" with non-empty string value of specific token AND
[S3] Device response contains "HTTP/* 200 OK" AND
[S4] Device response contains "&lt;GetPresetsResponse>" tag.</literallayout>
            <literallayout class="normal"><emphasis role="bold">FAIL -</emphasis>
The Client failed PASS criteria.</literallayout>
            <para><emphasis role="bold">Validated Feature List:
                </emphasis>PTZPresets_GetPresets</para>
        </section>
        <section>
            <title><emphasis role="italic">PTZ GOTO PRESET</emphasis></title>
            <para><emphasis role="bold">Test Label:</emphasis> PTZ Presets - GotoPreset</para>
            <para><emphasis role="bold">Test Case ID:</emphasis> PTZPRESETS-2</para>
            <para><emphasis role="bold">Profile S Requirement:</emphasis> Conditional</para>
            <para><emphasis role="bold">Feature Under Test:</emphasis> PTZ Presets</para>
            <para><emphasis role="bold">Test Purpose:</emphasis> To verify that Client is able to
                move a PTZ Device to a specific preset using the GotoPreset operation.</para>
            <para><emphasis role="bold">Pre-Requisite:</emphasis><itemizedlist>
                <listitem>
                    <para>The Network Trace Capture files contains at least one conversation between
                            Client and Device with GotoPreset operation present.</para>
                </listitem>
            </itemizedlist></para>
            <para><emphasis role="bold">Test Procedure (expected to be reflected in network trace
                file):</emphasis><orderedlist>
                    <listitem>
                        <para>Client invokes GotoPreset request message to move PTZ Device to
                            specific preset.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and GotoPresetResponse
                            message.</para>
                    </listitem>
                </orderedlist></para>
            <para><emphasis role="bold">Test Result:</emphasis></para>
            <literallayout class="normal"><emphasis role="bold">PASS -</emphasis>
Client GotoPreset request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client GotoPreset request message has a proper hierarchy (refer to ptz.wsdl) AND
[S1] Client request contains "&lt;GotoPreset>" tag after the "&lt;Body>" tag  AND
    [S2] "&lt;GotoPreset>" includes tag: "&lt;ProfileToken>" with non-empty string value of specific token AND
    [S3] "&lt;GotoPreset>" includes tag: "&lt;PresetToken>" with non-empty string value of specific token AND
[S4] Device response contains "HTTP/* 200 OK" AND
[S5] Device response contains "&lt;GotoPresetResponse>" tag.</literallayout>
            <literallayout class="normal"><emphasis role="bold">FAIL -</emphasis>
The Client failed PASS criteria.</literallayout>
            <para><emphasis role="bold">Validated Feature List:
                </emphasis>PTZPresets_GotoPreset</para>
        </section>
    </section>
        
    <section>
        <title>PTZ - Home Position Test Cases</title>
        <section>
            <title>Expected Scenarios Under Test:</title>
            <para>
                <orderedlist>
                    <listitem>
                        <para>Client connects to Device to manage the home position of a PTZ
                            Node.</para>
                    </listitem>
                    <listitem>
                        <para>Client is considered as supporting PTZ - Home Position if the
                            following conditions are met:<itemizedlist>
                                <listitem>
                                    <para>Client is able to move PTZ Device to its home position
                                        using the GotoHomePosition operation</para>
                                </listitem>
                            </itemizedlist></para>
                    </listitem>
                    <listitem>
                        <para>Client is considered as NOT supporting PTZ - Home Position if ANY of
                            the following is TRUE:<itemizedlist>
                                <listitem>
                                    <para>No Valid Device Response to GotoHomePosition
                                        request.</para>
                                </listitem>
                            </itemizedlist></para>
                    </listitem>
                </orderedlist>
            </para>
        </section>
        <section>
            <title><emphasis role="italic">PTZ HOME POSITION</emphasis></title>
            <para><emphasis role="bold">Test Label:</emphasis> PTZ Presets - GotoHomePosition </para>
            <para><emphasis role="bold">Test Case ID:</emphasis> PTZHOMEPOSITION-1</para>
            <para><emphasis role="bold">Profile S Requirement:</emphasis> Conditional</para>
            <para><emphasis role="bold">Feature Under Test:</emphasis> PTZ Presets</para>
            <para><emphasis role="bold">Test Purpose:</emphasis> To verify that Client is able to
                move PTZ Device to its home position using the GotoHomePosition operation.</para>
            <para><emphasis role="bold">Pre-Requisite:</emphasis><itemizedlist>
                <listitem>
                    <para>The Network Trace Capture files contains at least one conversation between
                            Client and Device with GotoHomePosition operation present.</para>
                </listitem>
            </itemizedlist></para>
            <para><emphasis role="bold">Test Procedure (expected to be reflected in network trace
                file):</emphasis><orderedlist>
                    <listitem>
                        <para>Client invokes GotoHomePosition request message to move PTZ Device to
                            its home position.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and GotoHomeResponse
                            message.</para>
                    </listitem>
                </orderedlist></para>
            <para><emphasis role="bold">Test Result:</emphasis></para>
            <literallayout class="normal"><emphasis role="bold">PASS -</emphasis>
Client GotoHomePosition request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client GotoHomePosition request message has a proper hierarchy (refer to ptz.wsdl) AND
[S1] Client request contains "&lt;GotoHomePosition>" tag after the "&lt;Body>" tag  AND
    [S2] "&lt;GotoHomePosition>" includes tag: "&lt;ProfileToken>" with non-empty string value of specific token AND
[S3] Device response contains "HTTP/* 200 OK" AND
[S4] Device response contains "&lt;GotoHomePositionResponse>" tag.</literallayout>
            <literallayout class="normal"><emphasis role="bold">FAIL -</emphasis>
The Client failed PASS criteria.</literallayout>
            <para><emphasis role="bold">Validated Feature List:
                </emphasis>PTZPresets_GotoHomePosition</para>
        </section>
    </section>
        
    <section>
        <title>PTZ - Auxiliary Command Test Cases</title>
        <section>
            <title>Expected Scenarios Under Test:</title>
            <para>
                <orderedlist>
                    <listitem>
                        <para>Client connects to Device to manage the auxiliary commands of a PTZ
                            Node.</para>
                    </listitem>
                    <listitem>
                        <para>Client is considered as supporting PTZ - Auxiliary Command if the
                            following conditions are met:<itemizedlist>
                                <listitem>
                                    <para>Client is able to read PTZ capabilities from PTZ Node
                                        using EITHER GetNodes OR GetNode operations AND</para>
                                </listitem>
                                <listitem>
                                    <para>Client is able to call an auxiliary operation on Device
                                        using the SendAuxiliaryCommand operation.</para>
                                </listitem>
                            </itemizedlist></para>
                    </listitem>
                    <listitem>
                        <para>Client is considered as NOT supporting PTZ - Auxiliary Command if ANY
                            of the following is TRUE:<itemizedlist>
                                <listitem>
                                    <para>BOTH (No Valid Device Response to GetNodes request AND No
                                        Valid Device Response to GetNode request) OR</para>
                                </listitem>
                                <listitem>
                                    <para>No Valid Device Response to SendAuxiliaryCommand
                                        request.</para>
                                </listitem>
                            </itemizedlist></para>
                    </listitem>
                </orderedlist>
            </para>
        </section>
        <section>
            <title><emphasis role="italic">PTZ SEND AUXILIARY COMMAND </emphasis></title>
            <para><emphasis role="bold">Test Label:</emphasis> PTZ Auxiliary Command -
                SendAuxiliaryCommand </para>
            <para><emphasis role="bold">Test Case ID:</emphasis> PTZAUXILIARYCOMMAND-1</para>
            <para><emphasis role="bold">Profile S Requirement:</emphasis> Conditional</para>
            <para><emphasis role="bold">Feature Under Test:</emphasis> PTZ Auxiliary Command</para>
            <para><emphasis role="bold">Test Purpose:</emphasis> To verify that Client is able to
                call an auxiliary operation on Device using the SendAuxiliaryCommand
                operation.</para>
            <para><emphasis role="bold">Pre-Requisite:</emphasis><itemizedlist>
                <listitem>
                    <para>The Network Trace Capture files contains at least one conversation between
                            Client and Device with SendAuxiliaryCommand operation present.</para>
                </listitem>
            </itemizedlist></para>
            <para><emphasis role="bold">Test Procedure (expected to be reflected in network trace
                file):</emphasis><orderedlist>
                    <listitem>
                        <para>Client invokes SendAuxiliaryCommand request message to call an
                            auxiliary operation on Device.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and
                            SendAuxiliaryCommandResponse message.</para>
                    </listitem>
                </orderedlist></para>
            <para><emphasis role="bold">Test Result:</emphasis></para>
            <literallayout class="normal"><emphasis role="bold">PASS -</emphasis>
Client SendAuxiliaryCommand request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client SendAuxiliaryCommand request message has a proper hierarchy (refer to ptz.wsdl) AND
[S1] Client request contains "&lt;SendAuxiliaryCommand>" tag after the "&lt;Body>" tag  AND
    [S2] "&lt;SendAuxiliaryCommand>" includes tag: "&lt;ProfileToken>" with non-empty string value of specific token AND
    [S3] "&lt;SendAuxiliaryCommand>" includes tag: "&lt;AuxiliaryData>" with non-empty string value AND
[S4] Device response contains "HTTP/* 200 OK" AND
[S5] Device response contains "&lt;SendAuxiliaryCommandResponse>" tag.</literallayout>
            <literallayout class="normal"><emphasis role="bold">FAIL -</emphasis>
The Client failed PASS criteria.</literallayout>
            <para><emphasis role="bold">Validated Feature List:
                </emphasis>PTZAuxiliaryCommand_SendAuxiliaryCommand</para>
        </section>
    </section>
        
    <section>
        <title>Audio Streaming Test Cases</title>
        <section>
            <title>Expected Scenarios Under Test:</title>
            <para>
                <orderedlist>
                    <listitem>
                        <para>Client connects to Device to configure a media profile and initiate
                            Audio Streaming with G.711 encoding type.</para>
                    </listitem>
                    <listitem>
                        <para>Client is considered as supporting Audio Streaming if the following
                            conditions are met:<itemizedlist>
                                <listitem>
                                    <para>Client is able to configure a media profile for audio
                                        streaming using the GetCompatibleAudioSourceConfigurations,
                                        AddAudioSourceConfiguration,
                                        GetCompatibleAudioEncoderConfigurations and
                                        AddAudioEncoderConfiguration operations AND</para>
                                </listitem>
                                <listitem>
                                    <para>Client is able to initiate and retrieve audio stream with
                                        G.711 encoding type AND</para>
                                </listitem>
                                <listitem>
                                    <para>When Device and Client support G.726 encoding type for
                                        Audio Streaming:<itemizedlist>
                                            <listitem>
                                                <para>Client is able to initiate and retrieve audio
                                                  stream with G.726 encoding type AND</para>
                                            </listitem>
                                        </itemizedlist></para>
                                </listitem>
                                <listitem>
                                    <para>When Device and Client support AAC encoding type for Audio Streaming:<itemizedlist>
                                            <listitem>
                                                <para>Client is able to initiate and retrieve audio
                                                  stream with AAC encoding type.</para>
                                            </listitem>
                                        </itemizedlist></para>
                                </listitem>
                            </itemizedlist></para>
                    </listitem>
                    <listitem>
                        <para>Client is considered as NOT supporting Audio Streaming if ANY of the
                            following is TRUE:<itemizedlist>
                                <listitem>
                                    <para>No Valid Device Response to
                                        GetCompatibleAudioSourceConfigurations request OR</para>
                                </listitem>
                                <listitem>
                                    <para>No Valid Device Response to AddAudioSourceConfiguration
                                        request OR</para>
                                </listitem>
                                <listitem>
                                    <para>No Valid Device Response to
                                        GetCompatibleAudioEncoderConfigurations request OR</para>
                                </listitem>
                                <listitem>
                                    <para>No Valid Device Response to AddAudioEncoderConfiguration
                                        request OR</para>
                                </listitem>
                                <listitem>
                                    <para>G.711 Audio Streaming attempts detected have failed
                                        OR</para>
                                </listitem>
                                <listitem>
                                    <para>When Device and Client support G.726 encoding type for
                                        Audio Streaming:<itemizedlist>
                                            <listitem>
                                                <para>Client is unable to initiate and retrieve
                                                  audio stream with G.726 encoding type OR</para>
                                            </listitem>
                                        </itemizedlist></para>
                                </listitem>
                                <listitem>
                                    <para>When Device and Client support AAC encoding type for Audio Streaming:<itemizedlist>
                                            <listitem>
                                                <para>Client is unable to initiate and retrieve
                                                  audio stream with AAC encoding type.</para>
                                            </listitem>
                                        </itemizedlist></para>
                                </listitem>
                            </itemizedlist></para>
                    </listitem>
                </orderedlist>
            </para>
        </section>
        <section>
            <title><emphasis role="italic">CONFIGURE MEDIA PROFILE FOR AUDIO
                STREAMING</emphasis></title>
            <para><emphasis role="bold">Test Label:</emphasis> Audio Streaming - Configure Media
                Profile </para>
            <para><emphasis role="bold">Test Case ID:</emphasis> AUDIOSTREAMING-1</para>
            <para><emphasis role="bold">Profile S Requirement:</emphasis> Conditional</para>
            <para><emphasis role="bold">Feature Under Test:</emphasis> Audio Streaming</para>
            <para><emphasis role="bold">Test Purpose:</emphasis> To verify that Client is able to to
                configure a media profile for audio streaming using the
                GetCompatibleAudioSourceConfigurations, AddAudioSourceConfiguration,
                GetCompatibleAudioEncoderConfigurations and AddAudioEncoderConfiguration
                operations.</para>
            <para><emphasis role="bold">Pre-Requisite:</emphasis><itemizedlist>
                <listitem>
                    <para>The Network Trace Capture files contains at least one conversation between
                            Client and Device with GetCompatibleAudioSourceConfigurations,
                            AddAudioSourceConfiguration, GetCompatibleAudioEncoderConfigurations and
                            AddAudioEncoderConfiguration operations present.</para>
                </listitem>
            </itemizedlist></para>
            <para><emphasis role="bold">Test Procedure (expected to be reflected in network trace
                file):</emphasis><orderedlist>
                    <listitem>
                        <para>Client invokes GetCompatibleAudioSourceConfigurations request message
                            to retrieve all audio source configurations of Device that are
                            compatible with a certain media profile.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and
                            GetCompatibleAudioSourceConfigurationsResponse message.</para>
                    </listitem>
                    <listitem>
                        <para>Client invokes AddAudioSourceConfiguration request message to add
                            audio source configuration to an existing media profile.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and
                            AddAudioSourceConfigurationResponse message.</para>
                    </listitem>
                    <listitem>
                        <para>Client invokes GetCompatibleAudioEncoderConfigurations request message
                            to retrieve all audio encoder configurations of the device that are
                            compatible with a certain media profile.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and
                            GetCompatibleAudioEncoderConfigurationsResponse message.</para>
                    </listitem>
                    <listitem>
                        <para>Client invokes AddAudioEncoderConfiguration request message to add
                            audio encoder configuration to an existing media profile.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and
                            AddAudioEncoderConfigurationResponse message.</para>
                    </listitem>
                </orderedlist></para>
            <para><emphasis role="bold">Test Result:</emphasis></para>
            <literallayout class="normal"><emphasis role="bold">PASS -</emphasis>
Client GetCompatibleAudioSourceConfigurations request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client GetCompatibleAudioSourceConfigurations request message has a proper hierarchy (refer to media.wsdl) AND
[S1] Client request contains "&lt;GetCompatibleAudioSourceConfigurations>" tag after the "&lt;Body>" tag  AND
    [S2] "&lt;GetCompatibleAudioSourceConfigurations>" includes tag: "&lt;ProfileToken>" with non-empty string value 
    of specific token AND
[S3] Device response contains "HTTP/* 200 OK" AND
[S4] Device response contains "&lt;GetCompatibleAudioSourceConfigurationsResponse>" tag
AND
Client AddAudioSourceConfiguration request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client AddAudioSourceConfiguration request message has a proper hierarchy (refer to media.wsdl) AND
[S5] Client request contains "&lt;AddAudioSourceConfiguration>" tag after the "&lt;Body>" tag  AND
    [S6] "&lt;AddAudioSourceConfiguration>" includes tag: "&lt;ProfileToken>" with non-empty string value 
    of specific token AND
    [S7] "&lt;AddAudioSourceConfiguration>" includes tag: "&lt;ConfigurationToken>" with non-empty string value 
    of specific token AND
[S8] Device response contains "HTTP/* 200 OK" AND
[S9] Device response contains "&lt;AddAudioSourceConfigurationResponse>" tag
AND
Client GetCompatibleAudioEncoderConfigurations request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client GetCompatibleAudioEncoderConfigurations request message has a proper hierarchy (refer to media.wsdl) AND
[S10] Client request contains "&lt;GetCompatibleAudioEncoderConfigurations>" tag after the "&lt;Body>" tag  AND
    [S12] "&lt;GetCompatibleAudioEncoderConfigurations>" includes tag: "&lt;ProfileToken>" with non-empty string value 
    of specific token AND
[S13] Device response contains "HTTP/* 200 OK" AND
[S14] Device response contains "&lt;GetCompatibleAudioEncoderConfigurationsResponse>" tag
AND
Client AddAudioEncoderConfiguration request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client AddAudioEncoderConfiguration request message has a proper hierarchy (refer to media.wsdl) AND
[S15] Client request contains "&lt;AddAudioEncoderConfiguration>" tag after the "&lt;Body>" tag  AND
    [S16] "&lt;AddAudioEncoderConfiguration>" includes tag: "&lt;ProfileToken>" with non-empty string value 
    of specific token AND
    [S17] "&lt;AddAudioEncoderConfiguration>" includes tag: "&lt;ConfigurationToken>" with non-empty string value 
    of specific token AND
[S18] Device response contains "HTTP/* 200 OK" AND
[S19] Device response contains "&lt;AddAudioEncoderConfigurationResponse>" tag</literallayout>
            <literallayout class="normal"><emphasis role="bold">FAIL -</emphasis>
The Client failed PASS criteria.</literallayout>
            <para><emphasis role="bold">Validated Feature List:
                </emphasis>AudioStreaming_ConfigureMediaProfile</para>
        </section>
        <section>
            <title><emphasis role="italic">G.711 AUDIO STREAMING</emphasis></title>
            <para><emphasis role="bold">Test Label:</emphasis> Audio Streaming - G.711</para>
            <para><emphasis role="bold">Test Case ID:</emphasis> AUDIOSTREAMING-2</para>
            <para><emphasis role="bold">Profile S Requirement:</emphasis> Conditional</para>
            <para><emphasis role="bold">Feature Under Test:</emphasis> Audio Streaming</para>
            <para><emphasis role="bold">Test Purpose:</emphasis> To verify that the Client is able
                to initiate and retrieve audio stream with G.711 encoding type.</para>
            <para><emphasis role="bold">Pre-Requisite:</emphasis><itemizedlist>
                <listitem>
                    <para>The Network Trace Capture files contains at least one conversation between
                            Client and Device with Audio Streaming of G.711 encoding type.</para>
                </listitem>
            </itemizedlist></para>
            <para><emphasis role="bold">Test Procedure (expected to be reflected in network trace
                file):</emphasis><orderedlist>
                    <listitem>
                        <para>Client invokes GetProfiles request message to retrieve complete
                            profiles list from Device.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and GetProfilesResponse
                            message.</para>
                    </listitem>
                    <listitem>
                        <para>Client invokes GetStreamUri request message.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and GetStreamUriResponse
                            message.</para>
                    </listitem>
                    <listitem>
                        <para>Client invokes RTSP DESCRIBE request to retrieve media stream
                            description.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code RTSP 200 OK and SDP information with Media
                            Type: "audio" and MIME Type: "PCMU".</para>
                    </listitem>
                    <listitem>
                        <para>Client invokes RTSP SETUP request with transport parameter element to
                            to set media session parameters.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code RTSP 200 OK.</para>
                    </listitem>
                    <listitem>
                        <para>Client invokes RTSP PLAY request to start media stream.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code RTSP 200 OK.</para>
                    </listitem>
                </orderedlist></para>
            <para><emphasis role="bold">Test Result:</emphasis></para>
            <para><emphasis role="bold">NOTE:</emphasis> If Device RTSP DESCRIBE response message
                does not contain Media Type: "audio" OR MIME Type: "PCMU" inside SDP information
                then Test shall be deemed as "NOT DETECTED".</para>
            <literallayout class="normal"><emphasis role="bold">PASS -</emphasis>
Client GetProfiles request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client GetProfiles request message has a proper hierarchy (refer to media.wsdl) AND
[S1] Client request contains "&lt;GetProfiles>" tag after the "&lt;Body>" tag  AND
[S2] Device response contains "HTTP/* 200 OK" AND
[S3] Device response contains "&lt;GetProfilesResponse>" tag
AND
Client GetStreamUri request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client GetStreamUri request message has a proper hierarchy (refer to media.wsdl) AND
[S4] Client request contains "&lt;GetStreamUri>" tag after the "&lt;Body>" tag  AND
    [S5] "&lt;GetStreamUri>" includes tag: "&lt;ProfileToken>" with non-empty string value AND
[S6] Device response contains "HTTP/* 200 OK" AND
[S7] Device response contains "&lt;GetStreamUriResponse>" tag AND
    [S8] "&lt;GetStreamUriResponse>" includes tag: "&lt;MediaUri>" AND
    [S9] "&lt;MediaUri>" includes tag: "&lt;Uri>" with valid URI address
AND
[S10] Client request introduces RTSP DESCRIBE command AND
Client RTSP DESCRIBE request command has a proper hierarchy (refer to RFC2326 Specification) AND
    [S11] RTSP DESCRIBE includes: URI address obtained from GetStreamUriResponse AND
    [S12] RTSP DESCRIBE includes: "RTSP/*" version identifier AND
    [S13] RTSP DESCRIBE includes: "CSeq" identifier AND
[S14] Device response contains "RTSP/* 200 OK" AND
[S15] Device response SDP information contains Media Type: "audio" and MIME Type: "PCMU"
AND
[S16] Client request introduces RTSP SETUP command AND
Client RTSP SETUP request command has a proper hierarchy (refer to RFC2326 Specification) AND
    [S17] RTSP SETUP includes: URI address AND
    [S18] RTSP SETUP includes: "RTSP/*" version identifier AND
    [S19] RTSP SETUP includes: "CSeq" identifier AND
    [S20] RTSP SETUP includes: "Transport" parameter AND
[S21] Device response contains "RTSP/* 200 OK"
AND
[S22] Client request introduces RTSP PLAY command AND
Client RTSP PLAY request command has a proper hierarchy (refer to RFC2326 Specification) AND
    [S23] RTSP PLAY includes: the same URI address as in RTSP DESCRIBE request command AND
    [S24] RTSP PLAY includes: "RTSP/*" version identifier AND
    [S25] RTSP PLAY includes: "CSeq" identifier AND
    [S26] RTSP PLAY includes: "Session" parameter AND
[S27] Device response contains "RTSP/* 200 OK".</literallayout>
            <literallayout class="normal"><emphasis role="bold">FAIL -</emphasis>
The Client failed PASS criteria.</literallayout>
            <para><emphasis role="bold">Validated Feature List:
                </emphasis>AudioStreaming_G711</para>
        </section>
        <section>
            <title><emphasis role="italic">G.726 AUDIO STREAMING</emphasis></title>
            <para><emphasis role="bold">Test Label:</emphasis> Audio Streaming - G.726</para>
            <para><emphasis role="bold">Test Case ID:</emphasis> AUDIOSTREAMING-3</para>
            <para><emphasis role="bold">Profile S Requirement:</emphasis> Conditional</para>
            <para><emphasis role="bold">Feature Under Test:</emphasis> Audio Streaming</para>
            <para><emphasis role="bold">Test Purpose:</emphasis> To verify that the Client is able
                to initiate and retrieve audio stream with G.726 encoding type.</para>
            <para><emphasis role="bold">Pre-Requisite:</emphasis><itemizedlist>
                    <listitem>
                        <para>The Network Trace Capture files contains at least one conversation
                            between Client and Device with Audio Streaming of G.726 encoding
                            type.</para>
                    </listitem>
                </itemizedlist></para>
            <para><emphasis role="bold">Test Procedure (expected to be reflected in network trace
                    file):</emphasis><orderedlist>
                    <listitem>
                        <para>Client invokes GetProfiles request message to retrieve complete
                            profiles list from Device.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and GetProfilesResponse
                            message.</para>
                    </listitem>
                    <listitem>
                        <para>Client invokes GetStreamUri request message.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and GetStreamUriResponse
                            message.</para>
                    </listitem>
                    <listitem>
                        <para>Client invokes RTSP DESCRIBE request to retrieve media stream
                            description.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code RTSP 200 OK and SDP information with Media
                            Type: "audio" and MIME Type: "G726-*".</para>
                    </listitem>
                    <listitem>
                        <para>Client invokes RTSP SETUP request with transport parameter element to
                            to set media session parameters.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code RTSP 200 OK.</para>
                    </listitem>
                    <listitem>
                        <para>Client invokes RTSP PLAY request to start media stream.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code RTSP 200 OK.</para>
                    </listitem>
                </orderedlist></para>
            <para><emphasis role="bold">Test Result:</emphasis></para>
            <para><emphasis role="bold">NOTE:</emphasis> If Device RTSP DESCRIBE response message
                does not contain Media Type: "audio" OR MIME Type: "G726-*" inside SDP information
                then Test shall be deemed as "NOT DETECTED".</para>
            <literallayout class="normal"><emphasis role="bold">PASS -</emphasis>
Client GetProfiles request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client GetProfiles request message has a proper hierarchy (refer to media.wsdl) AND
[S1] Client request contains "&lt;GetProfiles>" tag after the "&lt;Body>" tag  AND
[S2] Device response contains "HTTP/* 200 OK" AND
[S3] Device response contains "&lt;GetProfilesResponse>" tag
AND
Client GetStreamUri request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client GetStreamUri request message has a proper hierarchy (refer to media.wsdl) AND
[S4] Client request contains "&lt;GetStreamUri>" tag after the "&lt;Body>" tag  AND
    [S5] "&lt;GetStreamUri>" includes tag: "&lt;ProfileToken>" with non-empty string value AND
[S6] Device response contains "HTTP/* 200 OK" AND
[S7] Device response contains "&lt;GetStreamUriResponse>" tag AND
    [S8] "&lt;GetStreamUriResponse>" includes tag: "&lt;MediaUri>" AND
    [S9] "&lt;MediaUri>" includes tag: "&lt;Uri>" with valid URI address
AND
[S10] Client request introduces RTSP DESCRIBE command AND
Client RTSP DESCRIBE request command has a proper hierarchy (refer to RFC2326 Specification) AND
    [S11] RTSP DESCRIBE includes: URI address obtained from GetStreamUriResponse AND
    [S12] RTSP DESCRIBE includes: "RTSP/*" version identifier AND
    [S13] RTSP DESCRIBE includes: "CSeq" identifier AND
[S14] Device response contains "RTSP/* 200 OK" AND
[S15] Device response SDP information contains Media Type: "audio" and MIME Type: "G726-*"
AND
[S16] Client request introduces RTSP SETUP command AND
Client RTSP SETUP request command has a proper hierarchy (refer to RFC2326 Specification) AND
    [S17] RTSP SETUP includes: URI address AND
    [S18] RTSP SETUP includes: "RTSP/*" version identifier AND
    [S19] RTSP SETUP includes: "CSeq" identifier AND
    [S20] RTSP SETUP includes: "Transport" parameter AND
[S21] Device response contains "RTSP/* 200 OK"
AND
[S22] Client request introduces RTSP PLAY command AND
Client RTSP PLAY request command has a proper hierarchy (refer to RFC2326 Specification) AND
    [S23] RTSP PLAY includes: the same URI address as in RTSP DESCRIBE request command AND
    [S24] RTSP PLAY includes: "RTSP/*" version identifier AND
    [S25] RTSP PLAY includes: "CSeq" identifier AND
    [S26] RTSP PLAY includes: "Session" parameter AND
[S27] Device response contains "RTSP/* 200 OK".</literallayout>
            <literallayout class="normal"><emphasis role="bold">FAIL -</emphasis>
The Client failed PASS criteria.</literallayout>
            <para><emphasis role="bold">Validated Feature List:
                </emphasis>AudioStreaming_G726</para>
        </section>
        <section>
            <title><emphasis role="italic">AAC AUDIO STREAMING</emphasis></title>
            <para><emphasis role="bold">Test Label:</emphasis> Audio Streaming - AAC</para>
            <para><emphasis role="bold">Test Case ID:</emphasis> AUDIOSTREAMING-4</para>
            <para><emphasis role="bold">Profile S Requirement:</emphasis> Conditional</para>
            <para><emphasis role="bold">Feature Under Test:</emphasis> Audio Streaming</para>
            <para><emphasis role="bold">Test Purpose:</emphasis> To verify that the Client is able
                to initiate and retrieve audio stream with AAC encoding type.</para>
            <para><emphasis role="bold">Pre-Requisite:</emphasis><itemizedlist>
                    <listitem>
                        <para>The Network Trace Capture files contains at least one conversation
                            between Client and Device with Audio Streaming of AAC encoding
                            type.</para>
                    </listitem>
                </itemizedlist></para>
            <para><emphasis role="bold">Test Procedure (expected to be reflected in network trace
                    file):</emphasis><orderedlist>
                    <listitem>
                        <para>Client invokes GetProfiles request message to retrieve complete
                            profiles list from Device.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and GetProfilesResponse
                            message.</para>
                    </listitem>
                    <listitem>
                        <para>Client invokes GetStreamUri request message.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and GetStreamUriResponse
                            message.</para>
                    </listitem>
                    <listitem>
                        <para>Client invokes RTSP DESCRIBE request to retrieve media stream
                            description.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code RTSP 200 OK and SDP information with Media
                            Type: "audio" and MIME Type: "MPEG4-GENERIC".</para>
                    </listitem>
                    <listitem>
                        <para>Client invokes RTSP SETUP request with transport parameter element to
                            to set media session parameters.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code RTSP 200 OK.</para>
                    </listitem>
                    <listitem>
                        <para>Client invokes RTSP PLAY request to start media stream.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code RTSP 200 OK.</para>
                    </listitem>
                </orderedlist></para>
            <para><emphasis role="bold">Test Result:</emphasis></para>
            <para><emphasis role="bold">NOTE:</emphasis> If Device RTSP DESCRIBE response message
                does not contain Media Type: "audio" OR MIME Type: "MPEG4-GENERIC" inside SDP
                information then Test shall be deemed as "NOT DETECTED".</para>
            <literallayout class="normal"><emphasis role="bold">PASS -</emphasis>
Client GetProfiles request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client GetProfiles request message has a proper hierarchy (refer to media.wsdl) AND
[S1] Client request contains "&lt;GetProfiles>" tag after the "&lt;Body>" tag  AND
[S2] Device response contains "HTTP/* 200 OK" AND
[S3] Device response contains "&lt;GetProfilesResponse>" tag
AND
Client GetStreamUri request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client GetStreamUri request message has a proper hierarchy (refer to media.wsdl) AND
[S4] Client request contains "&lt;GetStreamUri>" tag after the "&lt;Body>" tag  AND
    [S5] "&lt;GetStreamUri>" includes tag: "&lt;ProfileToken>" with non-empty string value AND
[S6] Device response contains "HTTP/* 200 OK" AND
[S7] Device response contains "&lt;GetStreamUriResponse>" tag AND
    [S8] "&lt;GetStreamUriResponse>" includes tag: "&lt;MediaUri>" AND
    [S9] "&lt;MediaUri>" includes tag: "&lt;Uri>" with valid URI address
AND
[S10] Client request introduces RTSP DESCRIBE command AND
Client RTSP DESCRIBE request command has a proper hierarchy (refer to RFC2326 Specification) AND
    [S11] RTSP DESCRIBE includes: URI address obtained from GetStreamUriResponse AND
    [S12] RTSP DESCRIBE includes: "RTSP/*" version identifier AND
    [S13] RTSP DESCRIBE includes: "CSeq" identifier AND
[S14] Device response contains "RTSP/* 200 OK" AND
[S15] Device response SDP information contains Media Type: "audio" and MIME Type: "MPEG4-GENERIC"
AND
[S16] Client request introduces RTSP SETUP command AND
Client RTSP SETUP request command has a proper hierarchy (refer to RFC2326 Specification) AND
    [S17] RTSP SETUP includes: URI address AND
    [S18] RTSP SETUP includes: "RTSP/*" version identifier AND
    [S19] RTSP SETUP includes: "CSeq" identifier AND
    [S20] RTSP SETUP includes: "Transport" parameter AND
[S21] Device response contains "RTSP/* 200 OK"
AND
[S22] Client request introduces RTSP PLAY command AND
Client RTSP PLAY request command has a proper hierarchy (refer to RFC2326 Specification) AND
    [S23] RTSP PLAY includes: the same URI address as in RTSP DESCRIBE request command AND
    [S24] RTSP PLAY includes: "RTSP/*" version identifier AND
    [S25] RTSP PLAY includes: "CSeq" identifier AND
    [S26] RTSP PLAY includes: "Session" parameter AND
[S27] Device response contains "RTSP/* 200 OK".</literallayout>
            <literallayout class="normal"><emphasis role="bold">FAIL -</emphasis>
The Client failed PASS criteria.</literallayout>
            <para><emphasis role="bold">Validated Feature List: </emphasis>AudioStreaming_AAC</para>
        </section>
    </section>
    
    <section>
        <title>Metadata Configurations Test Cases</title>
        <section>
            <title>Expected Scenarios Under Test:</title>
            <para>
                <orderedlist>
                    <listitem>
                        <para>Client connects to Device to list and modify Metadata
                            Configurations.</para>
                    </listitem>
                    <listitem>
                        <para>Client is considered as supporting Metadata Configurations if the
                            following conditions are met:<itemizedlist>
                                <listitem>
                                    <para>Client is able to list all existing metadata
                                        configurations by using EITHER GetMetadataConfigurations
                                        OR GetMetadataConfiguration operations AND</para>
                                </listitem>
                                <listitem>
                                    <para>Client is able to modify an existing metadata
                                        configuration by using the following sequence of commands:<itemizedlist>
                                            <!--<listitem>
                                                <para>Retrieve metadata configuration for a
                                                  specific configuration token by using
                                                  GetMetadataConfiguration operation AND</para>
                                            </listitem>-->
                                            <listitem>
                                                <para>Retrieve a metadata parameter options for a
                                                  specific profile and configuration tokens by using
                                                  GetMetadataConfigurationOptions operation
                                                  AND</para>
                                            </listitem>
                                            <listitem>
                                                <para>Modify a video encoder configuration by using
                                                  SetMetadataConfiguration operation.</para>
                                            </listitem>
                                        </itemizedlist></para>
                                </listitem>
                            </itemizedlist></para>
                    </listitem>
                    <listitem>
                        <para>Client is considered as NOT supporting Metadata Configurations if
                            ANY of the following is TRUE:<itemizedlist>
                                <listitem>
                                    <para>No Valid Device Response to GetMetadataConfigurations
                                        request OR</para>
                                </listitem>
                                <listitem>
                                    <para>No Valid Device Response to GetMetadataConfiguration
                                        request OR</para>
                                </listitem>
                                <listitem>
                                    <para>No Valid Device Response to
                                        GetMetadataConfigurationOptions request OR</para>
                                </listitem>
                                <listitem>
                                    <para>No Valid Device Response to SetMetadataConfiguration
                                        request.</para>
                                </listitem>
                            </itemizedlist></para>
                    </listitem>
                </orderedlist>
            </para>
        </section>
        <section>
            <title><emphasis role="italic">LIST METADATA CONFIGURATIONS</emphasis></title>
            <para><emphasis role="bold">Test Label:</emphasis> Metadata Configurations - list
                all existing metadata configurations</para>
            <para><emphasis role="bold">Test Case ID:</emphasis> METADATACONFIGURATIONS-1</para>
            <para><emphasis role="bold">Profile S Requirement:</emphasis> Conditional</para>
            <para><emphasis role="bold">Feature Under Test:</emphasis> Metadata
                Configurations</para>
            <para><emphasis role="bold">Test Purpose:</emphasis> To verify that list of all existing
                metadata configurations from Device is received by Client using the
                GetMetadataConfigurations operation.</para>
            <para><emphasis role="bold">Pre-Requisite:</emphasis><itemizedlist>
                    <listitem>
                        <para>The Network Trace Capture files contains at least one Conversation
                            between Client and Device with GetMetadataConfigurations operation
                            present.</para>
                    </listitem>
                </itemizedlist></para>
            <para><emphasis role="bold">Test Procedure (expected to be reflected in network trace
                    file):</emphasis><orderedlist>
                    <listitem>
                        <para>Client invokes GetMetadataConfigurations request message to
                            retrieve complete list of available metadata configurations from
                            Device.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and
                            GetMetadataConfigurationsResponse message.</para>
                    </listitem>
                </orderedlist></para>
            <para><emphasis role="bold">Test Result:</emphasis></para>
            <literallayout class="normal"><emphasis role="bold">PASS -</emphasis>
Client GetMetadataConfigurations request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client GetMetadataConfigurations request message has a proper hierarchy (refer to media.wsdl) AND
[S1] Client request contains "&lt;GetMetadataConfigurations>" tag after the "&lt;Body>" tag  AND
[S2] Device response contains "HTTP/* 200 OK" AND
[S3] Device response contains "&lt;GetMetadataConfigurationsResponse>" tag.</literallayout>
            <literallayout class="normal"><emphasis role="bold">FAIL -</emphasis>
The Client failed PASS criteria.</literallayout>
            <para><emphasis role="bold">Validated Feature List:
                </emphasis>MetadataConfigurations_GetMetadataConfigurations</para>
        </section>
        <section>
            <title><emphasis role="italic">GET SPECIFIC METADATA
                CONFIGURATION</emphasis></title>
            <para><emphasis role="bold">Test Label:</emphasis> Metadata Configurations - gets a
                specific metadata configuration</para>
            <para><emphasis role="bold">Test Case ID:</emphasis> METADATACONFIGURATIONS-2</para>
            <para><emphasis role="bold">Profile S Requirement:</emphasis> Conditional</para>
            <para><emphasis role="bold">Feature Under Test:</emphasis> Metadata
                Configurations</para>
            <para><emphasis role="bold">Test Purpose:</emphasis> To verify that Client is able to
                retrieve a specific encoder configuration from Device by using the
                GetMetadataConfiguration operation.</para>
            <para><emphasis role="bold">Pre-Requisite:</emphasis><itemizedlist>
                    <listitem>
                        <para>The Network Trace Capture files contains at least one Conversation
                            between Client and Device with GetMetadataConfiguration operation
                            present.</para>
                    </listitem>
                </itemizedlist></para>
            <para><emphasis role="bold">Test Procedure (expected to be reflected in network trace
                    file):</emphasis><orderedlist>
                    <listitem>
                        <para>Client invokes GetMetadataConfiguration request message with
                            specified ConfigurationToken.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and
                            GetMetadataConfigurationResponse.</para>
                    </listitem>
                </orderedlist></para>
            <para><emphasis role="bold">Test Result:</emphasis></para>
            <literallayout class="normal"><emphasis role="bold">PASS -</emphasis>
Client GetMetadataConfiguration request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client GetMetadataConfiguration request message has a proper hierarchy (refer to media.wsdl) AND
[S1] Client request contains "&lt;GetMetadataConfiguration>" tag after the "&lt;Body>" tag  AND
    [S2] "&lt;GetMetadataConfiguration>" includes tag: "&lt;ConfigurationToken>" with non-empty string value of parameter
AND
[S3] Device response contains "HTTP/* 200 OK" AND
[S4] Device response contains "&lt;GetMetadataConfigurationResponse>" tag.</literallayout>
            <literallayout class="normal"><emphasis role="bold">FAIL -</emphasis>
The Client failed PASS criteria.</literallayout>
            <para><emphasis role="bold">Validated Feature List:
                </emphasis>MetadataConfigurations_GetMetadataConfiguration</para>
        </section>
        <section>
            <title><emphasis role="italic">MODIFY METADATA CONFIGURATION</emphasis></title>
            <para><emphasis role="bold">Test Label:</emphasis> Metadata Configurations - modify
                metadata configuration.</para>
            <para><emphasis role="bold">Test Case ID:</emphasis> METADATACONFIGURATIONS-3</para>
            <para><emphasis role="bold">Profile S Requirement:</emphasis> Conditional</para>
            <para><emphasis role="bold">Feature Under Test:</emphasis> Metadata
                Configurations</para>
            <para><emphasis role="bold">Test Purpose:</emphasis> To verify that Client is able to
                modify metadata configuration on Device by using the
                GetMetadataConfiguration, GetMetadataConfigurationOptions and
                SetMetadataConfiguration operations.</para>
            <para><emphasis role="bold">Pre-Requisite:</emphasis><itemizedlist>
                    <listitem>
                        <para>The Network Trace Capture files contains at least one Conversation
                            between Client and Device with GetMetadataConfigurationOptions,
                            and SetMetadataConfiguration operations
                            present.</para>
                    </listitem>
                </itemizedlist></para>
            <para><emphasis role="bold">Test Procedure (expected to be reflected in network trace
                    file):</emphasis><orderedlist>
                    <listitem>
                        <para>Client invokes GetMetadataConfigurationOptions request message to
                            retrieve supported metadata configuration options from
                            Device.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and
                            GetMetadataConfigurationOptionsResponse message.</para>
                    </listitem>
                    <listitem>
                        <para>Client invokes SetMetadataConfiguration request message with
                            specified Token attribute to change metadata configuration settings
                            with any modifications of parameters which are corresponding to
                            available options from GetMetadataConfigurationOptionsResponse from
                            Step 2.</para>
                    </listitem>
                    <listitem>
                        <para>Device responses with code HTTP 200 OK and
                            SetMetadataConfigurationResponse message.</para>
                    </listitem>
                </orderedlist></para>
            <para><emphasis role="bold">Test Result:</emphasis></para>
            <literallayout class="normal"><emphasis role="bold">PASS -</emphasis>
Client GetMetadataConfigurationOptions request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client GetMetadataConfigurationOptions request message has a proper hierarchy (refer to media.wsdl) AND
[S1] Client request contains "&lt;GetMetadataConfigurationOptions>" tag after the "&lt;Body>" tag  AND
    [S2] (Client request does not contain "&lt;ConfigurationToken>" tag 
    OR
    "&lt;GetMetadataConfigurationOptions>" includes tag: "&lt;ConfigurationToken> with non-empty string value of specific 
    configuration token)
    AND
    [S3] (Client request does not contain "&lt;ProfileToken>" tag 
    OR
    "&lt;GetMetadataConfigurationOptions>" includes tag: "&lt;ProfileToken> with non-empty string value of specific 
    profile token)
AND
[S4] Device response contains "HTTP/* 200 OK" AND
[S5] Device response contains "&lt;GetMetadataConfigurationOptionsResponse>" tag
AND
Client SetMetadataConfiguration request message is a well-formed SOAP request (refer to onvif.xsd) AND
Client SetMetadataConfiguration request message has a proper hierarchy (refer to media.wsdl) AND
[S6] Client request contains "&lt;SetMetadataConfiguration>" tag after the "&lt;Body>" tag AND
    [S7] "&lt;SetMetadataConfiguration>" includes tag: "&lt;Configuration>"  
    AND
    [S8] "&lt;Configuration>" tag contains attribute: "token=" with non-empty string value of specific 
    configuration token
    AND
    [S9] "&lt;Configuration>" includes any combination of parameters in child tags    
AND
[S11] Device response contains "HTTP/* 200 OK" AND
[S12] Device response contains "&lt;SetMetadataConfigurationResponse>" tag
  </literallayout>
            <literallayout class="normal"><emphasis role="bold">FAIL -</emphasis>
The Client failed PASS criteria.</literallayout>
            <para><emphasis role="bold">Validated Feature List:
                </emphasis>MetadataConfigurations_ModifyMetadataConfiguration</para>
        </section>
    </section>
  
    <appendix id="changes">
        <title>Revision History</title>
        <para><emphasis role="bold">September 23, 2015 Version 16.01</emphasis><itemizedlist>
                <listitem>
                    <para>Added new Test Cases sections: Metadata Configurations.</para>
                </listitem>
            </itemizedlist></para>
        <para><emphasis role="bold">June 10, 2015 Version 15.06</emphasis><itemizedlist>
                <listitem>
                    <para>No major changes were made, just minor formatting fixes.</para>
                </listitem>
            </itemizedlist></para>
        <para><emphasis role="bold">May 20, 2015 Version 15.05</emphasis><itemizedlist>
                <listitem>
                    <para>No major changes were made, just minor grammatical corrections.</para>
                </listitem>
            </itemizedlist><emphasis role="bold">March 20, 2015 Version 15.03</emphasis><itemizedlist>
                <listitem>
                    <para>Added new Test Cases sections: PTZ - Listing, PTZ - Configuration, PTZ -
                        Continuous Positioning, PTZ - Absolute Positioning, PTZ - Relative
                        Positioning, PTZ - Presets, PTZ - Home Position, PTZ - Auxiliary Command,
                        Audio Streaming.</para>
                </listitem>
            </itemizedlist></para>
        <para><emphasis role="bold">February 19, 2015 Version 15.02</emphasis><itemizedlist>
                <listitem>
                    <para>Pass criteria in VIDEOSTREAMING-1, 2 and 3 test cases have been updated
                        (added check for Media Type: "video" in RTSP DESCRIBE response).</para>
                </listitem>
            </itemizedlist></para>
        <para><emphasis role="bold">December 11, 2014 Version 14.12</emphasis><itemizedlist>
                <listitem>
                    <para>Fixed typos and inconsistencies.</para>
                </listitem>
            </itemizedlist><emphasis role="bold">November 21, 2014 Version 14.11</emphasis><itemizedlist>
                <listitem>
                    <para>Fixed typos and inconsistencies.</para>
                </listitem>
                <listitem>
                    <para>Removed examples of expected Requests and Responses from all Test
                        Cases.</para>
                </listitem>
                <listitem>
                    <para>Removed unnecessary PASS criteria from all Test Cases.</para>
                </listitem>
                <listitem>
                    <para>VIDEOSTREAMING-1, 2, 3 and MULTICASTSTREAMING-1 test cases have been
                        updated.</para>
                </listitem>
                <listitem>
                    <para>"3. Terms and Definitions" section has been updated.</para>
                </listitem>
                <listitem>
                    <para>Introduced YY.MM method of version numbering</para>
                </listitem>
            </itemizedlist></para>
        <para><emphasis role="bold">October 29, 2014 Version 1.2</emphasis><itemizedlist>
                <listitem>
                    <para>Changes were made in "PASS" criteria of the "5.4. STREAMING OVER RTSP",
                        "6.2. MJPEG VIDEO STREAMING", "6.3. MPEG4 VIDEO STREAMING", "6.4. H264 VIDEO
                        STREAMING" and "7.2. MULTICAST STREAMING USING RTSP" Test Cases.</para>
                </listitem>
                <listitem>
                    <para>Test "5.4. STREAMING OVER RTSP" was divided into three different tests
                        (RTSP, UDP and HTTP).</para>
                </listitem>
                <listitem>
                    <para>New Test Case "8.3. GET SPECIFIC VIDEO ENCODER CONFIGURATION" has been
                        added.</para>
                </listitem>
                <listitem>
                    <para>Section "10.1. Expected Scenarios Under Test" has been updated.</para>
                </listitem>
                <listitem>
                    <para>New Test Case "10.3. GET SPECIFIC VIDEO SOURCE CONFIGURATION" has been
                        added.</para>
                </listitem>
                <listitem>
                    <para>"ISO/IEC Directives, Part 2" reference has been added to "2. Normative
                        references" section.</para>
                </listitem>
                <listitem>
                    <para>The new section "3.1 Conventions" has been added.</para>
                </listitem>
                <listitem>
                    <para>Specific Namespace prefixes have been removed from "PASS" criteria of all
                        Test Cases.</para>
                </listitem>
                <listitem>
                    <para>Fixed typos and inconsistencies.</para>
                </listitem>
            </itemizedlist></para>
        <para><emphasis role="bold">September 04, 2014 Version 1.1</emphasis><itemizedlist>
                <listitem>
                    <para>MEDIASTREAMING-1, MEDIASTREAMING-2 and MEDIASTREAMING-3 test cases have
                        been updated.</para>
                </listitem>
                <listitem>
                    <para>Video Streaming Test Cases have been added.</para>
                </listitem>
                <listitem>
                    <para>Multicast Streaming Test Cases have been added.</para>
                </listitem>
                <listitem>
                    <para>Test Cases for Video Encoder Configurations have been added.</para>
                </listitem>
                <listitem>
                    <para>Media Profile Configurations Test Cases have been added.</para>
                </listitem>
                <listitem>
                    <para>Video Source Configurations Test Cases have been added.</para>
                </listitem>
                <listitem>
                    <para>"Scope", "Security", "Capabilities" and "Event Handling" sections have
                        been updated.</para>
                </listitem>
            </itemizedlist></para>
        <para><emphasis role="bold">July 31, 2014 Version 1.0</emphasis><itemizedlist>
                <listitem>
                    <para>Initial version. The first release includes MEDIASTREAMING-1 GET PROFILES,
                        MEDIASTREAMING-2 GET STREAM URI and MEDIASTREAMING-3 STREAMING OVER RTSP
                        test cases.</para>
                </listitem>
            </itemizedlist></para>
    </appendix>
</article>
