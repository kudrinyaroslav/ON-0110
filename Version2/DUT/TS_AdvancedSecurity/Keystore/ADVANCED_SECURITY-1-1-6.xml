<?xml version="1.0" encoding="utf-8"?>
<TestSuit Name="Device Management" Version="0.1">
  <Parameters>
    <TimeOut>100000</TimeOut>
    <Name>Delete Key</Name>
    <Description>
      TODO:
      - empty 
      - no 
    </Description>
  </Parameters>
  <Test ID="TC.ADVANCED_SECURITY-1-1-6.01" ONVIFTestID="ADVANCED_SECURITY-1-1-6" Enabled="true">
    <TestName>Delete Key</TestName>
    <Name>Correct response</Name>
    <Description>
    </Description>
    <ExpectedResult>
      <TestSummary>
      </TestSummary>
    </ExpectedResult>
    <Step id="1">
      <Command>Device10.GetServices</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <IncludeCapability>False</IncludeCapability>
      </RequestParameters>
      <ResponseParameters special="1">
        <ArrayOfService xmlns:tds="http://www.onvif.org/ver10/device/wsdl" xmlns:tt="http://www.onvif.org/ver10/schema">
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/device/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/events/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/advancedsecurity/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
        </ArrayOfService>
      </ResponseParameters>
    </Step>
    <Step id="2">
      <Command>AdvancedSecurity10.GetAllKeys</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <ArrayOfKeyAttribute xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <KeyAttribute>
            <tas:KeyID>T123</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
            <!--<tas:any>any</tas:any>-->
          </KeyAttribute>
          <KeyAttribute>
            <tas:KeyID>T1</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
            <tas:any>any</tas:any>
          </KeyAttribute>
          <KeyAttribute>
            <tas:KeyID>keyID</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
            <!--<tas:any>any</tas:any>-->
          </KeyAttribute>
          
        </ArrayOfKeyAttribute>
      </ResponseParameters>
    </Step>
    <Step id="3">
      <Command>AdvancedSecurity10.GetServiceCapabilities</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <Capabilities xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <tas:KeystoreCapabilities MaximumNumberOfKeys="2" MaximumNumberOfCertificates="2" MaximumNumberOfCertificationPaths="2" RSAKeyPairGeneration="true" RSAKeyLengths="1 2" PKCS10ExternalCertificationWithRSA="true" SelfSignedCertificateCreationWithRSA="true" X509Versions="3 4 5">
            <tas:SignatureAlgorithms>
              <tas:algorithm>9</tas:algorithm>
              <!--Optional:-->
              <tas:parameters>AEIMQUYcgkosw048</tas:parameters>
              <!--Optional:-->
            </tas:SignatureAlgorithms>
          </tas:KeystoreCapabilities>
          <tas:TLSServerCapabilities TLSServerSupported="true" MaximumNumberOfTLSCertificationPaths="2" />
        </Capabilities>
      </ResponseParameters>
    </Step>
    <Step id="4">
      <Command>AdvancedSecurity10.CreateRSAKeyPair</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyLength>1</KeyLength>
      </RequestParameters>
      <ResponseParameters>
        <string>KeyID1</string>
      </ResponseParameters>
      <ResponseParametersAdditional>
        <EstimatedCreationTime>P0Y0M0DT0H02S</EstimatedCreationTime>
      </ResponseParametersAdditional>
    </Step>
    <Step id="5">
      <Command>AdvancedSecurity10.GetKeyStatus</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyID>KeyID1</KeyID>
      </RequestParameters>
      <ResponseParameters>
        <string>ok</string>
      </ResponseParameters>
    </Step>
    <Step id="2">
      <Command>AdvancedSecurity10.GetAllKeys</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <ArrayOfKeyAttribute xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <KeyAttribute>
            <tas:KeyID>T123</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
            <!--<tas:any>any</tas:any>-->
          </KeyAttribute>
          <KeyAttribute>
            <tas:KeyID>T1</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
            <tas:any>any</tas:any>
          </KeyAttribute>
          <KeyAttribute>
            <tas:KeyID>keyID</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
            <!--<tas:any>any</tas:any>-->
          </KeyAttribute>
          <KeyAttribute>
            <tas:KeyID>KeyID1</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
            <!--<tas:any>any</tas:any>-->
          </KeyAttribute>
        </ArrayOfKeyAttribute>
      </ResponseParameters>
    </Step>
    <Step id="7">
      <Command>AdvancedSecurity10.DeleteKey</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyID>KeyID1</KeyID>
      </RequestParameters>
      <ResponseParameters>
      </ResponseParameters>
    </Step>
    
  </Test>
  <Test ID="TC.ADVANCED_SECURITY-1-1-6.02" ONVIFTestID="ADVANCED_SECURITY-1-1-6" Enabled="true">
    <TestName>Delete Key</TestName>
    <Name>Empty key list</Name>
    <Description>
    </Description>
    <ExpectedResult>
      <TestSummary>
      </TestSummary>
    </ExpectedResult>
    <Step id="1">
      <Command>Device10.GetServices</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <IncludeCapability>False</IncludeCapability>
      </RequestParameters>
      <ResponseParameters special="1">
        <ArrayOfService xmlns:tds="http://www.onvif.org/ver10/device/wsdl" xmlns:tt="http://www.onvif.org/ver10/schema">
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/device/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/events/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/advancedsecurity/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
        </ArrayOfService>
      </ResponseParameters>
    </Step>
    <Step id="2">
      <Command>AdvancedSecurity10.GetAllKeys</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <ArrayOfKeyAttribute xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          
        </ArrayOfKeyAttribute>
      </ResponseParameters>
    </Step>
    <Step id="3">
      <Command>AdvancedSecurity10.GetServiceCapabilities</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <Capabilities xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <tas:KeystoreCapabilities MaximumNumberOfKeys="2" MaximumNumberOfCertificates="2" MaximumNumberOfCertificationPaths="2" RSAKeyPairGeneration="true" RSAKeyLengths="1 2" PKCS10ExternalCertificationWithRSA="true" SelfSignedCertificateCreationWithRSA="true" X509Versions="3 4 5">
            <tas:SignatureAlgorithms>
              <tas:algorithm>9</tas:algorithm>
              <!--Optional:-->
              <tas:parameters>AEIMQUYcgkosw048</tas:parameters>
              <!--Optional:-->
            </tas:SignatureAlgorithms>
          </tas:KeystoreCapabilities>
          <tas:TLSServerCapabilities TLSServerSupported="true" MaximumNumberOfTLSCertificationPaths="2" />
        </Capabilities>
      </ResponseParameters>
    </Step>
    <Step id="4">
      <Command>AdvancedSecurity10.CreateRSAKeyPair</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyLength>1</KeyLength>
      </RequestParameters>
      <ResponseParameters>
        <string>KeyID1</string>
      </ResponseParameters>
      <ResponseParametersAdditional>
        <EstimatedCreationTime>P0Y0M0DT0H02S</EstimatedCreationTime>
      </ResponseParametersAdditional>
    </Step>
    <Step id="5">
      <Command>AdvancedSecurity10.GetKeyStatus</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyID>KeyID1</KeyID>
      </RequestParameters>
      <ResponseParameters>
        <string>ok</string>
      </ResponseParameters>
    </Step>
    <Step id="6">
      <Command>AdvancedSecurity10.GetAllKeys</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <ArrayOfKeyAttribute xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          
          <KeyAttribute>
            <tas:KeyID>KeyID1</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
        </ArrayOfKeyAttribute>
      </ResponseParameters>
    </Step>
    <Step id="7">
      <Command>AdvancedSecurity10.DeleteKey</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyID>KeyID1</KeyID>
      </RequestParameters>
      <ResponseParameters>
      </ResponseParameters>
    </Step>
    <Step id="8">
      <Command>AdvancedSecurity10.GetAllKeys</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyLength>1</KeyLength>
      </RequestParameters>
      <ResponseParameters>
        <ArrayOfKeyAttribute xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          
        </ArrayOfKeyAttribute>
      </ResponseParameters>
    </Step>
  </Test>
<Test ID="TC.ADVANCED_SECURITY-1-1-6.03" ONVIFTestID="ADVANCED_SECURITY-1-1-6" Enabled="true">
    <TestName>Delete Key</TestName>
    <Name>Incorrect GetAllKeys strucrure: KeyID mandatory element is absent</Name>
    <Description>
    </Description>
    <ExpectedResult>
      <TestSummary>
      </TestSummary>
    </ExpectedResult>
    <Step id="1">
      <Command>Device10.GetServices</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <IncludeCapability>False</IncludeCapability>
      </RequestParameters>
      <ResponseParameters special="1">
        <ArrayOfService xmlns:tds="http://www.onvif.org/ver10/device/wsdl" xmlns:tt="http://www.onvif.org/ver10/schema">
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/device/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/events/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/advancedsecurity/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
        </ArrayOfService>
      </ResponseParameters>
    </Step>
    <Step id="2">
      <Command>AdvancedSecurity10.GetAllKeys</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <ArrayOfKeyAttribute xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <KeyAttribute>
            <!--<tas:KeyID>123</tas:KeyID>-->
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
        </ArrayOfKeyAttribute>
      </ResponseParameters>
    </Step>
    <Step id="3">
      <Command>AdvancedSecurity10.GetServiceCapabilities</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <Capabilities xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <tas:KeystoreCapabilities MaximumNumberOfKeys="2" MaximumNumberOfCertificates="2" MaximumNumberOfCertificationPaths="2" RSAKeyPairGeneration="true" RSAKeyLengths="1 2" PKCS10ExternalCertificationWithRSA="true" SelfSignedCertificateCreationWithRSA="true" X509Versions="3 4 5">
            <tas:SignatureAlgorithms>
              <tas:algorithm>9</tas:algorithm>
              <!--Optional:-->
              <tas:parameters>AEIMQUYcgkosw048</tas:parameters>
              <!--Optional:-->
            </tas:SignatureAlgorithms>
          </tas:KeystoreCapabilities>
          <tas:TLSServerCapabilities TLSServerSupported="true" MaximumNumberOfTLSCertificationPaths="2" />
        </Capabilities>
      </ResponseParameters>
    </Step>
    <Step id="4">
      <Command>AdvancedSecurity10.CreateRSAKeyPair</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyLength>1</KeyLength>
      </RequestParameters>
      <ResponseParameters>
        <string>KeyID1</string>
      </ResponseParameters>
      <ResponseParametersAdditional>
        <EstimatedCreationTime>P0Y0M0DT0H02S</EstimatedCreationTime>
      </ResponseParametersAdditional>
    </Step>
    <Step id="5">
      <Command>AdvancedSecurity10.GetKeyStatus</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyID>KeyID1</KeyID>
      </RequestParameters>
      <ResponseParameters>
        <string>ok</string>
      </ResponseParameters>
    </Step>
    <Step id="6">
      <Command>AdvancedSecurity10.GetAllKeys</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <ArrayOfKeyAttribute xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <KeyAttribute>
            <tas:KeyID>T123</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
          <KeyAttribute>
            <tas:KeyID>TKeyID1</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
        </ArrayOfKeyAttribute>
      </ResponseParameters>
    </Step>
    <Step id="7">
      <Command>AdvancedSecurity10.DeleteKey</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyID>KeyID1</KeyID>
      </RequestParameters>
      <ResponseParameters>
      </ResponseParameters>
    </Step>
    <Step id="8">
      <Command>AdvancedSecurity10.GetAllKeys</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyLength>1</KeyLength>
      </RequestParameters>
      <ResponseParameters>
        <ArrayOfKeyAttribute xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <KeyAttribute>
            <tas:KeyID>T123</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
        </ArrayOfKeyAttribute>
      </ResponseParameters>
    </Step>
  </Test>
<Test ID="TC.ADVANCED_SECURITY-1-1-6.04" ONVIFTestID="ADVANCED_SECURITY-1-1-6" Enabled="true">
    <TestName>Delete Key</TestName>
    <Name>Incorrect GetAllKeys strucrure: KeyStatus mandatory element is absent</Name>
    <Description>
    </Description>
    <ExpectedResult>
      <TestSummary>
      </TestSummary>
    </ExpectedResult>
    <Step id="1">
      <Command>Device10.GetServices</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <IncludeCapability>False</IncludeCapability>
      </RequestParameters>
      <ResponseParameters special="1">
        <ArrayOfService xmlns:tds="http://www.onvif.org/ver10/device/wsdl" xmlns:tt="http://www.onvif.org/ver10/schema">
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/device/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/events/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/advancedsecurity/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
        </ArrayOfService>
      </ResponseParameters>
    </Step>
    <Step id="2">
      <Command>AdvancedSecurity10.GetAllKeys</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <ArrayOfKeyAttribute xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <KeyAttribute>
            <tas:KeyID>T123</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <!--<tas:KeyStatus>ok</tas:KeyStatus>-->
          </KeyAttribute>
        </ArrayOfKeyAttribute>
      </ResponseParameters>
    </Step>
    <Step id="3">
      <Command>AdvancedSecurity10.GetServiceCapabilities</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <Capabilities xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <tas:KeystoreCapabilities MaximumNumberOfKeys="2" MaximumNumberOfCertificates="2" MaximumNumberOfCertificationPaths="2" RSAKeyPairGeneration="true" RSAKeyLengths="1 2" PKCS10ExternalCertificationWithRSA="true" SelfSignedCertificateCreationWithRSA="true" X509Versions="3 4 5">
            <tas:SignatureAlgorithms>
              <tas:algorithm>9</tas:algorithm>
              <!--Optional:-->
              <tas:parameters>AEIMQUYcgkosw048</tas:parameters>
              <!--Optional:-->
            </tas:SignatureAlgorithms>
          </tas:KeystoreCapabilities>
          <tas:TLSServerCapabilities TLSServerSupported="true" MaximumNumberOfTLSCertificationPaths="2" />
        </Capabilities>
      </ResponseParameters>
    </Step>
    <Step id="4">
      <Command>AdvancedSecurity10.CreateRSAKeyPair</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyLength>1</KeyLength>
      </RequestParameters>
      <ResponseParameters>
        <string>KeyID1</string>
      </ResponseParameters>
      <ResponseParametersAdditional>
        <EstimatedCreationTime>P0Y0M0DT0H02S</EstimatedCreationTime>
      </ResponseParametersAdditional>
    </Step>
    <Step id="5">
      <Command>AdvancedSecurity10.GetKeyStatus</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyID>KeyID1</KeyID>
      </RequestParameters>
      <ResponseParameters>
        <string>ok</string>
      </ResponseParameters>
    </Step>
    <Step id="6">
      <Command>AdvancedSecurity10.GetAllKeys</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <ArrayOfKeyAttribute xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <KeyAttribute>
            <tas:KeyID>T123</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
          <KeyAttribute>
            <tas:KeyID>KeyID1</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
        </ArrayOfKeyAttribute>
      </ResponseParameters>
    </Step>
    <Step id="7">
      <Command>AdvancedSecurity10.DeleteKey</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyID>KeyID1</KeyID>
      </RequestParameters>
      <ResponseParameters>
      </ResponseParameters>
    </Step>
    <Step id="8">
      <Command>AdvancedSecurity10.GetAllKeys</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyLength>1</KeyLength>
      </RequestParameters>
      <ResponseParameters>
        <ArrayOfKeyAttribute xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <KeyAttribute>
            <tas:KeyID>T123</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
        </ArrayOfKeyAttribute>
      </ResponseParameters>
    </Step>
  </Test>
<Test ID="TC.ADVANCED_SECURITY-1-1-6.05" ONVIFTestID="ADVANCED_SECURITY-1-1-6" Enabled="true">
    <TestName>Delete Key</TestName>
    <Name>GetAllKeys: without optional elements</Name>
    <Description>
      DUT sends correct response: GetAllKeys response contains only mandatory elements
    </Description>
    <ExpectedResult>
      <TestSummary>
      </TestSummary>
    </ExpectedResult>
    <Step id="1">
      <Command>Device10.GetServices</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <IncludeCapability>False</IncludeCapability>
      </RequestParameters>
      <ResponseParameters special="1">
        <ArrayOfService xmlns:tds="http://www.onvif.org/ver10/device/wsdl" xmlns:tt="http://www.onvif.org/ver10/schema">
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/device/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/events/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/advancedsecurity/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
        </ArrayOfService>
      </ResponseParameters>
    </Step>
    <Step id="2">
      <Command>AdvancedSecurity10.GetAllKeys</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <ArrayOfKeyAttribute xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <KeyAttribute>
            <tas:KeyID>T123</tas:KeyID>          
            <tas:KeyStatus>corrupt</tas:KeyStatus>
          </KeyAttribute>
        </ArrayOfKeyAttribute>
      </ResponseParameters>
    </Step>
    <Step id="3">
      <Command>AdvancedSecurity10.GetServiceCapabilities</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <Capabilities xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <tas:KeystoreCapabilities MaximumNumberOfKeys="2" MaximumNumberOfCertificates="2" MaximumNumberOfCertificationPaths="2" RSAKeyPairGeneration="true" RSAKeyLengths="1 2" PKCS10ExternalCertificationWithRSA="true" SelfSignedCertificateCreationWithRSA="true" X509Versions="3 4 5">
            <tas:SignatureAlgorithms>
              <tas:algorithm>9</tas:algorithm>
              <!--Optional:-->
              <tas:parameters>AEIMQUYcgkosw048</tas:parameters>
              <!--Optional:-->
            </tas:SignatureAlgorithms>
          </tas:KeystoreCapabilities>
          <tas:TLSServerCapabilities TLSServerSupported="true" MaximumNumberOfTLSCertificationPaths="2" />
        </Capabilities>
      </ResponseParameters>
    </Step>
    <Step id="4">
      <Command>AdvancedSecurity10.CreateRSAKeyPair</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyLength>1</KeyLength>
      </RequestParameters>
      <ResponseParameters>
        <string>KeyID1</string>
      </ResponseParameters>
      <ResponseParametersAdditional>
        <EstimatedCreationTime>P0Y0M0DT0H02S</EstimatedCreationTime>
      </ResponseParametersAdditional>
    </Step>
    <Step id="5">
      <Command>AdvancedSecurity10.GetKeyStatus</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyID>KeyID1</KeyID>
      </RequestParameters>
      <ResponseParameters>
        <string>ok</string>
      </ResponseParameters>
    </Step>
    <Step id="6">
      <Command>AdvancedSecurity10.GetAllKeys</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <ArrayOfKeyAttribute xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <KeyAttribute>
            <tas:KeyID>T123</tas:KeyID>
           
            <tas:KeyStatus>corrupt</tas:KeyStatus>
          </KeyAttribute>
          <KeyAttribute>
            <tas:KeyID>KeyID1</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
        </ArrayOfKeyAttribute>
      </ResponseParameters>
    </Step>
    <Step id="7">
      <Command>AdvancedSecurity10.DeleteKey</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyID>KeyID1</KeyID>
      </RequestParameters>
      <ResponseParameters>
      </ResponseParameters>
    </Step>
    <Step id="8">
      <Command>AdvancedSecurity10.GetAllKeys</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyLength>1</KeyLength>
      </RequestParameters>
      <ResponseParameters>
        <ArrayOfKeyAttribute xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <KeyAttribute>
            <tas:KeyID>T123</tas:KeyID>
            
            <tas:KeyStatus>corrupt</tas:KeyStatus>
          </KeyAttribute>
        </ArrayOfKeyAttribute>
      </ResponseParameters>
    </Step>
  </Test>
<Test ID="TC.ADVANCED_SECURITY-1-1-6.06" ONVIFTestID="ADVANCED_SECURITY-1-1-6" Enabled="true">
    <TestName>Delete Key</TestName>
    <Name>Fault to GetAllKeys request</Name>
    <Description>
    </Description>
    <ExpectedResult>
      <TestSummary>
      </TestSummary>
    </ExpectedResult>
    <Step id="1">
      <Command>Device10.GetServices</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <IncludeCapability>False</IncludeCapability>
      </RequestParameters>
      <ResponseParameters special="1">
        <ArrayOfService xmlns:tds="http://www.onvif.org/ver10/device/wsdl" xmlns:tt="http://www.onvif.org/ver10/schema">
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/device/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/events/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/advancedsecurity/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
        </ArrayOfService>
      </ResponseParameters>
    </Step>
    <Step id="2">
      <Command>AdvancedSecurity10.GetAllKeys</Command>
      <Response>Fault</Response>
      <Code>Sender</Code>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <ArrayOfKeyAttribute xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <KeyAttribute>
            <tas:KeyID>T123</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
        </ArrayOfKeyAttribute>
      </ResponseParameters>
    </Step>   
    
  </Test>
<Test ID="TC.ADVANCED_SECURITY-1-1-6.07" ONVIFTestID="ADVANCED_SECURITY-1-1-6" Enabled="true">
    <TestName>Delete Key</TestName>
    <Name>No response to GetAllKeys request</Name>
    <Description>
    </Description>
    <ExpectedResult>
      <TestSummary>
      </TestSummary>
    </ExpectedResult>
    <Step id="1">
      <Command>Device10.GetServices</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <IncludeCapability>False</IncludeCapability>
      </RequestParameters>
      <ResponseParameters special="1">
        <ArrayOfService xmlns:tds="http://www.onvif.org/ver10/device/wsdl" xmlns:tt="http://www.onvif.org/ver10/schema">
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/device/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/events/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/advancedsecurity/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
        </ArrayOfService>
      </ResponseParameters>
    </Step>
    <Step id="2">
      <Command>AdvancedSecurity10.GetAllKeys</Command>
      <Response>NoResponse</Response>
     
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <ArrayOfKeyAttribute xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <KeyAttribute>
            <tas:KeyID>T123</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
        </ArrayOfKeyAttribute>
      </ResponseParameters>
    </Step>   
    
  </Test>
    <!--Annex A.9-->
<Test ID="TC.ADVANCED_SECURITY-1-1-6.08" ONVIFTestID="ADVANCED_SECURITY-1-1-6" Enabled="true">
    <TestName>Delete Key</TestName>
    <Name>Fault to CreateRSAKeyPair request</Name>
    <Description>
    </Description>
    <ExpectedResult>
      <TestSummary>
      </TestSummary>
    </ExpectedResult>
    <Step id="1">
      <Command>Device10.GetServices</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <IncludeCapability>False</IncludeCapability>
      </RequestParameters>
      <ResponseParameters special="1">
        <ArrayOfService xmlns:tds="http://www.onvif.org/ver10/device/wsdl" xmlns:tt="http://www.onvif.org/ver10/schema">
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/device/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/events/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/advancedsecurity/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
        </ArrayOfService>
      </ResponseParameters>
    </Step>
    <Step id="2">
      <Command>AdvancedSecurity10.GetAllKeys</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <ArrayOfKeyAttribute xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <KeyAttribute>
            <tas:KeyID>T123</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
        </ArrayOfKeyAttribute>
      </ResponseParameters>
    </Step>
    <Step id="3">
      <Command>AdvancedSecurity10.GetServiceCapabilities</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <Capabilities xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <tas:KeystoreCapabilities MaximumNumberOfKeys="2" MaximumNumberOfCertificates="2" MaximumNumberOfCertificationPaths="2" RSAKeyPairGeneration="true" RSAKeyLengths="1 2" PKCS10ExternalCertificationWithRSA="true" SelfSignedCertificateCreationWithRSA="true" X509Versions="3 4 5">
            <tas:SignatureAlgorithms>
              <tas:algorithm>9</tas:algorithm>
              <!--Optional:-->
              <tas:parameters>AEIMQUYcgkosw048</tas:parameters>
              <!--Optional:-->
            </tas:SignatureAlgorithms>
          </tas:KeystoreCapabilities>
          <tas:TLSServerCapabilities TLSServerSupported="true" MaximumNumberOfTLSCertificationPaths="2" />
        </Capabilities>
      </ResponseParameters>
    </Step>
    <Step id="4">
      <Command>AdvancedSecurity10.CreateRSAKeyPair</Command>
      <Response>Fault</Response>
      <Code>Sender</Code>
      <RequestParameters>
        <KeyLength>1</KeyLength>
      </RequestParameters>
      <ResponseParameters>
        <string>KeyID1</string>
      </ResponseParameters>
      <ResponseParametersAdditional>
        <EstimatedCreationTime>P0Y0M0DT0H02S</EstimatedCreationTime>
      </ResponseParametersAdditional>
    </Step>
    
  </Test>
<Test ID="TC.ADVANCED_SECURITY-1-1-6.09" ONVIFTestID="ADVANCED_SECURITY-1-1-6" Enabled="true">
    <TestName>Delete Key</TestName>
    <Name>No response to CreateRSAKeyPair request</Name>
    <Description>
    </Description>
    <ExpectedResult>
      <TestSummary>
      </TestSummary>
    </ExpectedResult>
    <Step id="1">
      <Command>Device10.GetServices</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <IncludeCapability>False</IncludeCapability>
      </RequestParameters>
      <ResponseParameters special="1">
        <ArrayOfService xmlns:tds="http://www.onvif.org/ver10/device/wsdl" xmlns:tt="http://www.onvif.org/ver10/schema">
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/device/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/events/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/advancedsecurity/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
        </ArrayOfService>
      </ResponseParameters>
    </Step>
    <Step id="2">
      <Command>AdvancedSecurity10.GetAllKeys</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <ArrayOfKeyAttribute xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <KeyAttribute>
            <tas:KeyID>T123</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
        </ArrayOfKeyAttribute>
      </ResponseParameters>
    </Step>
    <Step id="3">
      <Command>AdvancedSecurity10.GetServiceCapabilities</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <Capabilities xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <tas:KeystoreCapabilities MaximumNumberOfKeys="2" MaximumNumberOfCertificates="2" MaximumNumberOfCertificationPaths="2" RSAKeyPairGeneration="true" RSAKeyLengths="1 2" PKCS10ExternalCertificationWithRSA="true" SelfSignedCertificateCreationWithRSA="true" X509Versions="3 4 5">
            <tas:SignatureAlgorithms>
              <tas:algorithm>9</tas:algorithm>
              <!--Optional:-->
              <tas:parameters>AEIMQUYcgkosw048</tas:parameters>
              <!--Optional:-->
            </tas:SignatureAlgorithms>
          </tas:KeystoreCapabilities>
          <tas:TLSServerCapabilities TLSServerSupported="true" MaximumNumberOfTLSCertificationPaths="2" />
        </Capabilities>
      </ResponseParameters>
    </Step>
    <Step id="4">
      <Command>AdvancedSecurity10.CreateRSAKeyPair</Command>
      <Response>NoResponse</Response>
    
      <RequestParameters>
        <KeyLength>1</KeyLength>
      </RequestParameters>
      <ResponseParameters>
        <string>KeyID1</string>
      </ResponseParameters>
      <ResponseParametersAdditional>
        <EstimatedCreationTime>P0Y0M0DT0H02S</EstimatedCreationTime>
      </ResponseParametersAdditional>
    </Step>
    
  </Test>
<Test ID="TC.ADVANCED_SECURITY-1-1-6.10" ONVIFTestID="ADVANCED_SECURITY-1-1-6" Enabled="true">
    <TestName>Delete Key</TestName>
    <Name>No Ok status during operation dely time</Name>
    <Description>
      Set Operation delay to 30 s
      Check that TT will send PM request during operation delay time
      Check that TT will delete the key at the end of the test
    </Description>
    <ExpectedResult>
      <TestSummary>
      </TestSummary>
    </ExpectedResult>
    <Step id="1">
      <Command>Device10.GetServices</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <IncludeCapability>False</IncludeCapability>
      </RequestParameters>
      <ResponseParameters special="1">
        <ArrayOfService xmlns:tds="http://www.onvif.org/ver10/device/wsdl" xmlns:tt="http://www.onvif.org/ver10/schema">
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/device/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/events/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/advancedsecurity/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
        </ArrayOfService>
      </ResponseParameters>
    </Step>
    <Step id="2">
      <Command>AdvancedSecurity10.GetAllKeys</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <ArrayOfKeyAttribute xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <KeyAttribute>
            <tas:KeyID>T123</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
        </ArrayOfKeyAttribute>
      </ResponseParameters>
    </Step>
    <Step id="3">
      <Command>AdvancedSecurity10.GetServiceCapabilities</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <Capabilities xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <tas:KeystoreCapabilities MaximumNumberOfKeys="2" MaximumNumberOfCertificates="2" MaximumNumberOfCertificationPaths="2" RSAKeyPairGeneration="true" RSAKeyLengths="1 2" PKCS10ExternalCertificationWithRSA="true" SelfSignedCertificateCreationWithRSA="true" X509Versions="3 4 5">
            <tas:SignatureAlgorithms>
              <tas:algorithm>9</tas:algorithm>
              <!--Optional:-->
              <tas:parameters>AEIMQUYcgkosw048</tas:parameters>
              <!--Optional:-->
            </tas:SignatureAlgorithms>
          </tas:KeystoreCapabilities>
          <tas:TLSServerCapabilities TLSServerSupported="true" MaximumNumberOfTLSCertificationPaths="2" />
        </Capabilities>
      </ResponseParameters>
    </Step>
    <Step id="4">
      <Command>AdvancedSecurity10.CreateRSAKeyPair</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyLength>1</KeyLength>
      </RequestParameters>
      <ResponseParameters>
        <string>KeyID1</string>
      </ResponseParameters>
      <ResponseParametersAdditional>
        <EstimatedCreationTime>P0Y0M0DT0H02S</EstimatedCreationTime>
      </ResponseParametersAdditional>
    </Step>
    <Step id="5">
      <Command>AdvancedSecurity10.GetKeyStatus</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyID>KeyID1</KeyID>
      </RequestParameters>
      <ResponseParameters>
        <string>other</string>
      </ResponseParameters>
    </Step>
    
    <Step id="7">
      <Command>AdvancedSecurity10.DeleteKey</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyID>KeyID1</KeyID>
      </RequestParameters>
      <ResponseParameters>
      </ResponseParameters>
    </Step>
    
  </Test>
  <Test ID="TC.ADVANCED_SECURITY-1-1-6.11" ONVIFTestID="ADVANCED_SECURITY-1-1-6" Enabled="true">
    <TestName>Delete Key</TestName>
    <Name>Corrupt status during operation dely time</Name>
    <Description>
      Set Operation delay to 30 s
      DUT sends corrupt status
      Check that TT will delete the key at the end of the test
    </Description>
    <ExpectedResult>
      <TestSummary>
      </TestSummary>
    </ExpectedResult>
    <Step id="1">
      <Command>Device10.GetServices</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <IncludeCapability>False</IncludeCapability>
      </RequestParameters>
      <ResponseParameters special="1">
        <ArrayOfService xmlns:tds="http://www.onvif.org/ver10/device/wsdl" xmlns:tt="http://www.onvif.org/ver10/schema">
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/device/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/events/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/advancedsecurity/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
        </ArrayOfService>
      </ResponseParameters>
    </Step>
    <Step id="2">
      <Command>AdvancedSecurity10.GetAllKeys</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <ArrayOfKeyAttribute xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <KeyAttribute>
            <tas:KeyID>T123</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
        </ArrayOfKeyAttribute>
      </ResponseParameters>
    </Step>
    <Step id="3">
      <Command>AdvancedSecurity10.GetServiceCapabilities</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <Capabilities xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <tas:KeystoreCapabilities MaximumNumberOfKeys="2" MaximumNumberOfCertificates="2" MaximumNumberOfCertificationPaths="2" RSAKeyPairGeneration="true" RSAKeyLengths="1 2" PKCS10ExternalCertificationWithRSA="true" SelfSignedCertificateCreationWithRSA="true" X509Versions="3 4 5">
            <tas:SignatureAlgorithms>
              <tas:algorithm>9</tas:algorithm>
              <!--Optional:-->
              <tas:parameters>AEIMQUYcgkosw048</tas:parameters>
              <!--Optional:-->
            </tas:SignatureAlgorithms>
          </tas:KeystoreCapabilities>
          <tas:TLSServerCapabilities TLSServerSupported="true" MaximumNumberOfTLSCertificationPaths="2" />
        </Capabilities>
      </ResponseParameters>
    </Step>
    <Step id="4">
      <Command>AdvancedSecurity10.CreateRSAKeyPair</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyLength>1</KeyLength>
      </RequestParameters>
      <ResponseParameters>
        <string>KeyID1</string>
      </ResponseParameters>
      <ResponseParametersAdditional>
        <EstimatedCreationTime>P0Y0M0DT0H02S</EstimatedCreationTime>
      </ResponseParametersAdditional>
    </Step>
    <Step id="5">
      <Command>AdvancedSecurity10.GetKeyStatus</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyID>KeyID1</KeyID>
      </RequestParameters>
      <ResponseParameters>
        <string>other</string>
      </ResponseParameters>
    </Step>
    <Step id="5">
      <Command>AdvancedSecurity10.GetKeyStatus</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyID>KeyID1</KeyID>
      </RequestParameters>
      <ResponseParameters>
        <string>corrupt</string>
      </ResponseParameters>
    </Step>
    <Step id="7">
      <Command>AdvancedSecurity10.DeleteKey</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyID>KeyID1</KeyID>
      </RequestParameters>
      <ResponseParameters>
      </ResponseParameters>
    </Step>
    
  </Test>
<Test ID="TC.ADVANCED_SECURITY-1-1-6.12" ONVIFTestID="ADVANCED_SECURITY-1-1-6" Enabled="true">
    <TestName>Delete Key</TestName>
    <Name>Fault during rollback procedure</Name>
    <Description>
    </Description>
    <ExpectedResult>
      <TestSummary>
      </TestSummary>
    </ExpectedResult>
    <Step id="1">
      <Command>Device10.GetServices</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <IncludeCapability>False</IncludeCapability>
      </RequestParameters>
      <ResponseParameters special="1">
        <ArrayOfService xmlns:tds="http://www.onvif.org/ver10/device/wsdl" xmlns:tt="http://www.onvif.org/ver10/schema">
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/device/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/events/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/advancedsecurity/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
        </ArrayOfService>
      </ResponseParameters>
    </Step>
    <Step id="2">
      <Command>AdvancedSecurity10.GetAllKeys</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <ArrayOfKeyAttribute xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <KeyAttribute>
            <tas:KeyID>T123</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
        </ArrayOfKeyAttribute>
      </ResponseParameters>
    </Step>
    <Step id="3">
      <Command>AdvancedSecurity10.GetServiceCapabilities</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <Capabilities xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <tas:KeystoreCapabilities MaximumNumberOfKeys="2" MaximumNumberOfCertificates="2" MaximumNumberOfCertificationPaths="2" RSAKeyPairGeneration="true" RSAKeyLengths="1 2" PKCS10ExternalCertificationWithRSA="true" SelfSignedCertificateCreationWithRSA="true" X509Versions="3 4 5">
            <tas:SignatureAlgorithms>
              <tas:algorithm>9</tas:algorithm>
              <!--Optional:-->
              <tas:parameters>AEIMQUYcgkosw048</tas:parameters>
              <!--Optional:-->
            </tas:SignatureAlgorithms>
          </tas:KeystoreCapabilities>
          <tas:TLSServerCapabilities TLSServerSupported="true" MaximumNumberOfTLSCertificationPaths="2" />
        </Capabilities>
      </ResponseParameters>
    </Step>
    <Step id="4">
      <Command>AdvancedSecurity10.CreateRSAKeyPair</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyLength>1</KeyLength>
      </RequestParameters>
      <ResponseParameters>
        <string>KeyID1</string>
      </ResponseParameters>
      <ResponseParametersAdditional>
        <EstimatedCreationTime>P0Y0M0DT0H02S</EstimatedCreationTime>
      </ResponseParametersAdditional>
    </Step>
    <Step id="5">
      <Command>AdvancedSecurity10.GetKeyStatus</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyID>KeyID1</KeyID>
      </RequestParameters>
      <ResponseParameters>
        <string>other</string>
      </ResponseParameters>
    </Step>
    
    <Step id="7">
      <Command>AdvancedSecurity10.DeleteKey</Command>
      <Response>Fault</Response>
      <Code>Receiver</Code>
      <RequestParameters>
        <KeyID>KeyID1</KeyID>
      </RequestParameters>
      <ResponseParameters>
      </ResponseParameters>
    </Step>
    
  </Test>
  <!--test-->
<Test ID="TC.ADVANCED_SECURITY-1-1-6.13" ONVIFTestID="ADVANCED_SECURITY-1-1-6" Enabled="true">
    <TestName>Delete Key</TestName>
    <Name>DUT doesn't return KeyID after key creation</Name>
    <Description>
      GetAllKeys doesn't contain jast created KeyID
    </Description>
    <ExpectedResult>
      <TestSummary>
        <![CDATA[
        ADVANCED_SECURITY-1-1-6 Delete Key

   STEP 1 - Get Advanced Security service address
      Transmit done
      Receive done
      http://localhost:17934/ServiceAdvancedSecurity10/AdvancedSecurityService.asmx
   STEP PASSED

   STEP 2 - Check that the DUT returned Advanced Security service address
   STEP PASSED

   STEP 3 - Get Keystore Client service address
      Transmit done
      Receive done
      http://localhost:17934/ServiceAdvancedSecurity10/AdvancedSecurityService.asmx
   STEP PASSED

   STEP 4 - Check that the DUT returned Keystore Client service address
   STEP PASSED

   STEP 5 - Check that Advance Security Service is accessible
   STEP PASSED

   STEP 6 - Get All Keys
      Transmit done
      Receive done
   STEP PASSED

   STEP 7 - Get Advanced Security Capabilities
      Transmit done
      Receive done
   STEP PASSED

   STEP 8 - Determine key length for test key pair
   STEP PASSED

   STEP 9 - Create RSA Key Pair of size '1' and without alias
      Transmit done
      Receive done
   STEP PASSED

   STEP 10 - Get Key Status
      Transmit done
      Receive done
   STEP PASSED

   STEP 11 - Check key status of key pair is 'ok'
   STEP PASSED

   STEP 12 - Get All Keys
      Transmit done
      Receive done
   STEP PASSED

   STEP 13 - Check that key pair is actually created
      Created key doesn't present in key list received after new key's creation.
   STEP FAILED

   STEP 14 - Delete RSA Key Pair with ID = 'KeyID2'
      Transmit done
      Receive done
   STEP PASSED

TEST FAILED

        ]]>
      </TestSummary>
    </ExpectedResult>
    
<Step id="1">
      <Command>Device10.GetServices</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <IncludeCapability>False</IncludeCapability>
      </RequestParameters>
      <ResponseParameters special="1">
        <ArrayOfService xmlns:tds="http://www.onvif.org/ver10/device/wsdl" xmlns:tt="http://www.onvif.org/ver10/schema">
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/device/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/events/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/advancedsecurity/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
        </ArrayOfService>
      </ResponseParameters>
    </Step>
    <Step id="2">
      <Command>AdvancedSecurity10.GetAllKeys</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <ArrayOfKeyAttribute xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <KeyAttribute>
            <tas:KeyID>KeyID1</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
        </ArrayOfKeyAttribute>
      </ResponseParameters>
    </Step>
    <Step id="3">
      <Command>AdvancedSecurity10.GetServiceCapabilities</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <Capabilities xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <tas:KeystoreCapabilities MaximumNumberOfKeys="2" MaximumNumberOfCertificates="2" MaximumNumberOfCertificationPaths="2" RSAKeyPairGeneration="true" RSAKeyLengths="1 2" PKCS10ExternalCertificationWithRSA="true" SelfSignedCertificateCreationWithRSA="true" X509Versions="3 4 5">
            <tas:SignatureAlgorithms>
              <tas:algorithm>9</tas:algorithm>
              <!--Optional:-->
              <tas:parameters>AEIMQUYcgkosw048</tas:parameters>
              <!--Optional:-->
            </tas:SignatureAlgorithms>
          </tas:KeystoreCapabilities>
          <tas:TLSServerCapabilities TLSServerSupported="true" MaximumNumberOfTLSCertificationPaths="2" />
        </Capabilities>
      </ResponseParameters>
    </Step>
    <Step id="4">
      <Command>AdvancedSecurity10.CreateRSAKeyPair</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyLength>1</KeyLength>
      </RequestParameters>
      <ResponseParameters>
        <string>KeyID2</string>
      </ResponseParameters>
      <ResponseParametersAdditional>
        <EstimatedCreationTime>P0Y0M0DT0H02S</EstimatedCreationTime>
      </ResponseParametersAdditional>
    </Step>
    <Step id="5">
      <Command>AdvancedSecurity10.GetKeyStatus</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyID>KeyID1</KeyID>
      </RequestParameters>
      <ResponseParameters>
        <string>ok</string>
      </ResponseParameters>
    </Step>
    <Step id="6">
      <Command>AdvancedSecurity10.GetAllKeys</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <ArrayOfKeyAttribute xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <KeyAttribute>
            <tas:KeyID>KeyID1</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
          <!--<KeyAttribute>
            <tas:KeyID>KeyID2</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>-->
        </ArrayOfKeyAttribute>
      </ResponseParameters>
    </Step>
    <Step id="7">
      <Command>AdvancedSecurity10.DeleteKey</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyID>KeyID1</KeyID>
      </RequestParameters>
      <ResponseParameters>
      </ResponseParameters>
    </Step>
    
  </Test>
<Test ID="TC.ADVANCED_SECURITY-1-1-6.14" ONVIFTestID="ADVANCED_SECURITY-1-1-6" Enabled="true">
    <TestName>Delete Key</TestName>
    <Name>DUT doesn't return old KeyID after key creation</Name>
    <Description>
      GetAllKeys contains jast created KeyID but doesn't contain old KeyID
    </Description>
    <ExpectedResult>
      <TestSummary>
        <![CDATA[
 ADVANCED_SECURITY-1-1-6 Delete Key

   STEP 1 - Get Advanced Security service address
      Transmit done
      Receive done
      http://localhost:17934/ServiceAdvancedSecurity10/AdvancedSecurityService.asmx
   STEP PASSED

   STEP 2 - Check that the DUT returned Advanced Security service address
   STEP PASSED

   STEP 3 - Get Keystore Client service address
      Transmit done
      Receive done
      http://localhost:17934/ServiceAdvancedSecurity10/AdvancedSecurityService.asmx
   STEP PASSED

   STEP 4 - Check that the DUT returned Keystore Client service address
   STEP PASSED

   STEP 5 - Check that Advance Security Service is accessible
   STEP PASSED

   STEP 6 - Get All Keys
      Transmit done
      Receive done
   STEP PASSED

   STEP 7 - Get Advanced Security Capabilities
      Transmit done
      Receive done
   STEP PASSED

   STEP 8 - Determine key length for test key pair
   STEP PASSED

   STEP 9 - Create RSA Key Pair of size '1' and without alias
      Transmit done
      Receive done
   STEP PASSED

   STEP 10 - Get Key Status
      Transmit done
      Receive done
   STEP PASSED

   STEP 11 - Check key status of key pair is 'ok'
   STEP PASSED

   STEP 12 - Get All Keys
      Transmit done
      Receive done
   STEP PASSED

   STEP 13 - Check that key pair is actually created
      Not all keys from initial key list present in key list received after creation new one.
   STEP FAILED

   STEP 14 - Delete RSA Key Pair with ID = 'KeyID2'
      Transmit done
      Receive done
   STEP PASSED

TEST FAILED

        ]]>
      </TestSummary>
    </ExpectedResult>
    
<Step id="1">
      <Command>Device10.GetServices</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <IncludeCapability>False</IncludeCapability>
      </RequestParameters>
      <ResponseParameters special="1">
        <ArrayOfService xmlns:tds="http://www.onvif.org/ver10/device/wsdl" xmlns:tt="http://www.onvif.org/ver10/schema">
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/device/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/events/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/advancedsecurity/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
        </ArrayOfService>
      </ResponseParameters>
    </Step>
    <Step id="2">
      <Command>AdvancedSecurity10.GetAllKeys</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <ArrayOfKeyAttribute xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <KeyAttribute>
            <tas:KeyID>KeyID1</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
        <KeyAttribute>
            <tas:KeyID>KeyID3</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
        </ArrayOfKeyAttribute>
      </ResponseParameters>
    </Step>
    <Step id="3">
      <Command>AdvancedSecurity10.GetServiceCapabilities</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <Capabilities xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <tas:KeystoreCapabilities MaximumNumberOfKeys="2" MaximumNumberOfCertificates="2" MaximumNumberOfCertificationPaths="2" RSAKeyPairGeneration="true" RSAKeyLengths="1 2" PKCS10ExternalCertificationWithRSA="true" SelfSignedCertificateCreationWithRSA="true" X509Versions="3 4 5">
            <tas:SignatureAlgorithms>
              <tas:algorithm>9</tas:algorithm>
              <!--Optional:-->
              <tas:parameters>AEIMQUYcgkosw048</tas:parameters>
              <!--Optional:-->
            </tas:SignatureAlgorithms>
          </tas:KeystoreCapabilities>
          <tas:TLSServerCapabilities TLSServerSupported="true" MaximumNumberOfTLSCertificationPaths="2" />
        </Capabilities>
      </ResponseParameters>
    </Step>
    <Step id="4">
      <Command>AdvancedSecurity10.CreateRSAKeyPair</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyLength>1</KeyLength>
      </RequestParameters>
      <ResponseParameters>
        <string>KeyID2</string>
      </ResponseParameters>
      <ResponseParametersAdditional>
        <EstimatedCreationTime>P0Y0M0DT0H02S</EstimatedCreationTime>
      </ResponseParametersAdditional>
    </Step>
    <Step id="5">
      <Command>AdvancedSecurity10.GetKeyStatus</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyID>KeyID1</KeyID>
      </RequestParameters>
      <ResponseParameters>
        <string>ok</string>
      </ResponseParameters>
    </Step>
    <Step id="6">
      <Command>AdvancedSecurity10.GetAllKeys</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <ArrayOfKeyAttribute xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <KeyAttribute>
            <tas:KeyID>KeyID1</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
          <KeyAttribute>
            <tas:KeyID>KeyID2</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
        </ArrayOfKeyAttribute>
      </ResponseParameters>
    </Step>
    <Step id="7">
      <Command>AdvancedSecurity10.DeleteKey</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyID>KeyID1</KeyID>
      </RequestParameters>
      <ResponseParameters>
      </ResponseParameters>
    </Step>
    
  </Test>
<Test ID="TC.ADVANCED_SECURITY-1-1-6.15" ONVIFTestID="ADVANCED_SECURITY-1-1-6" Enabled="true">
    <TestName>Delete Key</TestName>
    <Name>DUT returns excess KeyID after key creation</Name>
    <Description>
      GetAllKeys contains KeyID which wasn't presented in initial key list
    </Description>
    <ExpectedResult>
      <TestSummary>
        <![CDATA[
  
        ]]>
      </TestSummary>
    </ExpectedResult>
    
<Step id="1">
      <Command>Device10.GetServices</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <IncludeCapability>False</IncludeCapability>
      </RequestParameters>
      <ResponseParameters special="1">
        <ArrayOfService xmlns:tds="http://www.onvif.org/ver10/device/wsdl" xmlns:tt="http://www.onvif.org/ver10/schema">
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/device/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/events/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/advancedsecurity/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
        </ArrayOfService>
      </ResponseParameters>
    </Step>
    <Step id="2">
      <Command>AdvancedSecurity10.GetAllKeys</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <ArrayOfKeyAttribute xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <KeyAttribute>
            <tas:KeyID>KeyID1</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
        </ArrayOfKeyAttribute>
      </ResponseParameters>
    </Step>
    <Step id="3">
      <Command>AdvancedSecurity10.GetServiceCapabilities</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <Capabilities xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <tas:KeystoreCapabilities MaximumNumberOfKeys="2" MaximumNumberOfCertificates="2" MaximumNumberOfCertificationPaths="2" RSAKeyPairGeneration="true" RSAKeyLengths="1 2" PKCS10ExternalCertificationWithRSA="true" SelfSignedCertificateCreationWithRSA="true" X509Versions="3 4 5">
            <tas:SignatureAlgorithms>
              <tas:algorithm>9</tas:algorithm>
              <!--Optional:-->
              <tas:parameters>AEIMQUYcgkosw048</tas:parameters>
              <!--Optional:-->
            </tas:SignatureAlgorithms>
          </tas:KeystoreCapabilities>
          <tas:TLSServerCapabilities TLSServerSupported="true" MaximumNumberOfTLSCertificationPaths="2" />
        </Capabilities>
      </ResponseParameters>
    </Step>
    <Step id="4">
      <Command>AdvancedSecurity10.CreateRSAKeyPair</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyLength>1</KeyLength>
      </RequestParameters>
      <ResponseParameters>
        <string>KeyID2</string>
      </ResponseParameters>
      <ResponseParametersAdditional>
        <EstimatedCreationTime>P0Y0M0DT0H02S</EstimatedCreationTime>
      </ResponseParametersAdditional>
    </Step>
    <Step id="5">
      <Command>AdvancedSecurity10.GetKeyStatus</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyID>KeyID1</KeyID>
      </RequestParameters>
      <ResponseParameters>
        <string>ok</string>
      </ResponseParameters>
    </Step>
    <Step id="6">
      <Command>AdvancedSecurity10.GetAllKeys</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <ArrayOfKeyAttribute xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <KeyAttribute>
            <tas:KeyID>KeyID1</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
          <KeyAttribute>
            <tas:KeyID>KeyID2</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
          <KeyAttribute>
            <tas:KeyID>KeyID3</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
        </ArrayOfKeyAttribute>
      </ResponseParameters>
    </Step>
    <Step id="7">
      <Command>AdvancedSecurity10.DeleteKey</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyID>KeyID1</KeyID>
      </RequestParameters>
      <ResponseParameters>
      </ResponseParameters>
    </Step>
    
  </Test>
<Test ID="TC.ADVANCED_SECURITY-1-1-6.16" ONVIFTestID="ADVANCED_SECURITY-1-1-6" Enabled="true">
    <TestName>Delete Key</TestName>
    <Name>Fault to DeleteKey request</Name>
    <Description>
    </Description>
    <ExpectedResult>
      <TestSummary>
      </TestSummary>
    </ExpectedResult>
    <Step id="1">
      <Command>Device10.GetServices</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <IncludeCapability>False</IncludeCapability>
      </RequestParameters>
      <ResponseParameters special="1">
        <ArrayOfService xmlns:tds="http://www.onvif.org/ver10/device/wsdl" xmlns:tt="http://www.onvif.org/ver10/schema">
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/device/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/events/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/advancedsecurity/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
        </ArrayOfService>
      </ResponseParameters>
    </Step>
    <Step id="2">
      <Command>AdvancedSecurity10.GetAllKeys</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <ArrayOfKeyAttribute xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <KeyAttribute>
            <tas:KeyID>T123</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
        </ArrayOfKeyAttribute>
      </ResponseParameters>
    </Step>
    <Step id="3">
      <Command>AdvancedSecurity10.GetServiceCapabilities</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <Capabilities xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <tas:KeystoreCapabilities MaximumNumberOfKeys="2" MaximumNumberOfCertificates="2" MaximumNumberOfCertificationPaths="2" RSAKeyPairGeneration="true" RSAKeyLengths="1 2" PKCS10ExternalCertificationWithRSA="true" SelfSignedCertificateCreationWithRSA="true" X509Versions="3 4 5">
            <tas:SignatureAlgorithms>
              <tas:algorithm>9</tas:algorithm>
              <!--Optional:-->
              <tas:parameters>AEIMQUYcgkosw048</tas:parameters>
              <!--Optional:-->
            </tas:SignatureAlgorithms>
          </tas:KeystoreCapabilities>
          <tas:TLSServerCapabilities TLSServerSupported="true" MaximumNumberOfTLSCertificationPaths="2" />
        </Capabilities>
      </ResponseParameters>
    </Step>
    <Step id="4">
      <Command>AdvancedSecurity10.CreateRSAKeyPair</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyLength>1</KeyLength>
      </RequestParameters>
      <ResponseParameters>
        <string>KeyID1</string>
      </ResponseParameters>
      <ResponseParametersAdditional>
        <EstimatedCreationTime>P0Y0M0DT0H02S</EstimatedCreationTime>
      </ResponseParametersAdditional>
    </Step>
    <Step id="5">
      <Command>AdvancedSecurity10.GetKeyStatus</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyID>KeyID1</KeyID>
      </RequestParameters>
      <ResponseParameters>
        <string>ok</string>
      </ResponseParameters>
    </Step>
    <Step id="6">
      <Command>AdvancedSecurity10.GetAllKeys</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <ArrayOfKeyAttribute xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <KeyAttribute>
            <tas:KeyID>T123</tas:KeyID>
            
            <tas:KeyStatus>corrupt</tas:KeyStatus>
          </KeyAttribute>
          <KeyAttribute>
            <tas:KeyID>KeyID1</tas:KeyID>
            <tas:hasPrivateKey>false</tas:hasPrivateKey>
            <tas:KeyStatus>other</tas:KeyStatus>
          </KeyAttribute>
        </ArrayOfKeyAttribute>
      </ResponseParameters>
    </Step>
    <Step id="7">
      <Command>AdvancedSecurity10.DeleteKey</Command>
      <Response>Fault</Response>
      <Code>Receiver</Code>
      <RequestParameters>
        <KeyID>KeyID1</KeyID>
      </RequestParameters>
      <ResponseParameters>
      </ResponseParameters>
    </Step>
    
  </Test>
<Test ID="TC.ADVANCED_SECURITY-1-1-6.17" ONVIFTestID="ADVANCED_SECURITY-1-1-6" Enabled="true">
    <TestName>Delete Key</TestName>
    <Name>No response to DeleteKey request</Name>
    <Description>
    </Description>
    <ExpectedResult>
      <TestSummary>
      </TestSummary>
    </ExpectedResult>
    <Step id="1">
      <Command>Device10.GetServices</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <IncludeCapability>False</IncludeCapability>
      </RequestParameters>
      <ResponseParameters special="1">
        <ArrayOfService xmlns:tds="http://www.onvif.org/ver10/device/wsdl" xmlns:tt="http://www.onvif.org/ver10/schema">
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/device/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/events/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/advancedsecurity/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
        </ArrayOfService>
      </ResponseParameters>
    </Step>
    <Step id="2">
      <Command>AdvancedSecurity10.GetAllKeys</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <ArrayOfKeyAttribute xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <KeyAttribute>
            <tas:KeyID>T123</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
        </ArrayOfKeyAttribute>
      </ResponseParameters>
    </Step>
    <Step id="3">
      <Command>AdvancedSecurity10.GetServiceCapabilities</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <Capabilities xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <tas:KeystoreCapabilities MaximumNumberOfKeys="2" MaximumNumberOfCertificates="2" MaximumNumberOfCertificationPaths="2" RSAKeyPairGeneration="true" RSAKeyLengths="1 2" PKCS10ExternalCertificationWithRSA="true" SelfSignedCertificateCreationWithRSA="true" X509Versions="3 4 5">
            <tas:SignatureAlgorithms>
              <tas:algorithm>9</tas:algorithm>
              <!--Optional:-->
              <tas:parameters>AEIMQUYcgkosw048</tas:parameters>
              <!--Optional:-->
            </tas:SignatureAlgorithms>
          </tas:KeystoreCapabilities>
          <tas:TLSServerCapabilities TLSServerSupported="true" MaximumNumberOfTLSCertificationPaths="2" />
        </Capabilities>
      </ResponseParameters>
    </Step>
    <Step id="4">
      <Command>AdvancedSecurity10.CreateRSAKeyPair</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyLength>1</KeyLength>
      </RequestParameters>
      <ResponseParameters>
        <string>KeyID1</string>
      </ResponseParameters>
      <ResponseParametersAdditional>
        <EstimatedCreationTime>P0Y0M0DT0H02S</EstimatedCreationTime>
      </ResponseParametersAdditional>
    </Step>
    <Step id="5">
      <Command>AdvancedSecurity10.GetKeyStatus</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyID>KeyID1</KeyID>
      </RequestParameters>
      <ResponseParameters>
        <string>ok</string>
      </ResponseParameters>
    </Step>
    <Step id="6">
      <Command>AdvancedSecurity10.GetAllKeys</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <ArrayOfKeyAttribute xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <KeyAttribute>
            <tas:KeyID>T123</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
          <KeyAttribute>
            <tas:KeyID>KeyID1</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
        </ArrayOfKeyAttribute>
      </ResponseParameters>
    </Step>
    <Step id="7">
      <Command>AdvancedSecurity10.DeleteKey</Command>
      <Response>NoResponse</Response>
      
      <RequestParameters>
        <KeyID>KeyID1</KeyID>
      </RequestParameters>
      <ResponseParameters>
      </ResponseParameters>
    </Step>
    
  </Test>
<Test ID="TC.ADVANCED_SECURITY-1-1-6.18" ONVIFTestID="ADVANCED_SECURITY-1-1-6" Enabled="true">
    <TestName>Delete Key</TestName>
    <Name>DUT returns deleted KeyID</Name>
    <Description>
      GetAllKeys contains jast deleted KeyID
    </Description>
    <ExpectedResult>
      <TestSummary>
        <![CDATA[
 ADVANCED_SECURITY-1-1-6 Delete Key

   STEP 1 - Get Advanced Security service address
      Transmit done
      Receive done
      http://localhost:17934/ServiceAdvancedSecurity10/AdvancedSecurityService.asmx
   STEP PASSED

   STEP 2 - Check that the DUT returned Advanced Security service address
   STEP PASSED

   STEP 3 - Get Keystore Client service address
      Transmit done
      Receive done
      http://localhost:17934/ServiceAdvancedSecurity10/AdvancedSecurityService.asmx
   STEP PASSED

   STEP 4 - Check that the DUT returned Keystore Client service address
   STEP PASSED

   STEP 5 - Check that Advance Security Service is accessible
   STEP PASSED

   STEP 6 - Get All Keys
      Transmit done
      Receive done
   STEP PASSED

   STEP 7 - Get Advanced Security Capabilities
      Transmit done
      Receive done
   STEP PASSED

   STEP 8 - Determine key length for test key pair
   STEP PASSED

   STEP 9 - Create RSA Key Pair of size '1' and without alias
      Transmit done
      Receive done
   STEP PASSED

   STEP 10 - Get Key Status
      Transmit done
      Receive done
   STEP PASSED

   STEP 11 - Check key status of key pair is 'ok'
   STEP PASSED

   STEP 12 - Get All Keys
      Transmit done
      Receive done
   STEP PASSED

   STEP 13 - Check that key pair is actually created
   STEP PASSED

   STEP 14 - Delete RSA Key Pair with ID = 'KeyID2'
      Transmit done
      Receive done
   STEP PASSED

   STEP 15 - Get All Keys
      Transmit done
      Receive done
   STEP PASSED

   STEP 16 - Check that key list received before new key's creation is the same as after removing created key
      Key list received before new key's creation isn't the same as after removing created key
   STEP FAILED

TEST FAILED

        ]]>
      </TestSummary>
    </ExpectedResult>
    
<Step id="1">
      <Command>Device10.GetServices</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <IncludeCapability>False</IncludeCapability>
      </RequestParameters>
      <ResponseParameters special="1">
        <ArrayOfService xmlns:tds="http://www.onvif.org/ver10/device/wsdl" xmlns:tt="http://www.onvif.org/ver10/schema">
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/device/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/events/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/advancedsecurity/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
        </ArrayOfService>
      </ResponseParameters>
    </Step>
    <Step id="2">
      <Command>AdvancedSecurity10.GetAllKeys</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <ArrayOfKeyAttribute xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <KeyAttribute>
            <tas:KeyID>KeyID1</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
        </ArrayOfKeyAttribute>
      </ResponseParameters>
    </Step>
    <Step id="3">
      <Command>AdvancedSecurity10.GetServiceCapabilities</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <Capabilities xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <tas:KeystoreCapabilities MaximumNumberOfKeys="2" MaximumNumberOfCertificates="2" MaximumNumberOfCertificationPaths="2" RSAKeyPairGeneration="true" RSAKeyLengths="1 2" PKCS10ExternalCertificationWithRSA="true" SelfSignedCertificateCreationWithRSA="true" X509Versions="3 4 5">
            <tas:SignatureAlgorithms>
              <tas:algorithm>9</tas:algorithm>
              <!--Optional:-->
              <tas:parameters>AEIMQUYcgkosw048</tas:parameters>
              <!--Optional:-->
            </tas:SignatureAlgorithms>
          </tas:KeystoreCapabilities>
          <tas:TLSServerCapabilities TLSServerSupported="true" MaximumNumberOfTLSCertificationPaths="2" />
        </Capabilities>
      </ResponseParameters>
    </Step>
    <Step id="4">
      <Command>AdvancedSecurity10.CreateRSAKeyPair</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyLength>1</KeyLength>
      </RequestParameters>
      <ResponseParameters>
        <string>KeyID2</string>
      </ResponseParameters>
      <ResponseParametersAdditional>
        <EstimatedCreationTime>P0Y0M0DT0H0.1S</EstimatedCreationTime>
      </ResponseParametersAdditional>
    </Step>
    <Step id="5">
      <Command>AdvancedSecurity10.GetKeyStatus</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyID>KeyID1</KeyID>
      </RequestParameters>
      <ResponseParameters>
        <string>ok</string>
      </ResponseParameters>
    </Step>
    <Step id="6">
      <Command>AdvancedSecurity10.GetAllKeys</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <ArrayOfKeyAttribute xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <KeyAttribute>
            <tas:KeyID>KeyID1</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
          <KeyAttribute>
            <tas:KeyID>KeyID2</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
        </ArrayOfKeyAttribute>
      </ResponseParameters>
    </Step>
    <Step id="7">
      <Command>AdvancedSecurity10.DeleteKey</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyID>KeyID1</KeyID>
      </RequestParameters>
      <ResponseParameters>
      </ResponseParameters>
    </Step>
    <Step id="8">
      <Command>AdvancedSecurity10.GetAllKeys</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <ArrayOfKeyAttribute xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <KeyAttribute>
            <tas:KeyID>KeyID1</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
        <KeyAttribute>
            <tas:KeyID>KeyID2</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
        </ArrayOfKeyAttribute>
      </ResponseParameters>
    </Step>
  </Test>
<Test ID="TC.ADVANCED_SECURITY-1-1-6.19" ONVIFTestID="ADVANCED_SECURITY-1-1-6" Enabled="true">
    <TestName>Delete Key</TestName>
    <Name>DUT doesn't return old KeyID after key deletion</Name>
    <Description>
      GetAllKeys after key's deletion doesn't contais old KeyID
    </Description>
    <ExpectedResult>
      <TestSummary>
        <![CDATA[

        ]]>
      </TestSummary>
    </ExpectedResult>
    
<Step id="1">
      <Command>Device10.GetServices</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <IncludeCapability>False</IncludeCapability>
      </RequestParameters>
      <ResponseParameters special="1">
        <ArrayOfService xmlns:tds="http://www.onvif.org/ver10/device/wsdl" xmlns:tt="http://www.onvif.org/ver10/schema">
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/device/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/events/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/advancedsecurity/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
        </ArrayOfService>
      </ResponseParameters>
    </Step>
    <Step id="2">
      <Command>AdvancedSecurity10.GetAllKeys</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <ArrayOfKeyAttribute xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <KeyAttribute>
            <tas:KeyID>KeyID1</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
        </ArrayOfKeyAttribute>
      </ResponseParameters>
    </Step>
    <Step id="3">
      <Command>AdvancedSecurity10.GetServiceCapabilities</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <Capabilities xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <tas:KeystoreCapabilities MaximumNumberOfKeys="2" MaximumNumberOfCertificates="2" MaximumNumberOfCertificationPaths="2" RSAKeyPairGeneration="true" RSAKeyLengths="1 2" PKCS10ExternalCertificationWithRSA="true" SelfSignedCertificateCreationWithRSA="true" X509Versions="3 4 5">
            <tas:SignatureAlgorithms>
              <tas:algorithm>9</tas:algorithm>
              <!--Optional:-->
              <tas:parameters>AEIMQUYcgkosw048</tas:parameters>
              <!--Optional:-->
            </tas:SignatureAlgorithms>
          </tas:KeystoreCapabilities>
          <tas:TLSServerCapabilities TLSServerSupported="true" MaximumNumberOfTLSCertificationPaths="2" />
        </Capabilities>
      </ResponseParameters>
    </Step>
    <Step id="4">
      <Command>AdvancedSecurity10.CreateRSAKeyPair</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyLength>1</KeyLength>
      </RequestParameters>
      <ResponseParameters>
        <string>KeyID2</string>
      </ResponseParameters>
      <ResponseParametersAdditional>
        <EstimatedCreationTime>P0Y0M0DT0H0.1S</EstimatedCreationTime>
      </ResponseParametersAdditional>
    </Step>
    <Step id="5">
      <Command>AdvancedSecurity10.GetKeyStatus</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyID>KeyID1</KeyID>
      </RequestParameters>
      <ResponseParameters>
        <string>ok</string>
      </ResponseParameters>
    </Step>
    <Step id="6">
      <Command>AdvancedSecurity10.GetAllKeys</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <ArrayOfKeyAttribute xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <KeyAttribute>
            <tas:KeyID>KeyID1</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
          <KeyAttribute>
            <tas:KeyID>KeyID2</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
        </ArrayOfKeyAttribute>
      </ResponseParameters>
    </Step>
    <Step id="7">
      <Command>AdvancedSecurity10.DeleteKey</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyID>KeyID1</KeyID>
      </RequestParameters>
      <ResponseParameters>
      </ResponseParameters>
    </Step>
    <Step id="8">
      <Command>AdvancedSecurity10.GetAllKeys</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <ArrayOfKeyAttribute xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
         
        </ArrayOfKeyAttribute>
      </ResponseParameters>
    </Step>
  </Test>
<Test ID="TC.ADVANCED_SECURITY-1-1-6.20" ONVIFTestID="ADVANCED_SECURITY-1-1-6" Enabled="true">
    <TestName>Delete Key</TestName>
    <Name>DUT returns excess KeyID after key deletion</Name>
    <Description>
      GetAllKeys after key's deletion contains KeyID which wasn't presented in initial key list
    </Description>
    <ExpectedResult>
      <TestSummary>
        <![CDATA[ 
        ]]>
      </TestSummary>
    </ExpectedResult>
    
<Step id="1">
      <Command>Device10.GetServices</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <IncludeCapability>False</IncludeCapability>
      </RequestParameters>
      <ResponseParameters special="1">
        <ArrayOfService xmlns:tds="http://www.onvif.org/ver10/device/wsdl" xmlns:tt="http://www.onvif.org/ver10/schema">
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/device/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/events/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/advancedsecurity/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
        </ArrayOfService>
      </ResponseParameters>
    </Step>
    <Step id="2">
      <Command>AdvancedSecurity10.GetAllKeys</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <ArrayOfKeyAttribute xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <KeyAttribute>
            <tas:KeyID>KeyID1</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
        </ArrayOfKeyAttribute>
      </ResponseParameters>
    </Step>
    <Step id="3">
      <Command>AdvancedSecurity10.GetServiceCapabilities</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <Capabilities xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <tas:KeystoreCapabilities MaximumNumberOfKeys="2" MaximumNumberOfCertificates="2" MaximumNumberOfCertificationPaths="2" RSAKeyPairGeneration="true" RSAKeyLengths="1 2" PKCS10ExternalCertificationWithRSA="true" SelfSignedCertificateCreationWithRSA="true" X509Versions="3 4 5">
            <tas:SignatureAlgorithms>
              <tas:algorithm>9</tas:algorithm>
              <!--Optional:-->
              <tas:parameters>AEIMQUYcgkosw048</tas:parameters>
              <!--Optional:-->
            </tas:SignatureAlgorithms>
          </tas:KeystoreCapabilities>
          <tas:TLSServerCapabilities TLSServerSupported="true" MaximumNumberOfTLSCertificationPaths="2" />
        </Capabilities>
      </ResponseParameters>
    </Step>
    <Step id="4">
      <Command>AdvancedSecurity10.CreateRSAKeyPair</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyLength>1</KeyLength>
      </RequestParameters>
      <ResponseParameters>
        <string>KeyID2</string>
      </ResponseParameters>
      <ResponseParametersAdditional>
        <EstimatedCreationTime>P0Y0M0DT0H0.1S</EstimatedCreationTime>
      </ResponseParametersAdditional>
    </Step>
    <Step id="5">
      <Command>AdvancedSecurity10.GetKeyStatus</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyID>KeyID1</KeyID>
      </RequestParameters>
      <ResponseParameters>
        <string>ok</string>
      </ResponseParameters>
    </Step>
    <Step id="6">
      <Command>AdvancedSecurity10.GetAllKeys</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <ArrayOfKeyAttribute xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <KeyAttribute>
            <tas:KeyID>KeyID1</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
          <KeyAttribute>
            <tas:KeyID>KeyID2</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
        </ArrayOfKeyAttribute>
      </ResponseParameters>
    </Step>
    <Step id="7">
      <Command>AdvancedSecurity10.DeleteKey</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyID>KeyID1</KeyID>
      </RequestParameters>
      <ResponseParameters>
      </ResponseParameters>
    </Step>
    <Step id="8">
      <Command>AdvancedSecurity10.GetAllKeys</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <ArrayOfKeyAttribute xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <KeyAttribute>
            <tas:KeyID>KeyID1</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
        <KeyAttribute>
            <tas:KeyID>KeyID3</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
        </ArrayOfKeyAttribute>
      </ResponseParameters>
    </Step>
  </Test>
<Test ID="TC.ADVANCED_SECURITY-1-1-6.21" ONVIFTestID="ADVANCED_SECURITY-1-1-6" Enabled="true">
    <TestName>Delete Key</TestName>
    <Name>Not unique key ID</Name>
  During key pair creation DUT returns KeyID with not unique ID.
  DUT returns 2 keys with the same ID in key list after key's creation
    <Description>
    </Description>
    <ExpectedResult>
      <TestSummary>
        <![CDATA[
        ADVANCED_SECURITY-1-1-6 Delete Key

   STEP 1 - Get Advanced Security service address
      Transmit done
      Receive done
      http://localhost:17934/ServiceAdvancedSecurity10/AdvancedSecurityService.asmx
   STEP PASSED

   STEP 2 - Check that the DUT returned Advanced Security service address
   STEP PASSED

   STEP 3 - Get Keystore Client service address
      Transmit done
      Receive done
      http://localhost:17934/ServiceAdvancedSecurity10/AdvancedSecurityService.asmx
   STEP PASSED

   STEP 4 - Check that the DUT returned Keystore Client service address
   STEP PASSED

   STEP 5 - Check that Advance Security Service is accessible
   STEP PASSED

   STEP 6 - Get All Keys
      Transmit done
      Receive done
   STEP PASSED

   STEP 7 - Check that received key's IDs are unique
   STEP PASSED

   STEP 8 - Get Advanced Security Capabilities
      Transmit done
      Receive done
   STEP PASSED

   STEP 9 - Determine key length for test key pair
   STEP PASSED

   STEP 10 - Create RSA Key Pair of size '1' and without alias
      Transmit done
      Receive done
   STEP PASSED

   STEP 11 - Get Key Status
      Transmit done
      Receive done
   STEP PASSED

   STEP 12 - Check key status of key pair is 'ok'
   STEP PASSED

   STEP 13 - Get All Keys
      Transmit done
      Receive done
      'KeyID1' is already used as an ID.
   STEP FAILED

   STEP 14 - Delete RSA Key Pair with ID = 'KeyID1'
      Transmit done
      Receive done
   STEP PASSED

TEST FAILED
]]>
      </TestSummary>
    </ExpectedResult>
    <Step id="1">
      <Command>Device10.GetServices</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <IncludeCapability>False</IncludeCapability>
      </RequestParameters>
      <ResponseParameters special="1">
        <ArrayOfService xmlns:tds="http://www.onvif.org/ver10/device/wsdl" xmlns:tt="http://www.onvif.org/ver10/schema">
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/device/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/events/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/advancedsecurity/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
        </ArrayOfService>
      </ResponseParameters>
    </Step>
    <Step id="2">
      <Command>AdvancedSecurity10.GetAllKeys</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <ArrayOfKeyAttribute xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <KeyAttribute>
            <tas:KeyID>KeyID1</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
        <KeyAttribute>
            <tas:KeyID>KeyID2</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
        <KeyAttribute>
            <tas:KeyID>KeyID3</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
        </ArrayOfKeyAttribute>
      </ResponseParameters>
    </Step>
    <Step id="3">
      <Command>AdvancedSecurity10.GetServiceCapabilities</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <Capabilities xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <tas:KeystoreCapabilities MaximumNumberOfKeys="2" MaximumNumberOfCertificates="2" MaximumNumberOfCertificationPaths="2" RSAKeyPairGeneration="true" RSAKeyLengths="1 2" PKCS10ExternalCertificationWithRSA="true" SelfSignedCertificateCreationWithRSA="true" X509Versions="3 4 5">
            <tas:SignatureAlgorithms>
              <tas:algorithm>9</tas:algorithm>
              <!--Optional:-->
              <tas:parameters>AEIMQUYcgkosw048</tas:parameters>
              <!--Optional:-->
            </tas:SignatureAlgorithms>
          </tas:KeystoreCapabilities>
          <tas:TLSServerCapabilities TLSServerSupported="true" MaximumNumberOfTLSCertificationPaths="2" />
        </Capabilities>
      </ResponseParameters>
    </Step>
    <Step id="4">
      <Command>AdvancedSecurity10.CreateRSAKeyPair</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyLength>1</KeyLength>
      </RequestParameters>
      <ResponseParameters>
        <string>KeyID1</string>
      </ResponseParameters>
      <ResponseParametersAdditional>
        <EstimatedCreationTime>P0Y0M0DT0H02S</EstimatedCreationTime>
      </ResponseParametersAdditional>
    </Step>
    <Step id="5">
      <Command>AdvancedSecurity10.GetKeyStatus</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyID>KeyID1</KeyID>
      </RequestParameters>
      <ResponseParameters>
        <string>ok</string>
      </ResponseParameters>
    </Step>
    <Step id="6">
      <Command>AdvancedSecurity10.GetAllKeys</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <ArrayOfKeyAttribute xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <KeyAttribute>
            <tas:KeyID>KeyID1</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
          <KeyAttribute>
            <tas:KeyID>KeyID2</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
        <KeyAttribute>
            <tas:KeyID>KeyID3</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
          <KeyAttribute>
            <tas:KeyID>KeyID1</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
        </ArrayOfKeyAttribute>
      </ResponseParameters>
    </Step>
    <Step id="7">
      <Command>AdvancedSecurity10.DeleteKey</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyID>KeyID1</KeyID>
      </RequestParameters>
      <ResponseParameters>
      </ResponseParameters>
    </Step>
    <Step id="8">
      <Command>AdvancedSecurity10.GetAllKeys</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <KeyLength>1</KeyLength>
      </RequestParameters>
      <ResponseParameters>
        <ArrayOfKeyAttribute xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <KeyAttribute>
            <tas:KeyID>KeyID1</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
        <KeyAttribute>
            <tas:KeyID>KeyID2</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
          <KeyAttribute>
            <tas:KeyID>KeyID3</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
        </ArrayOfKeyAttribute>
      </ResponseParameters>
    </Step>
  </Test>
  <Test ID="TC.ADVANCED_SECURITY-1-1-6.22" ONVIFTestID="ADVANCED_SECURITY-1-1-6" Enabled="true">
    <TestName>Delete Key</TestName>
    <Name>MaximumNumberOfKeysReached fault to CreateRSAKeyPair request</Name>
    <Description>
    </Description>
    <ExpectedResult>
      <TestSummary>
      </TestSummary>
    </ExpectedResult>
    <Step id="1">
      <Command>Device10.GetServices</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <IncludeCapability>False</IncludeCapability>
      </RequestParameters>
      <ResponseParameters special="1">
        <ArrayOfService xmlns:tds="http://www.onvif.org/ver10/device/wsdl" xmlns:tt="http://www.onvif.org/ver10/schema">
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/device/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/events/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
          <Service>
            <tds:Namespace>http://www.onvif.org/ver10/advancedsecurity/wsdl</tds:Namespace>
            <tds:XAddr>http://localhost/onvif/ServiceDevice10/DeviceServiceFake.asmx </tds:XAddr>
            <tds:Version>
              <tt:Major>2</tt:Major>
              <tt:Minor>1</tt:Minor>
            </tds:Version>
          </Service>
        </ArrayOfService>
      </ResponseParameters>
    </Step>
    <Step id="2">
      <Command>AdvancedSecurity10.GetAllKeys</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <ArrayOfKeyAttribute xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <KeyAttribute>
            <tas:KeyID>T123</tas:KeyID>
            <tas:hasPrivateKey>true</tas:hasPrivateKey>
            <tas:KeyStatus>ok</tas:KeyStatus>
          </KeyAttribute>
        </ArrayOfKeyAttribute>
      </ResponseParameters>
    </Step>
    <Step id="3">
      <Command>AdvancedSecurity10.GetServiceCapabilities</Command>
      <Response>Normal</Response>
      <RequestParameters>
      </RequestParameters>
      <ResponseParameters>
        <Capabilities xmlns:tas="http://www.onvif.org/ver10/advancedsecurity/wsdl">
          <tas:KeystoreCapabilities MaximumNumberOfKeys="2" MaximumNumberOfCertificates="2" MaximumNumberOfCertificationPaths="2" RSAKeyPairGeneration="true" RSAKeyLengths="1 2" PKCS10ExternalCertificationWithRSA="true" SelfSignedCertificateCreationWithRSA="true" X509Versions="3 4 5">
            <tas:SignatureAlgorithms>
              <tas:algorithm>9</tas:algorithm>
              <!--Optional:-->
              <tas:parameters>AEIMQUYcgkosw048</tas:parameters>
              <!--Optional:-->
            </tas:SignatureAlgorithms>
          </tas:KeystoreCapabilities>
          <tas:TLSServerCapabilities TLSServerSupported="true" MaximumNumberOfTLSCertificationPaths="2" />
        </Capabilities>
      </ResponseParameters>
    </Step>
    <Step id="4">
      <Command>AdvancedSecurity10.CreateRSAKeyPair</Command>
      <Response>Fault</Response>
      <Code>Receiver</Code>
      <Subcode>Action</Subcode>
      <Subcode>MaximumNumberOfKeysReached</Subcode>
      <RequestParameters>
        <KeyLength>1</KeyLength>
      </RequestParameters>
      <ResponseParameters>
        <string>KeyID1</string>
      </ResponseParameters>
      <ResponseParametersAdditional>
        <EstimatedCreationTime>P0Y0M0DT0H02S</EstimatedCreationTime>
      </ResponseParametersAdditional>
    </Step>

  </Test>  


</TestSuit>