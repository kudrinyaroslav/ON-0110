<?xml version="1.0" encoding="utf-8"?>
<TestSuit Name="Device Managment" Version="0.1">
  <Parameters>
    <TimeOut>100000</TimeOut>
    <Name>6.2.24 NVT SET NETWORK PROTOCOLS CONFIGURATION - UNSUPPORTED PROTOCOLS</Name>
    <Description>

    </Description>
  </Parameters>
  <Test ID = "TC.DM.NET.6_2_24.01" ONVIFTestID="6.2.24" Enabled="true">
    <TestName>NVT SET NETWORK PROTOCOLS CONFIGURATION - UNSUPPORTED PROTOCOLS</TestName>
    <Name>Correct response: unsupported protocol exist</Name>
    <Description>
      Check NVT SET NETWORK PROTOCOLS CONFIGURATION - UNSUPPORTED PROTOCOLS test
      when DUT return correct response (unsupported protocol exist).
    </Description>
    <ExpectedResult>
      <TestSummary>
        DEVICE-2-1-24 SET NETWORK PROTOCOLS CONFIGURATION - UNSUPPORTED PROTOCOLS

        STEP 1 - Get capabilities
        Transmit done
        Receive done
        STEP PASSED

        STEP 2 - Check that DUT returned capabilities
        STEP PASSED

        STEP 3 - Check that DUT returned device capabilities
        STEP PASSED

        STEP 4 - Set Network Protocols - negative test
        Transmit done
        Receive done
        SOAP fault returned
        Code: Sender
        Subcode: InvalidArgVal
        Subcode: ServiceNotSupported
        Reason: System.Web.Services.Protocols.SoapException: MESSAGE
        at DUT.CameraWebService.Device10.DeviceServiceFake.StepTypeProcessing(StepType stepType, SoapException ex, Int32 timeOut) in D:\!ONVIF\DUT\Version2\DUT\CameraWebService\ServiceDevice10\DeviceServiceFake.asmx.cs:line 61
        at DUT.CameraWebService.Device10.DeviceServiceFake.SetNetworkProtocols(NetworkProtocol[] NetworkProtocols) in D:\!ONVIF\DUT\Version2\DUT\CameraWebService\ServiceDevice10\DeviceServiceFake.asmx.cs:line 580
        STEP PASSED

        STEP 5 - Get Network Protocols
        Transmit done
        Receive done
        STEP PASSED

        STEP 6 - Check if HTTPS is not present in the list
        STEP PASSED

        TEST PASSED

      </TestSummary>
    </ExpectedResult> 
    <Step id ="1">
      <Command>Device10.GetCapabilities</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <Category>Device</Category>
      </RequestParameters>
      <ResponseParameters>
        <Capabilities xmlns:tt="http://www.onvif.org/ver10/schema">
          <tt:Device>
            <tt:XAddr>http://CAMERA_IP/onvif/device_service</tt:XAddr>
            <tt:Network>
              <tt:IPFilter>false</tt:IPFilter>
              <tt:ZeroConfiguration>false</tt:ZeroConfiguration>
              <tt:IPVersion6>false</tt:IPVersion6>
              <tt:DynDNS>true</tt:DynDNS>
            </tt:Network>
            <tt:System>
              <tt:DiscoveryResolve>true</tt:DiscoveryResolve>
              <tt:DiscoveryBye>true</tt:DiscoveryBye>
              <tt:RemoteDiscovery>false</tt:RemoteDiscovery>
              <tt:SystemBackup>false</tt:SystemBackup>
              <tt:SystemLogging>true</tt:SystemLogging>
              <tt:FirmwareUpgrade>false</tt:FirmwareUpgrade>
              <tt:SupportedVersions>
                <tt:Major>1</tt:Major>
                <tt:Minor>1</tt:Minor>
              </tt:SupportedVersions>
            </tt:System>
            <tt:IO>
              <tt:InputConnectors>0</tt:InputConnectors>
              <tt:RelayOutputs>0</tt:RelayOutputs>
            </tt:IO>
            <tt:Security>
              <tt:TLS1.1>false</tt:TLS1.1>
              <tt:TLS1.2>false</tt:TLS1.2>
              <tt:OnboardKeyGeneration>false</tt:OnboardKeyGeneration>
              <tt:AccessPolicyConfig>false</tt:AccessPolicyConfig>
              <tt:X.509Token>false</tt:X.509Token>
              <tt:SAMLToken>false</tt:SAMLToken>
              <tt:KerberosToken>false</tt:KerberosToken>
              <tt:RELToken>false</tt:RELToken>
            </tt:Security>
          </tt:Device>
        </Capabilities>
      </ResponseParameters>
    </Step>
    <Step id ="2">
      <Command>SetNetworkProtocols</Command>
      <Response>Fault</Response>
      <Code>Sender</Code>
      <Subcode>InvalidArgVal</Subcode>
      <Subcode>ServiceNotSupported</Subcode>
      <RequestParameters>
        <NetworkProtocol>
          <Name>HTTPS</Name>
          <Enabled>true</Enabled>
          <Port>10554</Port>
        </NetworkProtocol>
      </RequestParameters>
    </Step>
    <Step id ="3">
      <Command>GetNetworkProtocols</Command>
      <Response>Normal</Response>
      <ResponseParameters>
        <ArrayOfNetworkProtocol>
          <NetworkProtocol xmlns:tt="http://www.onvif.org/ver10/schema">
            <tt:Name>HTTP</tt:Name>
            <tt:Enabled>true</tt:Enabled>
            <tt:Port>80</tt:Port>
            <tt:Port>0</tt:Port>
          </NetworkProtocol>
          <NetworkProtocol xmlns:tt="http://www.onvif.org/ver10/schema">
            <tt:Name>RTSP</tt:Name>
            <tt:Enabled>true</tt:Enabled>
            <tt:Port>10554</tt:Port>
          </NetworkProtocol>
        </ArrayOfNetworkProtocol>
      </ResponseParameters>
    </Step>
  </Test>
  <Test ID = "TC.DM.NET.6_2_24.02" ONVIFTestID="6.2.24" Enabled="true">
    <TestName>NVT SET NETWORK PROTOCOLS CONFIGURATION - UNSUPPORTED PROTOCOLS</TestName>
    <Name>Correct response: no unsupported protocol exist: TLS1.1</Name>
    <Description>
      Check NVT SET NETWORK PROTOCOLS CONFIGURATION - UNSUPPORTED PROTOCOLS test
      when DUT return correct response (no unsupported protocol exist: TLS1.1).
    </Description>
    <ExpectedResult>
      <TestSummary>
        DEVICE-2-1-24 SET NETWORK PROTOCOLS CONFIGURATION - UNSUPPORTED PROTOCOLS

        STEP 1 - Get capabilities
        Transmit done
        Receive done
        STEP PASSED

        STEP 2 - Check that DUT returned capabilities
        STEP PASSED

        STEP 3 - Check that DUT returned device capabilities
        STEP PASSED

        HTTPS supported, skip the test
        TEST PASSED

      </TestSummary>
    </ExpectedResult>
    <Step id ="1">
      <Command>Device10.GetCapabilities</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <Category>Device</Category>
      </RequestParameters>
      <ResponseParameters>
        <Capabilities xmlns:tt="http://www.onvif.org/ver10/schema">
          <tt:Device>
            <tt:XAddr>http://CAMERA_IP/onvif/device_service</tt:XAddr>
            <tt:Network>
              <tt:IPFilter>false</tt:IPFilter>
              <tt:ZeroConfiguration>false</tt:ZeroConfiguration>
              <tt:IPVersion6>false</tt:IPVersion6>
              <tt:DynDNS>true</tt:DynDNS>
            </tt:Network>
            <tt:System>
              <tt:DiscoveryResolve>true</tt:DiscoveryResolve>
              <tt:DiscoveryBye>true</tt:DiscoveryBye>
              <tt:RemoteDiscovery>false</tt:RemoteDiscovery>
              <tt:SystemBackup>false</tt:SystemBackup>
              <tt:SystemLogging>true</tt:SystemLogging>
              <tt:FirmwareUpgrade>false</tt:FirmwareUpgrade>
              <tt:SupportedVersions>
                <tt:Major>1</tt:Major>
                <tt:Minor>1</tt:Minor>
              </tt:SupportedVersions>
            </tt:System>
            <tt:IO>
              <tt:InputConnectors>0</tt:InputConnectors>
              <tt:RelayOutputs>0</tt:RelayOutputs>
            </tt:IO>
            <tt:Security>
              <tt:TLS1.1>true</tt:TLS1.1>
              <tt:TLS1.2>false</tt:TLS1.2>
              <tt:OnboardKeyGeneration>false</tt:OnboardKeyGeneration>
              <tt:AccessPolicyConfig>false</tt:AccessPolicyConfig>
              <tt:X.509Token>false</tt:X.509Token>
              <tt:SAMLToken>false</tt:SAMLToken>
              <tt:KerberosToken>false</tt:KerberosToken>
              <tt:RELToken>false</tt:RELToken>
            </tt:Security>
          </tt:Device>
        </Capabilities>
      </ResponseParameters>
    </Step>
  </Test>
  <Test ID = "TC.DM.NET.6_2_24.03" ONVIFTestID="6.2.24" Enabled="true">
    <TestName>NVT SET NETWORK PROTOCOLS CONFIGURATION - UNSUPPORTED PROTOCOLS</TestName>
    <Name>Correct response: no unsupported protocol exist: TLS1.2</Name>
    <Description>
      Check NVT SET NETWORK PROTOCOLS CONFIGURATION - UNSUPPORTED PROTOCOLS test
      when DUT return correct response (no unsupported protocol exist: TLS1.2).
    </Description>
    <ExpectedResult>
      <TestSummary>
        DEVICE-2-1-24 SET NETWORK PROTOCOLS CONFIGURATION - UNSUPPORTED PROTOCOLS

        STEP 1 - Get capabilities
        Transmit done
        Receive done
        STEP PASSED

        STEP 2 - Check that DUT returned capabilities
        STEP PASSED

        STEP 3 - Check that DUT returned device capabilities
        STEP PASSED

        HTTPS supported, skip the test
        TEST PASSED

      </TestSummary>
    </ExpectedResult>
    <Step id ="1">
      <Command>Device10.GetCapabilities</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <Category>Device</Category>
      </RequestParameters>
      <ResponseParameters>
        <Capabilities xmlns:tt="http://www.onvif.org/ver10/schema">
          <tt:Device>
            <tt:XAddr>http://CAMERA_IP/onvif/device_service</tt:XAddr>
            <tt:Network>
              <tt:IPFilter>false</tt:IPFilter>
              <tt:ZeroConfiguration>false</tt:ZeroConfiguration>
              <tt:IPVersion6>false</tt:IPVersion6>
              <tt:DynDNS>true</tt:DynDNS>
            </tt:Network>
            <tt:System>
              <tt:DiscoveryResolve>true</tt:DiscoveryResolve>
              <tt:DiscoveryBye>true</tt:DiscoveryBye>
              <tt:RemoteDiscovery>false</tt:RemoteDiscovery>
              <tt:SystemBackup>false</tt:SystemBackup>
              <tt:SystemLogging>true</tt:SystemLogging>
              <tt:FirmwareUpgrade>false</tt:FirmwareUpgrade>
              <tt:SupportedVersions>
                <tt:Major>1</tt:Major>
                <tt:Minor>1</tt:Minor>
              </tt:SupportedVersions>
            </tt:System>
            <tt:IO>
              <tt:InputConnectors>0</tt:InputConnectors>
              <tt:RelayOutputs>0</tt:RelayOutputs>
            </tt:IO>
            <tt:Security>
              <tt:TLS1.1>false</tt:TLS1.1>
              <tt:TLS1.2>true</tt:TLS1.2>
              <tt:OnboardKeyGeneration>false</tt:OnboardKeyGeneration>
              <tt:AccessPolicyConfig>false</tt:AccessPolicyConfig>
              <tt:X.509Token>false</tt:X.509Token>
              <tt:SAMLToken>false</tt:SAMLToken>
              <tt:KerberosToken>false</tt:KerberosToken>
              <tt:RELToken>false</tt:RELToken>
            </tt:Security>
          </tt:Device>
        </Capabilities>
      </ResponseParameters>
    </Step>
  </Test>
  <Test ID = "TC.DM.NET.6_2_24.04" ONVIFTestID="6.2.24" Enabled="true">
    <TestName>NVT SET NETWORK PROTOCOLS CONFIGURATION - UNSUPPORTED PROTOCOLS</TestName>
    <Name>Wrong response: unsupported protocol exist: HTTPS in Get response</Name>
    <Description>
      Check NVT SET NETWORK PROTOCOLS CONFIGURATION - UNSUPPORTED PROTOCOLS test
      when DUT return wrong response (unsupported protocol exist: HTTPS in Get response).
    </Description>
    <ExpectedResult>
      <TestSummary>
        DEVICE-2-1-24 SET NETWORK PROTOCOLS CONFIGURATION - UNSUPPORTED PROTOCOLS

        STEP 1 - Get capabilities
        Transmit done
        Receive done
        STEP PASSED

        STEP 2 - Check that DUT returned capabilities
        STEP PASSED

        STEP 3 - Check that DUT returned device capabilities
        STEP PASSED

        STEP 4 - Set Network Protocols - negative test
        Transmit done
        Receive done
        SOAP fault returned
        Code: Sender
        Subcode: InvalidArgVal
        Subcode: ServiceNotSupported
        Reason: System.Web.Services.Protocols.SoapException: MESSAGE
        at DUT.CameraWebService.Device10.DeviceServiceFake.StepTypeProcessing(StepType stepType, SoapException ex, Int32 timeOut) in D:\!ONVIF\DUT\Version2\DUT\CameraWebService\ServiceDevice10\DeviceServiceFake.asmx.cs:line 61
        at DUT.CameraWebService.Device10.DeviceServiceFake.SetNetworkProtocols(NetworkProtocol[] NetworkProtocols) in D:\!ONVIF\DUT\Version2\DUT\CameraWebService\ServiceDevice10\DeviceServiceFake.asmx.cs:line 580
        STEP PASSED

        STEP 5 - Get Network Protocols
        Transmit done
        Receive done
        STEP PASSED

        STEP 6 - Check if HTTPS is not present in the list
        Unsupported HTTPS protocol found
        STEP FAILED

        TEST FAILED
      </TestSummary>
    </ExpectedResult>
    <Step id ="1">
      <Command>Device10.GetCapabilities</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <Category>Device</Category>
      </RequestParameters>
      <ResponseParameters>
        <Capabilities xmlns:tt="http://www.onvif.org/ver10/schema">
          <tt:Device>
            <tt:XAddr>http://CAMERA_IP/onvif/device_service</tt:XAddr>
            <tt:Network>
              <tt:IPFilter>false</tt:IPFilter>
              <tt:ZeroConfiguration>false</tt:ZeroConfiguration>
              <tt:IPVersion6>false</tt:IPVersion6>
              <tt:DynDNS>true</tt:DynDNS>
            </tt:Network>
            <tt:System>
              <tt:DiscoveryResolve>true</tt:DiscoveryResolve>
              <tt:DiscoveryBye>true</tt:DiscoveryBye>
              <tt:RemoteDiscovery>false</tt:RemoteDiscovery>
              <tt:SystemBackup>false</tt:SystemBackup>
              <tt:SystemLogging>true</tt:SystemLogging>
              <tt:FirmwareUpgrade>false</tt:FirmwareUpgrade>
              <tt:SupportedVersions>
                <tt:Major>1</tt:Major>
                <tt:Minor>1</tt:Minor>
              </tt:SupportedVersions>
            </tt:System>
            <tt:IO>
              <tt:InputConnectors>0</tt:InputConnectors>
              <tt:RelayOutputs>0</tt:RelayOutputs>
            </tt:IO>
            <tt:Security>
              <tt:TLS1.1>false</tt:TLS1.1>
              <tt:TLS1.2>false</tt:TLS1.2>
              <tt:OnboardKeyGeneration>false</tt:OnboardKeyGeneration>
              <tt:AccessPolicyConfig>false</tt:AccessPolicyConfig>
              <tt:X.509Token>false</tt:X.509Token>
              <tt:SAMLToken>false</tt:SAMLToken>
              <tt:KerberosToken>false</tt:KerberosToken>
              <tt:RELToken>false</tt:RELToken>
            </tt:Security>
          </tt:Device>
        </Capabilities>
      </ResponseParameters>
    </Step>
    <Step id ="2">
      <Command>SetNetworkProtocols</Command>
      <Response>Fault</Response>
      <Code>Sender</Code>
      <Subcode>InvalidArgVal</Subcode>
      <Subcode>ServiceNotSupported</Subcode>
      <RequestParameters>
        <NetworkProtocol>
          <Name>HTTPS</Name>
          <Enabled>true</Enabled>
          <Port>10554</Port>
        </NetworkProtocol>
      </RequestParameters>
    </Step>
    <Step id ="3">
      <Command>GetNetworkProtocols</Command>
      <Response>Normal</Response>
      <ResponseParameters>
        <ArrayOfNetworkProtocol>
          <NetworkProtocol xmlns:tt="http://www.onvif.org/ver10/schema">
            <tt:Name>HTTP</tt:Name>
            <tt:Enabled>true</tt:Enabled>
            <tt:Port>80</tt:Port>
            <tt:Port>0</tt:Port>
          </NetworkProtocol>
          <NetworkProtocol xmlns:tt="http://www.onvif.org/ver10/schema">
            <tt:Name>HTTPS</tt:Name>
            <tt:Enabled>true</tt:Enabled>
            <tt:Port>10554</tt:Port>
          </NetworkProtocol>
          <NetworkProtocol xmlns:tt="http://www.onvif.org/ver10/schema">
            <tt:Name>RTSP</tt:Name>
            <tt:Enabled>true</tt:Enabled>
            <tt:Port>10554</tt:Port>
          </NetworkProtocol>
        </ArrayOfNetworkProtocol>
      </ResponseParameters>
    </Step>
  </Test>
  <Test ID = "TC.DM.NET.6_2_24.05" ONVIFTestID="6.2.24" Enabled="true">
    <TestName>NVT SET NETWORK PROTOCOLS CONFIGURATION - UNSUPPORTED PROTOCOLS</TestName>
    <Name>No response on first request</Name>
    <Description>
      Check NVT SET NETWORK PROTOCOLS CONFIGURATION - UNSUPPORTED PROTOCOLS test
      when DUT return no response on first request.
    </Description>
    <ExpectedResult>
      <TestSummary>
        DEVICE-2-1-24 SET NETWORK PROTOCOLS CONFIGURATION - UNSUPPORTED PROTOCOLS

        STEP 1 - Get capabilities
        Transmit done
        The HTTP request has exceeded the allotted timeout
        STEP FAILED

        TEST FAILED

      </TestSummary>
    </ExpectedResult>
    <Step id ="1">
      <Command>Device10.GetCapabilities</Command>
      <Response>NoResponse</Response>
      <RequestParameters>
        <Category>Device</Category>
      </RequestParameters>
    </Step>
  </Test>
  <Test ID = "TC.DM.NET.6_2_24.06" ONVIFTestID="6.2.24" Enabled="true">
    <TestName>NVT SET NETWORK PROTOCOLS CONFIGURATION - UNSUPPORTED PROTOCOLS</TestName>
    <Name>Fault on first request</Name>
    <Description>
      Check NVT SET NETWORK PROTOCOLS CONFIGURATION - UNSUPPORTED PROTOCOLS test
      when DUT return no response on first request.
    </Description>
    <ExpectedResult>
      <TestSummary>
        DEVICE-2-1-24 SET NETWORK PROTOCOLS CONFIGURATION - UNSUPPORTED PROTOCOLS

        STEP 1 - Get capabilities
        Transmit done
        Receive done
        SOAP fault returned
        Code: Receiver
        Subcode: ActionNotSupported
        Subcode: NoSuchService
        Reason: System.Web.Services.Protocols.SoapException: MESSAGE
        at DUT.CameraWebService.Device10.DeviceServiceFake.StepTypeProcessing(StepType stepType, SoapException ex, Int32 timeOut) in D:\!ONVIF\DUT\Version2\DUT\CameraWebService\ServiceDevice10\DeviceServiceFake.asmx.cs:line 61
        at DUT.CameraWebService.Device10.DeviceServiceFake.GetCapabilities(CapabilityCategory[] Category) in D:\!ONVIF\DUT\Version2\DUT\CameraWebService\ServiceDevice10\DeviceServiceFake.asmx.cs:line 426
        STEP FAILED

        TEST FAILED

      </TestSummary>
    </ExpectedResult>
    <Step id ="1">
      <Command>Device10.GetCapabilities</Command>
      <Response>Fault</Response>
      <Code>Receiver</Code>
      <Subcode>ActionNotSupported</Subcode>
      <Subcode>NoSuchService</Subcode>
      <RequestParameters>
        <Category>Device</Category>
      </RequestParameters>
    </Step>
  </Test>
  <Test ID = "TC.DM.NET.6_2_24.07" ONVIFTestID="6.2.24" Enabled="true">
    <TestName>NVT SET NETWORK PROTOCOLS CONFIGURATION - UNSUPPORTED PROTOCOLS</TestName>
    <Name>No response on second request</Name>
    <Description>
      Check NVT SET NETWORK PROTOCOLS CONFIGURATION - UNSUPPORTED PROTOCOLS test
      when DUT return no response on second request.
    </Description>
    <ExpectedResult>
      <TestSummary>
        DEVICE-2-1-24 SET NETWORK PROTOCOLS CONFIGURATION - UNSUPPORTED PROTOCOLS

        STEP 1 - Get capabilities
        Transmit done
        Receive done
        STEP PASSED

        STEP 2 - Check that DUT returned capabilities
        STEP PASSED

        STEP 3 - Check that DUT returned device capabilities
        STEP PASSED

        STEP 4 - Set Network Protocols - negative test
        Transmit done
        The HTTP request has exceeded the allotted timeout
        STEP FAILED

        TEST FAILED

      </TestSummary>
    </ExpectedResult>
    <Step id ="1">
      <Command>Device10.GetCapabilities</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <Category>Device</Category>
      </RequestParameters>
      <ResponseParameters>
        <Capabilities xmlns:tt="http://www.onvif.org/ver10/schema">
          <tt:Device>
            <tt:XAddr>http://CAMERA_IP/onvif/device_service</tt:XAddr>
            <tt:Network>
              <tt:IPFilter>false</tt:IPFilter>
              <tt:ZeroConfiguration>false</tt:ZeroConfiguration>
              <tt:IPVersion6>false</tt:IPVersion6>
              <tt:DynDNS>true</tt:DynDNS>
            </tt:Network>
            <tt:System>
              <tt:DiscoveryResolve>true</tt:DiscoveryResolve>
              <tt:DiscoveryBye>true</tt:DiscoveryBye>
              <tt:RemoteDiscovery>false</tt:RemoteDiscovery>
              <tt:SystemBackup>false</tt:SystemBackup>
              <tt:SystemLogging>true</tt:SystemLogging>
              <tt:FirmwareUpgrade>false</tt:FirmwareUpgrade>
              <tt:SupportedVersions>
                <tt:Major>1</tt:Major>
                <tt:Minor>1</tt:Minor>
              </tt:SupportedVersions>
            </tt:System>
            <tt:IO>
              <tt:InputConnectors>0</tt:InputConnectors>
              <tt:RelayOutputs>0</tt:RelayOutputs>
            </tt:IO>
            <tt:Security>
              <tt:TLS1.1>false</tt:TLS1.1>
              <tt:TLS1.2>false</tt:TLS1.2>
              <tt:OnboardKeyGeneration>false</tt:OnboardKeyGeneration>
              <tt:AccessPolicyConfig>false</tt:AccessPolicyConfig>
              <tt:X.509Token>false</tt:X.509Token>
              <tt:SAMLToken>false</tt:SAMLToken>
              <tt:KerberosToken>false</tt:KerberosToken>
              <tt:RELToken>false</tt:RELToken>
            </tt:Security>
          </tt:Device>
        </Capabilities>
      </ResponseParameters>
    </Step>
    <Step id ="2">
      <Command>SetNetworkProtocols</Command>
      <Response>NoResponse</Response>
      <RequestParameters>
        <NetworkProtocol>
          <Name>HTTPS</Name>
          <Enabled>true</Enabled>
          <Port>10554</Port>
        </NetworkProtocol>
      </RequestParameters>
    </Step>
  </Test>
  <Test ID = "TC.DM.NET.6_2_24.08" ONVIFTestID="6.2.24" Enabled="true">
    <TestName>NVT SET NETWORK PROTOCOLS CONFIGURATION - UNSUPPORTED PROTOCOLS</TestName>
    <Name>No response on third request</Name>
    <Description>
      Check NVT SET NETWORK PROTOCOLS CONFIGURATION - UNSUPPORTED PROTOCOLS test
      when DUT return no response on third request.
    </Description>
    <ExpectedResult>
      <TestSummary>
        DEVICE-2-1-24 SET NETWORK PROTOCOLS CONFIGURATION - UNSUPPORTED PROTOCOLS

        STEP 1 - Get capabilities
        Transmit done
        Receive done
        STEP PASSED

        STEP 2 - Check that DUT returned capabilities
        STEP PASSED

        STEP 3 - Check that DUT returned device capabilities
        STEP PASSED

        STEP 4 - Set Network Protocols - negative test
        Transmit done
        Receive done
        SOAP fault returned
        Code: Sender
        Subcode: InvalidArgVal
        Subcode: ServiceNotSupported
        Reason: System.Web.Services.Protocols.SoapException: MESSAGE
        at DUT.CameraWebService.Device10.DeviceServiceFake.StepTypeProcessing(StepType stepType, SoapException ex, Int32 timeOut) in D:\!ONVIF\DUT\Version2\DUT\CameraWebService\ServiceDevice10\DeviceServiceFake.asmx.cs:line 61
        at DUT.CameraWebService.Device10.DeviceServiceFake.SetNetworkProtocols(NetworkProtocol[] NetworkProtocols) in D:\!ONVIF\DUT\Version2\DUT\CameraWebService\ServiceDevice10\DeviceServiceFake.asmx.cs:line 580
        STEP PASSED

        STEP 5 - Get Network Protocols
        Transmit done
        The HTTP request has exceeded the allotted timeout
        STEP FAILED

        TEST FAILED

      </TestSummary>
    </ExpectedResult>
    <Step id ="1">
      <Command>Device10.GetCapabilities</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <Category>Device</Category>
      </RequestParameters>
      <ResponseParameters>
        <Capabilities xmlns:tt="http://www.onvif.org/ver10/schema">
          <tt:Device>
            <tt:XAddr>http://CAMERA_IP/onvif/device_service</tt:XAddr>
            <tt:Network>
              <tt:IPFilter>false</tt:IPFilter>
              <tt:ZeroConfiguration>false</tt:ZeroConfiguration>
              <tt:IPVersion6>false</tt:IPVersion6>
              <tt:DynDNS>true</tt:DynDNS>
            </tt:Network>
            <tt:System>
              <tt:DiscoveryResolve>true</tt:DiscoveryResolve>
              <tt:DiscoveryBye>true</tt:DiscoveryBye>
              <tt:RemoteDiscovery>false</tt:RemoteDiscovery>
              <tt:SystemBackup>false</tt:SystemBackup>
              <tt:SystemLogging>true</tt:SystemLogging>
              <tt:FirmwareUpgrade>false</tt:FirmwareUpgrade>
              <tt:SupportedVersions>
                <tt:Major>1</tt:Major>
                <tt:Minor>1</tt:Minor>
              </tt:SupportedVersions>
            </tt:System>
            <tt:IO>
              <tt:InputConnectors>0</tt:InputConnectors>
              <tt:RelayOutputs>0</tt:RelayOutputs>
            </tt:IO>
            <tt:Security>
              <tt:TLS1.1>false</tt:TLS1.1>
              <tt:TLS1.2>false</tt:TLS1.2>
              <tt:OnboardKeyGeneration>false</tt:OnboardKeyGeneration>
              <tt:AccessPolicyConfig>false</tt:AccessPolicyConfig>
              <tt:X.509Token>false</tt:X.509Token>
              <tt:SAMLToken>false</tt:SAMLToken>
              <tt:KerberosToken>false</tt:KerberosToken>
              <tt:RELToken>false</tt:RELToken>
            </tt:Security>
          </tt:Device>
        </Capabilities>
      </ResponseParameters>
    </Step>
    <Step id ="2">
      <Command>SetNetworkProtocols</Command>
      <Response>Fault</Response>
      <Code>Sender</Code>
      <Subcode>InvalidArgVal</Subcode>
      <Subcode>ServiceNotSupported</Subcode>
      <RequestParameters>
        <NetworkProtocol>
          <Name>HTTPS</Name>
          <Enabled>true</Enabled>
          <Port>10554</Port>
        </NetworkProtocol>
      </RequestParameters>
    </Step>
    <Step id ="3">
      <Command>GetNetworkProtocols</Command>
      <Response>NoResponse</Response>
    </Step>
  </Test>
  <Test ID = "TC.DM.NET.6_2_24.09" ONVIFTestID="6.2.24" Enabled="true">
    <TestName>NVT SET NETWORK PROTOCOLS CONFIGURATION - UNSUPPORTED PROTOCOLS</TestName>
    <Name>Fault on third request</Name>
    <Description>
      Check NVT SET NETWORK PROTOCOLS CONFIGURATION - UNSUPPORTED PROTOCOLS test
      when DUT return fault on third request.
    </Description>
    <ExpectedResult>
      <TestSummary>
        DEVICE-2-1-24 SET NETWORK PROTOCOLS CONFIGURATION - UNSUPPORTED PROTOCOLS

        STEP 1 - Get capabilities
        Transmit done
        Receive done
        STEP PASSED

        STEP 2 - Check that DUT returned capabilities
        STEP PASSED

        STEP 3 - Check that DUT returned device capabilities
        STEP PASSED

        STEP 4 - Set Network Protocols - negative test
        Transmit done
        Receive done
        SOAP fault returned
        Code: Sender
        Subcode: InvalidArgVal
        Subcode: ServiceNotSupported
        Reason: System.Web.Services.Protocols.SoapException: MESSAGE
        at DUT.CameraWebService.Device10.DeviceServiceFake.StepTypeProcessing(StepType stepType, SoapException ex, Int32 timeOut) in D:\!ONVIF\DUT\Version2\DUT\CameraWebService\ServiceDevice10\DeviceServiceFake.asmx.cs:line 61
        at DUT.CameraWebService.Device10.DeviceServiceFake.SetNetworkProtocols(NetworkProtocol[] NetworkProtocols) in D:\!ONVIF\DUT\Version2\DUT\CameraWebService\ServiceDevice10\DeviceServiceFake.asmx.cs:line 580
        STEP PASSED

        STEP 5 - Get Network Protocols
        Transmit done
        Receive done
        SOAP fault returned
        Code: Receiver
        Subcode: ActionNotSupported
        Subcode: NoSuchService
        Reason: System.Web.Services.Protocols.SoapException: MESSAGE
        at DUT.CameraWebService.Device10.DeviceServiceFake.StepTypeProcessing(StepType stepType, SoapException ex, Int32 timeOut) in D:\!ONVIF\DUT\Version2\DUT\CameraWebService\ServiceDevice10\DeviceServiceFake.asmx.cs:line 61
        at DUT.CameraWebService.Device10.DeviceServiceFake.GetNetworkProtocols() in D:\!ONVIF\DUT\Version2\DUT\CameraWebService\ServiceDevice10\DeviceServiceFake.asmx.cs:line 566
        STEP FAILED

        TEST FAILED
      </TestSummary>
    </ExpectedResult>
    <Step id ="1">
      <Command>Device10.GetCapabilities</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <Category>Device</Category>
      </RequestParameters>
      <ResponseParameters>
        <Capabilities xmlns:tt="http://www.onvif.org/ver10/schema">
          <tt:Device>
            <tt:XAddr>http://CAMERA_IP/onvif/device_service</tt:XAddr>
            <tt:Network>
              <tt:IPFilter>false</tt:IPFilter>
              <tt:ZeroConfiguration>false</tt:ZeroConfiguration>
              <tt:IPVersion6>false</tt:IPVersion6>
              <tt:DynDNS>true</tt:DynDNS>
            </tt:Network>
            <tt:System>
              <tt:DiscoveryResolve>true</tt:DiscoveryResolve>
              <tt:DiscoveryBye>true</tt:DiscoveryBye>
              <tt:RemoteDiscovery>false</tt:RemoteDiscovery>
              <tt:SystemBackup>false</tt:SystemBackup>
              <tt:SystemLogging>true</tt:SystemLogging>
              <tt:FirmwareUpgrade>false</tt:FirmwareUpgrade>
              <tt:SupportedVersions>
                <tt:Major>1</tt:Major>
                <tt:Minor>1</tt:Minor>
              </tt:SupportedVersions>
            </tt:System>
            <tt:IO>
              <tt:InputConnectors>0</tt:InputConnectors>
              <tt:RelayOutputs>0</tt:RelayOutputs>
            </tt:IO>
            <tt:Security>
              <tt:TLS1.1>false</tt:TLS1.1>
              <tt:TLS1.2>false</tt:TLS1.2>
              <tt:OnboardKeyGeneration>false</tt:OnboardKeyGeneration>
              <tt:AccessPolicyConfig>false</tt:AccessPolicyConfig>
              <tt:X.509Token>false</tt:X.509Token>
              <tt:SAMLToken>false</tt:SAMLToken>
              <tt:KerberosToken>false</tt:KerberosToken>
              <tt:RELToken>false</tt:RELToken>
            </tt:Security>
          </tt:Device>
        </Capabilities>
      </ResponseParameters>
    </Step>
    <Step id ="2">
      <Command>SetNetworkProtocols</Command>
      <Response>Fault</Response>
      <Code>Sender</Code>
      <Subcode>InvalidArgVal</Subcode>
      <Subcode>ServiceNotSupported</Subcode>
      <RequestParameters>
        <NetworkProtocol>
          <Name>HTTPS</Name>
          <Enabled>true</Enabled>
          <Port>10554</Port>
        </NetworkProtocol>
      </RequestParameters>
    </Step>
    <Step id ="3">
      <Command>GetNetworkProtocols</Command>
      <Response>Fault</Response>
      <Code>Receiver</Code>
      <Subcode>ActionNotSupported</Subcode>
      <Subcode>NoSuchService</Subcode>
    </Step>
  </Test>
  <Test ID = "TC.DM.NET.6_2_24.10" ONVIFTestID="6.2.24" Enabled="true">
    <TestName>NVT SET NETWORK PROTOCOLS CONFIGURATION - UNSUPPORTED PROTOCOLS</TestName>
    <Name>Wrong fault on second request 1</Name>
    <Description>
      Check NVT SET NETWORK PROTOCOLS CONFIGURATION - UNSUPPORTED PROTOCOLS test
      when DUT return wrong fault on second request.
    </Description>
    <ExpectedResult>
      <TestSummary>
        DEVICE-2-1-24 SET NETWORK PROTOCOLS CONFIGURATION - UNSUPPORTED PROTOCOLS

        STEP 1 - Get capabilities
        Transmit done
        Receive done
        STEP PASSED

        STEP 2 - Check that DUT returned capabilities
        STEP PASSED

        STEP 3 - Check that DUT returned device capabilities
        STEP PASSED

        STEP 4 - Set Network Protocols - negative test
        Transmit done
        Receive done
        SOAP fault returned
        Code: Sender
        Subcode: InvalidArgVal
        Subcode: ServiceNotSupported1
        Reason: System.Web.Services.Protocols.SoapException: MESSAGE
        at DUT.CameraWebService.Device10.DeviceServiceFake.StepTypeProcessing(StepType stepType, SoapException ex, Int32 timeOut) in D:\!ONVIF\DUT\Version2\DUT\CameraWebService\ServiceDevice10\DeviceServiceFake.asmx.cs:line 61
        at DUT.CameraWebService.Device10.DeviceServiceFake.SetNetworkProtocols(NetworkProtocol[] NetworkProtocols) in D:\!ONVIF\DUT\Version2\DUT\CameraWebService\ServiceDevice10\DeviceServiceFake.asmx.cs:line 580
        The SOAP FAULT returned from the DUT is invalid: fault subcodes sequence is incorrect. Expected: env:Sender/ter:InvalidArgVal/ter:ServiceNotSupported, actual: env:Sender/ter:InvalidArgVal/ter:ServiceNotSupported1
        STEP FAILED

        TEST FAILED

      </TestSummary>
    </ExpectedResult>
    <Step id ="1">
      <Command>Device10.GetCapabilities</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <Category>Device</Category>
      </RequestParameters>
      <ResponseParameters>
        <Capabilities xmlns:tt="http://www.onvif.org/ver10/schema">
          <tt:Device>
            <tt:XAddr>http://CAMERA_IP/onvif/device_service</tt:XAddr>
            <tt:Network>
              <tt:IPFilter>false</tt:IPFilter>
              <tt:ZeroConfiguration>false</tt:ZeroConfiguration>
              <tt:IPVersion6>false</tt:IPVersion6>
              <tt:DynDNS>true</tt:DynDNS>
            </tt:Network>
            <tt:System>
              <tt:DiscoveryResolve>true</tt:DiscoveryResolve>
              <tt:DiscoveryBye>true</tt:DiscoveryBye>
              <tt:RemoteDiscovery>false</tt:RemoteDiscovery>
              <tt:SystemBackup>false</tt:SystemBackup>
              <tt:SystemLogging>true</tt:SystemLogging>
              <tt:FirmwareUpgrade>false</tt:FirmwareUpgrade>
              <tt:SupportedVersions>
                <tt:Major>1</tt:Major>
                <tt:Minor>1</tt:Minor>
              </tt:SupportedVersions>
            </tt:System>
            <tt:IO>
              <tt:InputConnectors>0</tt:InputConnectors>
              <tt:RelayOutputs>0</tt:RelayOutputs>
            </tt:IO>
            <tt:Security>
              <tt:TLS1.1>false</tt:TLS1.1>
              <tt:TLS1.2>false</tt:TLS1.2>
              <tt:OnboardKeyGeneration>false</tt:OnboardKeyGeneration>
              <tt:AccessPolicyConfig>false</tt:AccessPolicyConfig>
              <tt:X.509Token>false</tt:X.509Token>
              <tt:SAMLToken>false</tt:SAMLToken>
              <tt:KerberosToken>false</tt:KerberosToken>
              <tt:RELToken>false</tt:RELToken>
            </tt:Security>
          </tt:Device>
        </Capabilities>
      </ResponseParameters>
    </Step>
    <Step id ="2">
      <Command>SetNetworkProtocols</Command>
      <Response>Fault</Response>
      <Code>Sender</Code>
      <Subcode>InvalidArgVal</Subcode>
      <Subcode>ServiceNotSupported1</Subcode>
      <RequestParameters>
        <NetworkProtocol>
          <Name>HTTPS</Name>
          <Enabled>true</Enabled>
          <Port>10554</Port>
        </NetworkProtocol>
      </RequestParameters>
    </Step>
    <Step id ="3">
      <Command>GetNetworkProtocols</Command>
      <Response>Normal</Response>
      <ResponseParameters>
        <ArrayOfNetworkProtocol>
          <NetworkProtocol xmlns:tt="http://www.onvif.org/ver10/schema">
            <tt:Name>HTTP</tt:Name>
            <tt:Enabled>true</tt:Enabled>
            <tt:Port>80</tt:Port>
            <tt:Port>0</tt:Port>
          </NetworkProtocol>
          <NetworkProtocol xmlns:tt="http://www.onvif.org/ver10/schema">
            <tt:Name>RTSP</tt:Name>
            <tt:Enabled>true</tt:Enabled>
            <tt:Port>10554</tt:Port>
          </NetworkProtocol>
        </ArrayOfNetworkProtocol>
      </ResponseParameters>
    </Step>
  </Test>
  <Test ID = "TC.DM.NET.6_2_24.11" ONVIFTestID="6.2.24" Enabled="true">
    <TestName>NVT SET NETWORK PROTOCOLS CONFIGURATION - UNSUPPORTED PROTOCOLS</TestName>
    <Name>Wrong fault on second request 2</Name>
    <Description>
      Check NVT SET NETWORK PROTOCOLS CONFIGURATION - UNSUPPORTED PROTOCOLS test
      when DUT return wrong fault on second request.
    </Description>
    <ExpectedResult>
      <TestSummary>
        DEVICE-2-1-24 SET NETWORK PROTOCOLS CONFIGURATION - UNSUPPORTED PROTOCOLS

        STEP 1 - Get capabilities
        Transmit done
        Receive done
        STEP PASSED

        STEP 2 - Check that DUT returned capabilities
        STEP PASSED

        STEP 3 - Check that DUT returned device capabilities
        STEP PASSED

        STEP 4 - Set Network Protocols - negative test
        Transmit done
        Receive done
        SOAP fault returned
        Code: Sender
        Subcode: InvalidArgVal1
        Subcode: ServiceNotSupported
        Reason: System.Web.Services.Protocols.SoapException: MESSAGE
        at DUT.CameraWebService.Device10.DeviceServiceFake.StepTypeProcessing(StepType stepType, SoapException ex, Int32 timeOut) in D:\!ONVIF\DUT\Version2\DUT\CameraWebService\ServiceDevice10\DeviceServiceFake.asmx.cs:line 61
        at DUT.CameraWebService.Device10.DeviceServiceFake.SetNetworkProtocols(NetworkProtocol[] NetworkProtocols) in D:\!ONVIF\DUT\Version2\DUT\CameraWebService\ServiceDevice10\DeviceServiceFake.asmx.cs:line 580
        The SOAP FAULT returned from the DUT is invalid: fault subcodes sequence is incorrect. Expected: env:Sender/ter:InvalidArgVal/ter:ServiceNotSupported, actual: env:Sender/ter:InvalidArgVal1/ter:ServiceNotSupported
        STEP FAILED

        TEST FAILED

      </TestSummary>
    </ExpectedResult>
    <Step id ="1">
      <Command>Device10.GetCapabilities</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <Category>Device</Category>
      </RequestParameters>
      <ResponseParameters>
        <Capabilities xmlns:tt="http://www.onvif.org/ver10/schema">
          <tt:Device>
            <tt:XAddr>http://CAMERA_IP/onvif/device_service</tt:XAddr>
            <tt:Network>
              <tt:IPFilter>false</tt:IPFilter>
              <tt:ZeroConfiguration>false</tt:ZeroConfiguration>
              <tt:IPVersion6>false</tt:IPVersion6>
              <tt:DynDNS>true</tt:DynDNS>
            </tt:Network>
            <tt:System>
              <tt:DiscoveryResolve>true</tt:DiscoveryResolve>
              <tt:DiscoveryBye>true</tt:DiscoveryBye>
              <tt:RemoteDiscovery>false</tt:RemoteDiscovery>
              <tt:SystemBackup>false</tt:SystemBackup>
              <tt:SystemLogging>true</tt:SystemLogging>
              <tt:FirmwareUpgrade>false</tt:FirmwareUpgrade>
              <tt:SupportedVersions>
                <tt:Major>1</tt:Major>
                <tt:Minor>1</tt:Minor>
              </tt:SupportedVersions>
            </tt:System>
            <tt:IO>
              <tt:InputConnectors>0</tt:InputConnectors>
              <tt:RelayOutputs>0</tt:RelayOutputs>
            </tt:IO>
            <tt:Security>
              <tt:TLS1.1>false</tt:TLS1.1>
              <tt:TLS1.2>false</tt:TLS1.2>
              <tt:OnboardKeyGeneration>false</tt:OnboardKeyGeneration>
              <tt:AccessPolicyConfig>false</tt:AccessPolicyConfig>
              <tt:X.509Token>false</tt:X.509Token>
              <tt:SAMLToken>false</tt:SAMLToken>
              <tt:KerberosToken>false</tt:KerberosToken>
              <tt:RELToken>false</tt:RELToken>
            </tt:Security>
          </tt:Device>
        </Capabilities>
      </ResponseParameters>
    </Step>
    <Step id ="2">
      <Command>SetNetworkProtocols</Command>
      <Response>Fault</Response>
      <Code>Sender</Code>
      <Subcode>InvalidArgVal1</Subcode>
      <Subcode>ServiceNotSupported</Subcode>
      <RequestParameters>
        <NetworkProtocol>
          <Name>HTTPS</Name>
          <Enabled>true</Enabled>
          <Port>10554</Port>
        </NetworkProtocol>
      </RequestParameters>
    </Step>
    <Step id ="3">
      <Command>GetNetworkProtocols</Command>
      <Response>Normal</Response>
      <ResponseParameters>
        <ArrayOfNetworkProtocol>
          <NetworkProtocol xmlns:tt="http://www.onvif.org/ver10/schema">
            <tt:Name>HTTP</tt:Name>
            <tt:Enabled>true</tt:Enabled>
            <tt:Port>80</tt:Port>
            <tt:Port>0</tt:Port>
          </NetworkProtocol>
          <NetworkProtocol xmlns:tt="http://www.onvif.org/ver10/schema">
            <tt:Name>RTSP</tt:Name>
            <tt:Enabled>true</tt:Enabled>
            <tt:Port>10554</tt:Port>
          </NetworkProtocol>
        </ArrayOfNetworkProtocol>
      </ResponseParameters>
    </Step>
  </Test>
  <Test ID = "TC.DM.NET.6_2_24.12" ONVIFTestID="6.2.24" Enabled="true">
    <TestName>NVT SET NETWORK PROTOCOLS CONFIGURATION - UNSUPPORTED PROTOCOLS</TestName>
    <Name>Wrong fault on second request 3</Name>
    <Description>
      Check NVT SET NETWORK PROTOCOLS CONFIGURATION - UNSUPPORTED PROTOCOLS test
      when DUT return wrong fault on second request.
    </Description>
    <ExpectedResult>
      <TestSummary>
        DEVICE-2-1-24 SET NETWORK PROTOCOLS CONFIGURATION - UNSUPPORTED PROTOCOLS

        STEP 1 - Get capabilities
        Transmit done
        Receive done
        STEP PASSED

        STEP 2 - Check that DUT returned capabilities
        STEP PASSED

        STEP 3 - Check that DUT returned device capabilities
        STEP PASSED

        STEP 4 - Set Network Protocols - negative test
        Transmit done
        Receive done
        SOAP fault returned
        Code: Receiver
        Subcode: InvalidArgVal
        Subcode: ServiceNotSupported
        Reason: System.Web.Services.Protocols.SoapException: MESSAGE
        at DUT.CameraWebService.Device10.DeviceServiceFake.StepTypeProcessing(StepType stepType, SoapException ex, Int32 timeOut) in D:\!ONVIF\DUT\Version2\DUT\CameraWebService\ServiceDevice10\DeviceServiceFake.asmx.cs:line 61
        at DUT.CameraWebService.Device10.DeviceServiceFake.SetNetworkProtocols(NetworkProtocol[] NetworkProtocols) in D:\!ONVIF\DUT\Version2\DUT\CameraWebService\ServiceDevice10\DeviceServiceFake.asmx.cs:line 580
        The SOAP FAULT returned from the DUT is invalid: fault subcodes sequence is incorrect. Expected: env:Sender/ter:InvalidArgVal/ter:ServiceNotSupported, actual: env:Receiver/ter:InvalidArgVal/ter:ServiceNotSupported
        STEP FAILED

        TEST FAILED

      </TestSummary>
    </ExpectedResult>
    <Step id ="1">
      <Command>Device10.GetCapabilities</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <Category>Device</Category>
      </RequestParameters>
      <ResponseParameters>
        <Capabilities xmlns:tt="http://www.onvif.org/ver10/schema">
          <tt:Device>
            <tt:XAddr>http://CAMERA_IP/onvif/device_service</tt:XAddr>
            <tt:Network>
              <tt:IPFilter>false</tt:IPFilter>
              <tt:ZeroConfiguration>false</tt:ZeroConfiguration>
              <tt:IPVersion6>false</tt:IPVersion6>
              <tt:DynDNS>true</tt:DynDNS>
            </tt:Network>
            <tt:System>
              <tt:DiscoveryResolve>true</tt:DiscoveryResolve>
              <tt:DiscoveryBye>true</tt:DiscoveryBye>
              <tt:RemoteDiscovery>false</tt:RemoteDiscovery>
              <tt:SystemBackup>false</tt:SystemBackup>
              <tt:SystemLogging>true</tt:SystemLogging>
              <tt:FirmwareUpgrade>false</tt:FirmwareUpgrade>
              <tt:SupportedVersions>
                <tt:Major>1</tt:Major>
                <tt:Minor>1</tt:Minor>
              </tt:SupportedVersions>
            </tt:System>
            <tt:IO>
              <tt:InputConnectors>0</tt:InputConnectors>
              <tt:RelayOutputs>0</tt:RelayOutputs>
            </tt:IO>
            <tt:Security>
              <tt:TLS1.1>false</tt:TLS1.1>
              <tt:TLS1.2>false</tt:TLS1.2>
              <tt:OnboardKeyGeneration>false</tt:OnboardKeyGeneration>
              <tt:AccessPolicyConfig>false</tt:AccessPolicyConfig>
              <tt:X.509Token>false</tt:X.509Token>
              <tt:SAMLToken>false</tt:SAMLToken>
              <tt:KerberosToken>false</tt:KerberosToken>
              <tt:RELToken>false</tt:RELToken>
            </tt:Security>
          </tt:Device>
        </Capabilities>
      </ResponseParameters>
    </Step>
    <Step id ="2">
      <Command>SetNetworkProtocols</Command>
      <Response>Fault</Response>
      <Code>Receiver</Code>
      <Subcode>InvalidArgVal</Subcode>
      <Subcode>ServiceNotSupported</Subcode>
      <RequestParameters>
        <NetworkProtocol>
          <Name>HTTPS</Name>
          <Enabled>true</Enabled>
          <Port>10554</Port>
        </NetworkProtocol>
      </RequestParameters>
    </Step>
    <Step id ="3">
      <Command>GetNetworkProtocols</Command>
      <Response>Normal</Response>
      <ResponseParameters>
        <ArrayOfNetworkProtocol>
          <NetworkProtocol xmlns:tt="http://www.onvif.org/ver10/schema">
            <tt:Name>HTTP</tt:Name>
            <tt:Enabled>true</tt:Enabled>
            <tt:Port>80</tt:Port>
            <tt:Port>0</tt:Port>
          </NetworkProtocol>
          <NetworkProtocol xmlns:tt="http://www.onvif.org/ver10/schema">
            <tt:Name>RTSP</tt:Name>
            <tt:Enabled>true</tt:Enabled>
            <tt:Port>10554</tt:Port>
          </NetworkProtocol>
        </ArrayOfNetworkProtocol>
      </ResponseParameters>
    </Step>
  </Test>
  <Test ID = "TC.DM.NET.6_2_24.13" ONVIFTestID="6.2.24" Enabled="true">
    <TestName>NVT SET NETWORK PROTOCOLS CONFIGURATION - UNSUPPORTED PROTOCOLS</TestName>
    <Name>Wrong fault on second request 4</Name>
    <Description>
      Check NVT SET NETWORK PROTOCOLS CONFIGURATION - UNSUPPORTED PROTOCOLS test
      when DUT return wrong fault on second request.
    </Description>
    <ExpectedResult>
      <TestSummary>
        DEVICE-2-1-24 SET NETWORK PROTOCOLS CONFIGURATION - UNSUPPORTED PROTOCOLS

        STEP 1 - Get capabilities
        Transmit done
        Receive done
        STEP PASSED

        STEP 2 - Check that DUT returned capabilities
        STEP PASSED

        STEP 3 - Check that DUT returned device capabilities
        STEP PASSED

        STEP 4 - Set Network Protocols - negative test
        Transmit done
        Receive done
        SOAP fault returned
        Code: Sender
        Subcode: InvalidArgVal
        Reason: System.Web.Services.Protocols.SoapException: MESSAGE
        at DUT.CameraWebService.Device10.DeviceServiceFake.StepTypeProcessing(StepType stepType, SoapException ex, Int32 timeOut) in D:\!ONVIF\DUT\Version2\DUT\CameraWebService\ServiceDevice10\DeviceServiceFake.asmx.cs:line 61
        at DUT.CameraWebService.Device10.DeviceServiceFake.SetNetworkProtocols(NetworkProtocol[] NetworkProtocols) in D:\!ONVIF\DUT\Version2\DUT\CameraWebService\ServiceDevice10\DeviceServiceFake.asmx.cs:line 580
        The SOAP FAULT returned from the DUT is invalid: fault subcodes sequence is incorrect. Expected: env:Sender/ter:InvalidArgVal/ter:ServiceNotSupported, actual: env:Sender/ter:InvalidArgVal
        STEP FAILED

        TEST FAILED

      </TestSummary>
    </ExpectedResult>
    <Step id ="1">
      <Command>Device10.GetCapabilities</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <Category>Device</Category>
      </RequestParameters>
      <ResponseParameters>
        <Capabilities xmlns:tt="http://www.onvif.org/ver10/schema">
          <tt:Device>
            <tt:XAddr>http://CAMERA_IP/onvif/device_service</tt:XAddr>
            <tt:Network>
              <tt:IPFilter>false</tt:IPFilter>
              <tt:ZeroConfiguration>false</tt:ZeroConfiguration>
              <tt:IPVersion6>false</tt:IPVersion6>
              <tt:DynDNS>true</tt:DynDNS>
            </tt:Network>
            <tt:System>
              <tt:DiscoveryResolve>true</tt:DiscoveryResolve>
              <tt:DiscoveryBye>true</tt:DiscoveryBye>
              <tt:RemoteDiscovery>false</tt:RemoteDiscovery>
              <tt:SystemBackup>false</tt:SystemBackup>
              <tt:SystemLogging>true</tt:SystemLogging>
              <tt:FirmwareUpgrade>false</tt:FirmwareUpgrade>
              <tt:SupportedVersions>
                <tt:Major>1</tt:Major>
                <tt:Minor>1</tt:Minor>
              </tt:SupportedVersions>
            </tt:System>
            <tt:IO>
              <tt:InputConnectors>0</tt:InputConnectors>
              <tt:RelayOutputs>0</tt:RelayOutputs>
            </tt:IO>
            <tt:Security>
              <tt:TLS1.1>false</tt:TLS1.1>
              <tt:TLS1.2>false</tt:TLS1.2>
              <tt:OnboardKeyGeneration>false</tt:OnboardKeyGeneration>
              <tt:AccessPolicyConfig>false</tt:AccessPolicyConfig>
              <tt:X.509Token>false</tt:X.509Token>
              <tt:SAMLToken>false</tt:SAMLToken>
              <tt:KerberosToken>false</tt:KerberosToken>
              <tt:RELToken>false</tt:RELToken>
            </tt:Security>
          </tt:Device>
        </Capabilities>
      </ResponseParameters>
    </Step>
    <Step id ="2">
      <Command>SetNetworkProtocols</Command>
      <Response>Fault</Response>
      <Code>Sender</Code>
      <Subcode>InvalidArgVal</Subcode>
      <RequestParameters>
        <NetworkProtocol>
          <Name>HTTPS</Name>
          <Enabled>true</Enabled>
          <Port>10554</Port>
        </NetworkProtocol>
      </RequestParameters>
    </Step>
    <Step id ="3">
      <Command>GetNetworkProtocols</Command>
      <Response>Normal</Response>
      <ResponseParameters>
        <ArrayOfNetworkProtocol>
          <NetworkProtocol xmlns:tt="http://www.onvif.org/ver10/schema">
            <tt:Name>HTTP</tt:Name>
            <tt:Enabled>true</tt:Enabled>
            <tt:Port>80</tt:Port>
            <tt:Port>0</tt:Port>
          </NetworkProtocol>
          <NetworkProtocol xmlns:tt="http://www.onvif.org/ver10/schema">
            <tt:Name>RTSP</tt:Name>
            <tt:Enabled>true</tt:Enabled>
            <tt:Port>10554</tt:Port>
          </NetworkProtocol>
        </ArrayOfNetworkProtocol>
      </ResponseParameters>
    </Step>
  </Test>
  <Test ID = "TC.DM.NET.6_2_24.14" ONVIFTestID="6.2.24" Enabled="true">
    <TestName>NVT SET NETWORK PROTOCOLS CONFIGURATION - UNSUPPORTED PROTOCOLS</TestName>
    <Name>Wrong fault on second request 5</Name>
    <Description>
      Check NVT SET NETWORK PROTOCOLS CONFIGURATION - UNSUPPORTED PROTOCOLS test
      when DUT return wrong fault on second request.
    </Description>
    <ExpectedResult>
      <TestSummary>
        DEVICE-2-1-24 SET NETWORK PROTOCOLS CONFIGURATION - UNSUPPORTED PROTOCOLS

        STEP 1 - Get capabilities
        Transmit done
        Receive done
        STEP PASSED

        STEP 2 - Check that DUT returned capabilities
        STEP PASSED

        STEP 3 - Check that DUT returned device capabilities
        STEP PASSED

        STEP 4 - Set Network Protocols - negative test
        Transmit done
        Receive done
        SOAP fault returned
        Code: Sender
        Reason: System.Web.Services.Protocols.SoapException: MESSAGE
        at DUT.CameraWebService.Device10.DeviceServiceFake.StepTypeProcessing(StepType stepType, SoapException ex, Int32 timeOut) in D:\!ONVIF\DUT\Version2\DUT\CameraWebService\ServiceDevice10\DeviceServiceFake.asmx.cs:line 61
        at DUT.CameraWebService.Device10.DeviceServiceFake.SetNetworkProtocols(NetworkProtocol[] NetworkProtocols) in D:\!ONVIF\DUT\Version2\DUT\CameraWebService\ServiceDevice10\DeviceServiceFake.asmx.cs:line 580
        The SOAP FAULT returned from the DUT is invalid: fault subcodes sequence is incorrect. Expected: env:Sender/ter:InvalidArgVal/ter:ServiceNotSupported, actual: env:Sender
        STEP FAILED

        TEST FAILED

      </TestSummary>
    </ExpectedResult>
    <Step id ="1">
      <Command>Device10.GetCapabilities</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <Category>Device</Category>
      </RequestParameters>
      <ResponseParameters>
        <Capabilities xmlns:tt="http://www.onvif.org/ver10/schema">
          <tt:Device>
            <tt:XAddr>http://CAMERA_IP/onvif/device_service</tt:XAddr>
            <tt:Network>
              <tt:IPFilter>false</tt:IPFilter>
              <tt:ZeroConfiguration>false</tt:ZeroConfiguration>
              <tt:IPVersion6>false</tt:IPVersion6>
              <tt:DynDNS>true</tt:DynDNS>
            </tt:Network>
            <tt:System>
              <tt:DiscoveryResolve>true</tt:DiscoveryResolve>
              <tt:DiscoveryBye>true</tt:DiscoveryBye>
              <tt:RemoteDiscovery>false</tt:RemoteDiscovery>
              <tt:SystemBackup>false</tt:SystemBackup>
              <tt:SystemLogging>true</tt:SystemLogging>
              <tt:FirmwareUpgrade>false</tt:FirmwareUpgrade>
              <tt:SupportedVersions>
                <tt:Major>1</tt:Major>
                <tt:Minor>1</tt:Minor>
              </tt:SupportedVersions>
            </tt:System>
            <tt:IO>
              <tt:InputConnectors>0</tt:InputConnectors>
              <tt:RelayOutputs>0</tt:RelayOutputs>
            </tt:IO>
            <tt:Security>
              <tt:TLS1.1>false</tt:TLS1.1>
              <tt:TLS1.2>false</tt:TLS1.2>
              <tt:OnboardKeyGeneration>false</tt:OnboardKeyGeneration>
              <tt:AccessPolicyConfig>false</tt:AccessPolicyConfig>
              <tt:X.509Token>false</tt:X.509Token>
              <tt:SAMLToken>false</tt:SAMLToken>
              <tt:KerberosToken>false</tt:KerberosToken>
              <tt:RELToken>false</tt:RELToken>
            </tt:Security>
          </tt:Device>
        </Capabilities>
      </ResponseParameters>
    </Step>
    <Step id ="2">
      <Command>SetNetworkProtocols</Command>
      <Response>Fault</Response>
      <Code>Sender</Code>
      <RequestParameters>
        <NetworkProtocol>
          <Name>HTTPS</Name>
          <Enabled>true</Enabled>
          <Port>10554</Port>
        </NetworkProtocol>
      </RequestParameters>
    </Step>
    <Step id ="3">
      <Command>GetNetworkProtocols</Command>
      <Response>Normal</Response>
      <ResponseParameters>
        <ArrayOfNetworkProtocol>
          <NetworkProtocol xmlns:tt="http://www.onvif.org/ver10/schema">
            <tt:Name>HTTP</tt:Name>
            <tt:Enabled>true</tt:Enabled>
            <tt:Port>80</tt:Port>
            <tt:Port>0</tt:Port>
          </NetworkProtocol>
          <NetworkProtocol xmlns:tt="http://www.onvif.org/ver10/schema">
            <tt:Name>RTSP</tt:Name>
            <tt:Enabled>true</tt:Enabled>
            <tt:Port>10554</tt:Port>
          </NetworkProtocol>
        </ArrayOfNetworkProtocol>
      </ResponseParameters>
    </Step>
  </Test>

  <Test ID = "TC.DM.NET.6_2_24.15" ONVIFTestID="6.2.24" Enabled="true">
    <TestName>NVT SET NETWORK PROTOCOLS CONFIGURATION - UNSUPPORTED PROTOCOLS</TestName>
    <Name>Correct response: unsupported protocol doesn't exist: Extension</Name>
    <Description>
      Check NVT SET NETWORK PROTOCOLS CONFIGURATION - UNSUPPORTED PROTOCOLS test
      when DUT return correct response (unsupported protocol exist).
    </Description>
    <ExpectedResult>
      <TestSummary>
        DEVICE-2-1-24 SET NETWORK PROTOCOLS CONFIGURATION - UNSUPPORTED PROTOCOLS

        STEP 1 - Get capabilities
        Transmit done
        Receive done
        STEP PASSED

        STEP 2 - Check that DUT returned capabilities
        STEP PASSED

        STEP 3 - Check that DUT returned device capabilities
        STEP PASSED

        HTTPS supported, skip the test
        TEST PASSED

      </TestSummary>
    </ExpectedResult>
    <Step id ="1">
      <Command>Device10.GetCapabilities</Command>
      <Response>Normal</Response>
      <RequestParameters>
        <Category>Device</Category>
      </RequestParameters>
      <ResponseParameters>
        <Capabilities xmlns:tt="http://www.onvif.org/ver10/schema">
          <tt:Device>
            <tt:XAddr>http://CAMERA_IP/onvif/device_service</tt:XAddr>
            <tt:Network>
              <tt:IPFilter>false</tt:IPFilter>
              <tt:ZeroConfiguration>false</tt:ZeroConfiguration>
              <tt:IPVersion6>false</tt:IPVersion6>
              <tt:DynDNS>true</tt:DynDNS>
            </tt:Network>
            <tt:System>
              <tt:DiscoveryResolve>true</tt:DiscoveryResolve>
              <tt:DiscoveryBye>true</tt:DiscoveryBye>
              <tt:RemoteDiscovery>false</tt:RemoteDiscovery>
              <tt:SystemBackup>false</tt:SystemBackup>
              <tt:SystemLogging>true</tt:SystemLogging>
              <tt:FirmwareUpgrade>false</tt:FirmwareUpgrade>
              <tt:SupportedVersions>
                <tt:Major>1</tt:Major>
                <tt:Minor>1</tt:Minor>
              </tt:SupportedVersions>
            </tt:System>
            <tt:IO>
              <tt:InputConnectors>0</tt:InputConnectors>
              <tt:RelayOutputs>0</tt:RelayOutputs>
            </tt:IO>
            <tt:Security>
              <tt:TLS1.1>false</tt:TLS1.1>
              <tt:TLS1.2>false</tt:TLS1.2>
              <tt:OnboardKeyGeneration>false</tt:OnboardKeyGeneration>
              <tt:AccessPolicyConfig>false</tt:AccessPolicyConfig>
              <tt:X.509Token>false</tt:X.509Token>
              <tt:SAMLToken>false</tt:SAMLToken>
              <tt:KerberosToken>false</tt:KerberosToken>
              <tt:RELToken>false</tt:RELToken>
              <tt:Extension>
                <tt:TLS1.0>true</tt:TLS1.0>
              </tt:Extension>
            </tt:Security>
          </tt:Device>
        </Capabilities>
      </ResponseParameters>
    </Step>
    <Step id ="2">
      <Command>SetNetworkProtocols</Command>
      <Response>Fault</Response>
      <Code>Sender</Code>
      <Subcode>InvalidArgVal</Subcode>
      <Subcode>ServiceNotSupported</Subcode>
      <RequestParameters>
        <NetworkProtocol>
          <Name>HTTPS</Name>
          <Enabled>true</Enabled>
          <Port>10554</Port>
        </NetworkProtocol>
      </RequestParameters>
    </Step>
    <Step id ="3">
      <Command>GetNetworkProtocols</Command>
      <Response>Normal</Response>
      <ResponseParameters>
        <ArrayOfNetworkProtocol>
          <NetworkProtocol xmlns:tt="http://www.onvif.org/ver10/schema">
            <tt:Name>HTTP</tt:Name>
            <tt:Enabled>true</tt:Enabled>
            <tt:Port>80</tt:Port>
            <tt:Port>0</tt:Port>
          </NetworkProtocol>
          <NetworkProtocol xmlns:tt="http://www.onvif.org/ver10/schema">
            <tt:Name>RTSP</tt:Name>
            <tt:Enabled>true</tt:Enabled>
            <tt:Port>10554</tt:Port>
          </NetworkProtocol>
        </ArrayOfNetworkProtocol>
      </ResponseParameters>
    </Step>
  </Test>
</TestSuit>
