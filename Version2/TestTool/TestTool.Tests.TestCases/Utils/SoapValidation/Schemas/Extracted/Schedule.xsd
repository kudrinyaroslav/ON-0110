		<xs:schema targetNamespace="http://www.onvif.org/ver10/schedule/wsdl"
		xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:pt="http://www.onvif.org/ver10/pacs" 
		xmlns:tsc="http://www.onvif.org/ver10/schedule/wsdl" elementFormDefault="qualified" version="1.0">
			<xs:import namespace="http://www.onvif.org/ver10/pacs" schemaLocation="types.xsd"/>			
			<!--ServiceCapabilities definitions-->
			<xs:complexType name="ServiceCapabilities">
				<xs:annotation>
					<xs:documentation>
						The service capabilities reflect optional functionality of a service.
						The information is static and does not change during device operation.
						The following capabilities are available:
					</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/>
				</xs:sequence>
				<xs:attribute name="MaxLimit" type="pt:PositiveInteger" use="required">
					<xs:annotation>
						<xs:documentation>
							The maximum number of entries returned by a single Get&lt;Entity&gt;List or 
							Get&lt;Entity&gt; request. The device shall never return more than this number 
							of entities in a single response.
						</xs:documentation>
				  </xs:annotation>
				</xs:attribute>
				<xs:attribute name="MaxSchedules" type="pt:PositiveInteger" use="required">
					<xs:annotation>
						<xs:documentation>
							Indicates the maximum number of schedules the device supports. 
							The device shall support at least one schedule.
						</xs:documentation>
				  </xs:annotation>
				</xs:attribute>
				<xs:attribute name="MaxTimePeriodsPerDay" type="pt:PositiveInteger" use="required">
					<xs:annotation>
						<xs:documentation>
							Indicates the maximum number of time periods per day the device supports 
							in a schedule including special days schedule. The device shall support 
							at least one time period per day.
						</xs:documentation>
				  </xs:annotation>
				</xs:attribute>
				<xs:attribute name="MaxSpecialDayGroups" type="pt:PositiveInteger" use="required">
					<xs:annotation>
						<xs:documentation>
							Indicates the maximum number of special day group entities the device supports. 
						</xs:documentation>
				  </xs:annotation>
				</xs:attribute>
				<xs:attribute name="MaxDaysInSpecialDayGroup" type="pt:PositiveInteger" use="required">
					<xs:annotation>
						<xs:documentation>
						</xs:documentation>
				  </xs:annotation>
				</xs:attribute>
				<xs:attribute name="MaxSpecialDaysSchedules" type="pt:PositiveInteger" use="required">
					<xs:annotation>
						<xs:documentation>
						</xs:documentation>
				  </xs:annotation>
				</xs:attribute>
				<xs:attribute name="ExtendedRecurrenceSupported" type="xs:boolean" use="required">
					<xs:annotation>
						<xs:documentation>
							For schedules:
							If this capability is supported, then all iCalendar recurrence types shall 
							be supported by the device. The device shall also support the start and end dates (or 
							iCalendar occurrence count) in recurring events (see iCalendar examples in section 3).
							If this capability is not supported, then only the weekly iCalendar recurrence 
							type shall be supported. Non-recurring events and other recurring types are 
							(the month and day is needed to reflect the week day of the recurrence) 
							and will not accept an occurrence count (or iCalendar until date) in recurring events.
							For special days (only applicable if SpecialDaysSupported is set to true):
							If this capability is supported, then all iCalendar recurrence types shall 
							be supported by the device. The device shall also support the start and 
							end dates (or occurrence count) in recurring events.
							If this capability is not supported, then only non-recurring special days are supported.
						</xs:documentation>
				  </xs:annotation>
				</xs:attribute>
				<xs:attribute name="SpecialDaysSupported" type="xs:boolean" use="required">
					<xs:annotation>
						<xs:documentation>
							If this capability is supported, then the device shall support special days.
						</xs:documentation>
				  </xs:annotation>
				</xs:attribute>
				<xs:attribute name="StateReportingSupported" type="xs:boolean" use="required">
					<xs:annotation>
						<xs:documentation>
							If this capability is set to true, the device shall implement the 
							GetScheduleState  command, and shall notify subscribing clients whenever 
							schedules become active or inactive.
						</xs:documentation>
				  </xs:annotation>
				</xs:attribute>
				<xs:anyAttribute processContents="lax"/>
			</xs:complexType>
			<!-- End of definition -->
			<!--ScheduleInfo definitions-->
			<xs:complexType name="ScheduleInfo">
				<xs:annotation>
					<xs:documentation>
						The ScheduleInfo type represents the schedule as a physical object. 
						The structure contains information of a specific schedule instance. 
					</xs:documentation>
				</xs:annotation>
				<xs:complexContent>
					<xs:extension base="pt:DataEntity">
						<xs:sequence>
							<xs:element name="Name" type="pt:Name">
								<xs:annotation>
									<xs:documentation>
										A user readable name. It shall be up to 64 characters.
									</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Description" type="pt:Description" minOccurs="0">
								<xs:annotation>
									<xs:documentation>
										User readable description for the schedule. It shall be up to 1024 characters.
									</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>						
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<!-- End of definition -->
			<!--Schedule definitions-->
			<xs:complexType name="Schedule">
				<xs:annotation>
					<xs:documentation>
						The schedule structure shall include all properties of the ScheduleInfo structure 
						and also the standard events (iCalendar format) and a list of SpecialDaysSchedule instances.
					</xs:documentation>
				</xs:annotation>
				<xs:complexContent>
					<xs:extension base="tsc:ScheduleInfo">
						<xs:sequence>
							<xs:element name="Standard" type="xs:string">
								<xs:annotation>
									<xs:documentation>
										An iCalendar structure that defines a number of events. Events 
										can be recurring or non-recurring. The events can, for instance, 
										be used to control when a camera should record or when a facility 
										is accessible. Some devices might not be able to fully support 
										all the features of iCalendar. Setting the service capability 
										ExtendedRecurrenceSupported to false will enable more devices 
										to be ONVIF compliant. Is of type string (but contains an iCalendar structure).
									</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="SpecialDays" type="tsc:SpecialDaysSchedule" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>
										For devices that are not able to support all the features of iCalendar, 
										supporting special days is essential. Each SpecialDaysSchedule 
										instance defines an alternate set of time periods that overrides 
										the regular schedule for a specified list of special days. 
										Is of type SpecialDaysSchedule.
									</xs:documentation>
								</xs:annotation>
							</xs:element>	
							<xs:element name="Extension" type="tsc:ScheduleExtension" minOccurs="0"/>							
						</xs:sequence>
						<xs:anyAttribute processContents="lax"/>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="ScheduleExtension"> 
				<xs:sequence>
					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:complexType>
			<!-- End of definition -->
			<!--SpecialDaysSchedule definitions-->
			<xs:complexType name="SpecialDaysSchedule">
				<xs:annotation>
					<xs:documentation>
						A override schedule that defines alternate time periods for a group of special days. 
					</xs:documentation>
				</xs:annotation>				
				<xs:sequence>
					<xs:element name="GroupToken" type="pt:ReferenceToken">
						<xs:annotation>
							<xs:documentation>
								Indicates the list of special days in a schedule.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="TimeRange" type="tsc:TimePeriod" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
								Indicates the alternate time periods for the list of special days 
								(overrides the regular schedule). For example, the regular schedule indicates 
								that it is active from 8AM to 5PM on Mondays. However, this particular 
								Monday is a special day, and the alternate time periods state that the 
								schedule is active from 9 AM to 11 AM and 1 PM to 4 PM. 
								If no time periods are defined, then no access is allowed. 
								Is of type TimePeriod.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Extension" type="tsc:SpecialDaysScheduleExtension" minOccurs="0"/>					
				</xs:sequence>	
				<xs:anyAttribute processContents="lax"/>				
			</xs:complexType>
			<xs:complexType name="SpecialDaysScheduleExtension"> 
				<xs:sequence>
					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:complexType>
			<!-- End of definition -->
			<!-- ScheduleState definitions-->
			<xs:complexType name="ScheduleState">
				<xs:annotation>
					<xs:documentation>
						The ScheduleState contains state information for a schedule.
					</xs:documentation>
				</xs:annotation>							
				<xs:sequence>
					<xs:element name="Active" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>
								Indicates that the current time is within the boundaries of the schedule 
								schedule is being used for triggering automatic recording on a video source, 
								the Active flag will be true when the schedule-based recording is supposed to record.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="SpecialDay" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Indicates that the current time is within the boundaries of its special 
								for recording at a lower frame rate on a video source during special days, 
								the SpecialDay flag will be true. If special days are not supported by the device, 
								this field may be omitted and interpreted as false by the client.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Extension" type="tsc:ScheduleStateExtension" minOccurs="0"/>	
				</xs:sequence>	
				<xs:anyAttribute processContents="lax"/>
			</xs:complexType>
			<xs:complexType name="ScheduleStateExtension"> 
				<xs:sequence>
					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:complexType>
			<!-- End of definition -->
			<!--TimePeriod definitions-->
			<xs:complexType name="TimePeriod">
				<xs:annotation>
					<xs:documentation>
						A time period defines a start and end time. For full day access, the 
						end time, the schedule runs until midnight. The end time must always be greater 
						than the start time, otherwise an InvalidArgVal error messages is generated by the device. 						
					</xs:documentation>
				</xs:annotation>							
				<xs:sequence>
					<xs:element name="From" type="xs:time">
						<xs:annotation>
							<xs:documentation>
								Indicates the start time.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Until" type="xs:time" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Indicates the end time. Is optional, if omitted, the period ends at midnight. 
								The end time is exclusive, meaning that that exact moment in time is not 
								part of the period. To determine if a moment in time (t) is part of a time period, 
								the formula StartTime &#8804; t &lt; EndTime is used.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Extension" type="tsc:TimePeriodExtension" minOccurs="0"/>	
				</xs:sequence>	
				<xs:anyAttribute processContents="lax"/>
			</xs:complexType>
			<xs:complexType name="TimePeriodExtension"> 
				<xs:sequence>
					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:complexType>
			<!-- End of definition -->
			<!--SpecialDaysInfo definitions-->
			<xs:complexType name="SpecialDayGroupInfo">
				<xs:annotation>
					<xs:documentation>
						The SpecialDayGroupInfo structure contains the basic information about the special days list. 
					</xs:documentation>
				</xs:annotation>
				<xs:complexContent>
					<xs:extension base="pt:DataEntity">
						<xs:sequence>
							<xs:element name="Name" type="pt:Name">
								<xs:annotation>
									<xs:documentation>
										User readable name. It shall be up to 64 characters.
									</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Description" type="pt:Description" minOccurs="0">
								<xs:annotation>
									<xs:documentation>
										User readable description for the special days. It shall be up to 1024 characters.
									</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>						
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<!-- End of definition -->
			<!--SpecialDays definitions-->
			<xs:complexType name="SpecialDayGroup">
				<xs:annotation>
					<xs:documentation>
						The special day group structure shall include all properties of the SpecialDayGroupInfo 
						structure and also a set of special days. A special day group are days (or parts of days) 
						that require the regular schedule to be overridden with an alternate schedule. 
						For example holidays, half-days, working Sundays, etc. 
					</xs:documentation>
				</xs:annotation>
				<xs:complexContent>
					<xs:extension base="tsc:SpecialDayGroupInfo">
						<xs:sequence>
							<xs:element name="Days" type="xs:string" minOccurs="0">
								<xs:annotation>
									<xs:documentation>
										An iCalendar structure that contains a group of special days. 
										Is of type string (containing an iCalendar structure).
									</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Extension" type="tsc:SpecialDayGroupExtension" minOccurs="0"/>
						</xs:sequence>
						<xs:anyAttribute processContents="lax"/>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="SpecialDayGroupExtension"> 
				<xs:sequence>
					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:complexType>
			<!-- End of definition -->
			<!-- #################-->
			<!-- Message request / response elements-->
			<xs:element name="GetServiceCapabilities">
				<xs:complexType>
					<xs:sequence/>
				</xs:complexType>
			</xs:element>
			<!--===============================-->
			<xs:element name="GetServiceCapabilitiesResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Capabilities" type="tsc:ServiceCapabilities">
							<xs:annotation>
								<xs:documentation>
									The capability response message contains the requested schedule service 
									capabilities using a hierarchical XML capability structure.
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<!--===============================-->
			<xs:element name="GetScheduleState">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Token" type="pt:ReferenceToken">
							<xs:annotation>
								<xs:documentation>
									Token of schedule instance to get ScheduleState.
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<!--===============================-->
			<xs:element name="GetScheduleStateResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="ScheduleState" type="tsc:ScheduleState">
							<xs:annotation>
								<xs:documentation>
									ScheduleState item.
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<!--===============================-->
			<xs:element name="GetScheduleInfo">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Token" type="pt:ReferenceToken" minOccurs="1" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>
									Tokens of ScheduleInfo items to get.
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<!--===============================-->
			<xs:element name="GetScheduleInfoResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="ScheduleInfo" type="tsc:ScheduleInfo" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>
									List of ScheduleInfo items.
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<!--===============================-->
			<xs:element name="GetScheduleInfoList">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Limit" type="xs:int" minOccurs="0">
							<xs:annotation>
								<xs:documentation>
									Maximum number of entries to return. If not specified, less than one 
									or higher than what the device supports, the number of items is 
									determined by the device.
								</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="StartReference" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>
									Start returning entries from this start reference. 
									If not specified, entries shall start from the beginning of the dataset.
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<!--===============================-->
			<xs:element name="GetScheduleInfoListResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="NextStartReference" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>
									StartReference to use in next call to get the following items. 
									If absent, no more items to get.
								</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="ScheduleInfo" type="tsc:ScheduleInfo" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>
									List of ScheduleInfo items.
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<!--===============================-->
			<xs:element name="GetSchedules">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Token" type="pt:ReferenceToken"  minOccurs="1" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Tokens of Schedule items to get</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<!--===============================-->
			<xs:element name="GetSchedulesResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Schedule" type="tsc:Schedule" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>List of schedule items.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<!--===============================-->
			<xs:element name="GetScheduleList">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Limit" type="xs:int" minOccurs="0">
							<xs:annotation>
								<xs:documentation>
									Maximum number of entries to return. 
									If not specified, less than one or higher than what the device supports, 
									the number of items is determined by the device.
								</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="StartReference" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>
									Start returning entries from this start reference. 
									If not specified, entries shall start from the beginning of the dataset.
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<!--===============================-->
			<xs:element name="GetScheduleListResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="NextStartReference" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>
									StartReference to use in next call to get the following items. 
									If absent, no more items to get.
								</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Schedule" type="tsc:Schedule" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>List of Schedule items.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>			
			<!--===============================-->
			<xs:element name="CreateSchedule">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Schedule" type="tsc:Schedule" minOccurs="1">
							<xs:annotation>
								<xs:documentation>The Schedule to create</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>			
			<!--===============================-->
			<xs:element name="CreateScheduleResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Token" type="pt:ReferenceToken">
							<xs:annotation>
								<xs:documentation>The token of created Schedule</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<!--===============================-->
			<xs:element name="ModifySchedule">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Schedule" type="tsc:Schedule" minOccurs="1">
							<xs:annotation>
								<xs:documentation>The Schedule to modify/update</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>			
			<!--===============================-->
			<xs:element name="ModifyScheduleResponse">
				<xs:complexType>
					<xs:sequence>
					</xs:sequence>
				</xs:complexType>
			</xs:element>			
			<!--===============================-->
			<xs:element name="DeleteSchedule">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Token" type="pt:ReferenceToken" minOccurs="1">
							<xs:annotation>
								<xs:documentation>The token of the schedule to delete.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<!--===============================-->
			<xs:element name="DeleteScheduleResponse">
				<xs:complexType>					
					<xs:sequence>
					</xs:sequence>
				</xs:complexType>
			</xs:element>			
			<!--===============================-->
			<xs:element name="GetSpecialDayGroupInfo">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Token" type="pt:ReferenceToken" minOccurs="1" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Tokens of SpecialDayGroupInfo items to get.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<!--===============================-->
			<xs:element name="GetSpecialDayGroupInfoResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="SpecialDayGroupInfo" type="tsc:SpecialDayGroupInfo" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>List of SpecialDayGroupInfo items.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<!--===============================-->
			<xs:element name="GetSpecialDayGroupInfoList">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Limit" type="xs:int" minOccurs="0">
							<xs:annotation>
								<xs:documentation>
									Maximum number of entries to return. If not specified, less than 
									one or higher than what the device supports, the number 
									of items is determined by the device.
								</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="StartReference" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>
									Start returning entries from this start reference. 
									If not specified, entries shall start from the beginning of the dataset.
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<!--===============================-->
			<xs:element name="GetSpecialDayGroupInfoListResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="NextStartReference" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>
									StartReference to use in next call to get the following items. 
									If absent, no more items to get.
								</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="SpecialDayGroupInfo" type="tsc:SpecialDayGroupInfo" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>List of SpecialDayGroupInfo items.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<!--===============================-->
			<xs:element name="GetSpecialDayGroups">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Token" type="pt:ReferenceToken" minOccurs="1" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Tokens of the SpecialDayGroup items to get</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<!--===============================-->
			<xs:element name="GetSpecialDayGroupsResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="SpecialDayGroup" type="tsc:SpecialDayGroup" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>List of SpecialDayGroup items.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<!--===============================-->
			<xs:element name="GetSpecialDayGroupList">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Limit" type="xs:int" minOccurs="0">
							<xs:annotation>
								<xs:documentation>
									Maximum number of entries to return. If not specified, less than 
									one or higher than what the device supports, the number of 
									items is determined by the device.
								</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="StartReference" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>
									Start returning entries from this start reference. 
									If not specified, entries shall start from the beginning of the dataset.
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<!--===============================-->
			<xs:element name="GetSpecialDayGroupListResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="NextStartReference" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>StartReference to use in next call to get the following items. If absent, no more items to get.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="SpecialDayGroup" type="tsc:SpecialDayGroup" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>List of SpecialDayGroup items.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>			
			<!--===============================-->
			<xs:element name="CreateSpecialDayGroup">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="SpecialDayGroup" type="tsc:SpecialDayGroup" minOccurs="1">
							<xs:annotation>
								<xs:documentation>
									The special day group to create.
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<!--===============================-->
			<xs:element name="CreateSpecialDayGroupResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Token" type="pt:ReferenceToken" minOccurs="1">
							<xs:annotation>
								<xs:documentation>The token of created special day group.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>		
			<!--===============================-->
			<xs:element name="ModifySpecialDayGroup">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="SpecialDayGroup" type="tsc:SpecialDayGroup" minOccurs="1">
							<xs:annotation>
								<xs:documentation>
									The special day group to modify/update.
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<!--===============================-->
			<xs:element name="ModifySpecialDayGroupResponse">
				<xs:complexType>
					<xs:sequence>
					</xs:sequence>
				</xs:complexType>
			</xs:element>		
			<!--===============================-->
			<xs:element name="DeleteSpecialDayGroup">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Token" type="pt:ReferenceToken">
							<xs:annotation>
								<xs:documentation>
									The token of the special day group item to delete.
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<!--===============================-->
			<xs:element name="DeleteSpecialDayGroupResponse">
				<xs:complexType>
					<xs:sequence/>
				</xs:complexType>
			</xs:element>			
			<!--===============================-->
			<!-- #################-->
		</xs:schema>
