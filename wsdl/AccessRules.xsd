		<xs:schema targetNamespace="http://www.onvif.org/ver10/accessrules/wsdl" 
		xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:pt="http://www.onvif.org/ver10/pacs" 
		xmlns:tar="http://www.onvif.org/ver10/accessrules/wsdl" elementFormDefault="qualified" version="1.0">
			<xs:import namespace="http://www.onvif.org/ver10/pacs" schemaLocation="types.xsd"/>			
			<!--ServiceCapabilities definitions-->
			<xs:complexType name="ServiceCapabilities">
				<xs:annotation>
					<xs:documentation>
						The service capabilities reflect optional functionality of a service.
						The information is static and does not change during device operation.
						The following capabilities are available:
					</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/>
				</xs:sequence>
				<xs:attribute name="MaxLimit" use="required">
					<xs:annotation>
						<xs:documentation>
							The maximum number of entries returned by a single GetList request. 
							The device shall never return more than this number of entities in a single response.
						</xs:documentation>
				  </xs:annotation>
				  <xs:simpleType>
					<xs:restriction base="xs:unsignedInt">
						<xs:minInclusive value="1"/>
					</xs:restriction>
				  </xs:simpleType>
				</xs:attribute>
				<xs:attribute name="MaxAccessProfiles" use="required">
					<xs:annotation>
						<xs:documentation>
							The maximum number of access profiles supported by the device.
						</xs:documentation>
				  </xs:annotation>
				  <xs:simpleType>
					<xs:restriction base="xs:unsignedInt">
						<xs:minInclusive value="1"/>
					</xs:restriction>
				  </xs:simpleType>
				</xs:attribute>
				<xs:attribute name="MaxAccessPoliciesPerAccessProfile" use="required">
					<xs:annotation>
						<xs:documentation>
							The maximum number of access policies per access profile supported by the device.
						</xs:documentation>
				  </xs:annotation>
				  <xs:simpleType>
					<xs:restriction base="xs:unsignedInt">
						<xs:minInclusive value="1"/>
					</xs:restriction>
				  </xs:simpleType>
				</xs:attribute>
				<xs:attribute name="MultipleSchedulesPerAccessPointSupported" type="xs:boolean" use="required">
					<xs:annotation>
						<xs:documentation>
							True if an access profile with several access policies can refer to the same access point.
						</xs:documentation>
				  </xs:annotation>
				</xs:attribute>
				<xs:anyAttribute processContents="lax"/>
			</xs:complexType>
			<!-- End of definition -->
			<!--AccessPolicy definitions-->
			<xs:complexType name="AccessPolicy">
				<xs:annotation>
					<xs:documentation>
						An association of an access point and a schedule.
						It defines when an access point can be accessed using an access profile which contains this access policy.
						Several access policies specifying different schedules for the same access point will result in a union of the schedules.
					</xs:documentation>
				</xs:annotation>			
				<xs:sequence>
					<xs:element name="ScheduleToken" type="pt:ReferenceToken">
						<xs:annotation>
							<xs:documentation>Reference to the Schedule</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Entity" type="pt:ReferenceToken">
						<xs:annotation>
							<xs:documentation>
								Reference to the entity used by rule engine; the entity type may be 
								specified by the optional EntityType field explained below but is typically an access point. 
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="EntityType" type="xs:QName" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
							Optional entity type; if missing, an access point as defined by the ONVIF AccessControl service should be assumed. 
							This can also be represented by the QName value "tac:AccessPointInfo" - where tac is the namespace of the access rules service: &quot;http://www.onvif.org/ver10/accesscontrol/wsdl&quot;. 
							This field is provided for future extensions; it will allow an access policy being extended to cover entity types other than access points as well.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Extension" type="tar:AccessPolicyExtension" minOccurs="0"/>		
				</xs:sequence>
				<xs:anyAttribute processContents="lax"/>				
			</xs:complexType>
			<xs:complexType name="AccessPolicyExtension"> 
				<xs:sequence>
					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:complexType>
			<!-- End of definition -->
			<!--AccessProfileInfo definitions-->
			<xs:complexType name="AccessProfileInfo">
				<xs:annotation>
					<xs:documentation>
						A subset of access profile details. Used as extension base for AccessProfile.
					</xs:documentation>
				</xs:annotation>
				<xs:complexContent>
					<xs:extension base="pt:DataEntity">
						<xs:sequence>
							<xs:element name="Name" type="pt:Name">
								<xs:annotation>
									<xs:documentation>A user readable name. It shall be up to 64 characters.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Description" type="pt:Description" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Optional user readable description for the AccessProfile. It shall be up to 1024 characters.</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<!-- End of definition -->
			<!--AccessProfileInfo definitions-->
			<xs:complexType name="AccessProfile">
				<xs:annotation>
					<xs:documentation>
						A collection of access policies. It is used to define role based access.
					</xs:documentation>
				</xs:annotation>
				<xs:complexContent>
					<xs:extension base="tar:AccessProfileInfo">
						<xs:sequence>
							<xs:element name="AccessPolicy" type="tar:AccessPolicy" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>List of AccessPolicy items.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Extension" type="tar:AccessProfileExtension" minOccurs="0"/>		
						</xs:sequence>
						<xs:anyAttribute processContents="lax"/>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="AccessProfileExtension"> 
				<xs:sequence>
					<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:complexType>
			<!-- End of data types definition -->
			<!-- #################-->
			<!-- Message request / response elements-->
			<xs:element name="GetServiceCapabilities">
				<xs:complexType>
					<xs:sequence/>
				</xs:complexType>
			</xs:element>
			<!--===============================-->
			<xs:element name="GetServiceCapabilitiesResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Capabilities" type="tar:ServiceCapabilities">
							<xs:annotation>
								<xs:documentation>The capabilities for the access rules service is returned in the Capabilities element.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<!--===============================-->
			<xs:element name="GetAccessProfileInfo">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Token" type="pt:ReferenceToken" minOccurs="1" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Tokens of AccessProfileInfo items to get.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<!--===============================-->
			<xs:element name="GetAccessProfileInfoResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="AccessProfileInfo" type="tar:AccessProfileInfo" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<!--===============================-->
			<xs:element name="GetAccessProfileInfoList">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Limit" type="xs:int" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Maximum number of entries to return. If not specified, less than one or higher than what the device supports, the number of items is determined by the device.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="StartReference" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Start returning entries from this start reference. If not specified, entries shall start from the beginning of the dataset.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<!--===============================-->
			<xs:element name="GetAccessProfileInfoListResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="NextStartReference" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>StartReference to use in next call to get the following items. If absent, no more items to get.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="AccessProfileInfo" type="tar:AccessProfileInfo" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>List of AccessProfileInfo items.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<!--===============================-->
			<xs:element name="GetAccessProfiles">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Token" type="pt:ReferenceToken" minOccurs="1" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Tokens of AccessProfile items to get.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<!--===============================-->
			<xs:element name="GetAccessProfilesResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="AccessProfile" type="tar:AccessProfile" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<!--===============================-->
			<xs:element name="GetAccessProfileList">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Limit" type="xs:int" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Maximum number of entries to return. If not specified, less than one or higher than what the device supports, the number of items is determined by the device.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="StartReference" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Start returning entries from this start reference. If not specified, entries shall start from the beginning of the dataset.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<!--===============================-->
			<xs:element name="GetAccessProfileListResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="NextStartReference" type="xs:string" minOccurs="0">
							<xs:annotation>
								<xs:documentation>StartReference to use in next call to get the following items. If absent, no more items to get.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="AccessProfile" type="tar:AccessProfile" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>List of AccessProfile items.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>			
			<!--===============================-->
			<xs:element name="CreateAccessProfile">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="AccessProfile" type="tar:AccessProfile">
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>			
			<!--===============================-->
			<xs:element name="CreateAccessProfileResponse">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Token" type="pt:ReferenceToken">
							<xs:annotation>
								<xs:documentation>Token of an AccessProfile item</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>	
			<!--===============================-->
			<xs:element name="ModifyAccessProfile">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="AccessProfile" type="tar:AccessProfile">
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>			
			<!--===============================-->
			<xs:element name="ModifyAccessProfileResponse">
				<xs:complexType>
					<xs:sequence>
					</xs:sequence>
				</xs:complexType>
			</xs:element>			
			<!--===============================-->
			<xs:element name="DeleteAccessProfile">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Token" type="pt:ReferenceToken">
							<xs:annotation>
								<xs:documentation>Token of an AccessProfile item</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<!--===============================-->
			<xs:element name="DeleteAccessProfileResponse">
				<xs:complexType>
					<xs:sequence/>
				</xs:complexType>
			</xs:element>
			<!-- #################-->
		</xs:schema>
