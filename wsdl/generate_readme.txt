Инструкция по пересозданию прокси классов из ONVIF WSDL


Этот документ содержит инструкцию, как пересоздать прокси классы для DTT.
Необходимость в пересоздании этих классов возникает если:

* Что-то поменялось в WSDL на сайте ONVIF (добавили/удалили метод или свойство и т. д.)
* Запланированы тесты для нового сервиса. Соответственно, WSDL для этого сервиса необходимо
  обработать и включить полученный прокси класс в DTT

Перегенерация происходит с помощью утилиты svcutil.exe. Однако, из-за того, что мы сделали
несколько изменений в коде сгенерированных классов, необходимо вручную смержить эти изменения 
с новыми прокси классами. Это основная проблема перегенерации прокси классов.


Пошаговая инструкция по перегенерации прокси-классов:

1. Забрать с TFS последнюю версию папки $/ON-0110/wsdl. Папка содержит текущие версии WSDL, 
   используемые в DTT. Так же в папке содержатся bat-файлы для запуска генерации
2. С сайта https://www.onvif.org/profiles/specifications/ нужно скачать изменённые (новые) 
   WSDL и, при необходимости, XSD файлы
3. Скачанные файлы нужно скопировать в локальную версию папки $/ON-0110/wsdl. Обновлённые 
   версии файлов просто заменяют собой старые версии. Если добавляется новый файл WSDL/XSD 
   нужно добавить его в TFS
4. Если добавились новые файлы - их имена нужно добавить в вызов svcutil. Нужно открыть файл 
   generateallproxies.bat для редактирования. Если новый WSDL/XSD файл определяет операции/ 
   данные в namespace с ver10 (например, targetNamespace="http://www.onvif.org/ver10/..."), 
   этот файл нужно добавить в первую команду с output-> onvif1.cs. Если файл определяет 
   операции/данные в namespace с ver20, его нужно добавить во вторую команду с output -> 
   onvif2.cs
5. Запустить "Developer Command Prompt for VS". В открывшемся окне перейти в локальную папку 
   $/ON-0110/wsdl. Запустить generateallproxies.bat
6. В VS2015 или выше открыть проект из $/ON-0110/OnvifProxies. В проекте, прописать правильный 
   путь к WSDL в строке <string codeFolderPath = @"...";>
7. Если добавляется новый WSDL/XSD файл, его namespace нужно добавить в Onvif1Namespaces (для 
   ver10), или в Onvif2Namespaces (для ver20), или в StorageNamespaces (для storage)
8. Скомпилировать/запустить приложение OnvifProxies. Оно сгенерирует в папке ./All файлы: 
   onvif_.cs, onvif1_.cs, onvif2_.cs, storage_.cs
9. С помощью утилиты для мержа нужно пройти по файлам и смержить только те изменения, которые 
   связанны с изменениями в ONVIF, но оставить наши изменения, сделанные в DTT. Если 
   обнаружилось очень много изменений - скорее всего это связано с тем, что новая версия 
   svcutil по-другому форматирует сгенерированные классы. В этом случае, нужно убедиться, что 
   применялась действительно последняя версия svcutil, и если это так, поменять форматирование 
   в классах из DTT (не в тех, что только что сгенерированы)
   Изменения, которые нужно оставлять в коде:
      - Классы обёрнуты в namespace
      - Удалены атрибуты Order
      - Изменены типы полей классов
      - Добавлены дополнительные поля/методы в классы
10. В VS отформатировать автоматически файлы Onvif.cs, Onvif1.cs, Onvif2.cs. Скомпилировать 
   проект и исправить ошибки компиляции, если таковые проявятся
11. Закоммитить и зачекинить все изменения



